{
  "DataRevision": 1030554818,
  "Description": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on everything to do with programming including the experience of programming. We\u2019ve named it \u2039Programming\u203a for short. Papers are welcome from any part of the programming research lifecycle, as are papers on programming practice and experience.\nBrowse the conference program\nAccess the full-text .pdfs of all &lt;Programming&gt; 2017 research papers\nDownload the &lt;Programming&gt; 2017 booklet\nConfero mobile app\nCatering menu\n\nJournal Affiliated\nA new journal has been created as the publication vehicle for \u2039Programming\u203a. Papers submitted to this journal are reviewed by referees chosen by the \u2039Programming\u203a Program Chair, who is an associate editor for the journal. Authors of accepted papers are invited to present at the conference as a requirement for publication.",
  "Event": "programming-2017",
  "Items": [
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "miniplop-2017-pattern-mining-workshop",
      "PersonsString": "",
      "Title": "Pattern Mining Workshop",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-pattern-mining-workshop"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "miniplop-2017-closing",
      "PersonsString": "",
      "Title": "Closing",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-closing"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "miniplop-2017-writers-workshop-and-games",
      "PersonsString": "",
      "Title": "Writers' Workshop and Games",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-writers-workshop-and-games"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "miniplop-2017-opening",
      "PersonsString": "",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-opening"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "miniplop-2017-writers-workshop",
      "PersonsString": "",
      "Title": "Writers' Workshop",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-writers-workshop"
    },
    {
      "Abstract": "The original idea of using pattern languages for design knowledge was proposed by the architect Christopher Alexander in the 1970s. The book he wrote with his colleagues comprises 253 patterns on practical architectural design. Ten years after the book was published, in the late 1980s, Alexander\u2019s idea of a pattern language was adopted in the field of software design by K. Beck and W. Cunningham, followed by the famous book \u201cDesign Patterns\u201d by E. Gamma, et al. Since the 1990s, the fields in which pattern languages have been applied has greatly expanded, encompassing education, innovation, collaboration, and other professional areas and activity in everyday life, which we term these as \u201cPattern Language 3.0\u201d. The challenge for pattern languages is finding ways to share knowledge and how to involve people into the collaborating design process. In this talk, I will give an overview of the history and frontiers of pattern languages, including examples in new domains, creating processes, and new ways for expressing pattern languages.\nBio\nTakashi Iba is an associate professor in the Faculty of Policy Management at Keio University. He received a Ph.D. in Media and Governance from Keio University. He is the president of CreativeShift Lab, Inc. and a board member of The Hillside Group. Collaborating with his students, Dr. Iba created many pattern languages concerning human actions like Learning Patterns (2014), Presentation Patterns (2014), Collaboration Patterns (2014), Words for a Journey (2015), Project Design Patterns (2016) and also academic books in Japanese such as the bestselling Introduction to Complex Systems (1998).",
      "Affiliations": ["Keio University, Japan"],
      "AffiliationsString": "Keio University, Japan",
      "Authors": ["takashiiba1"],
      "Key": "miniplop-2017-keynote",
      "PersonsString": "Takashi Iba",
      "Title": "Generations of Pattern Language: Architecture, Software, and Human Actions",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/miniplop-2017-keynote"
    },
    {
      "Abstract": "For software developers, source code is the static blueprint that is transformed into running behavior. In modern applications, this behavior is often facilitated through distributed systems. Thus, behavior developers observe on their machine is usually not the same as it is perceived by end users. We propose a system where source code is mapped with information gathered at runtime to make programs fell \u201calive\u201d. We implemented a system that maps runtime performance to source code artifacts. In this demo, we show how performance problems can be prevented in different scenarios.",
      "Affiliations": ["University of Zurich"],
      "AffiliationsString": "University of Zurich",
      "Authors": ["jurgencito"],
      "Key": "px-2017-runtime-metric-meets-developer-augmenting-source-code-with-runtime-information-to-make-programs-live",
      "PersonsString": "JÃ¼rgen Cito",
      "Title": "Runtime Metric Meets Developer: Augmenting Source Code with Runtime Information to Make Programs Live ",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/px-2017-runtime-metric-meets-developer-augmenting-source-code-with-runtime-information-to-make-programs-live"
    },
    {
      "Abstract": "Modern hardware is increasingly becoming heterogeneous to help improve the efficiency of our software and systems.&nbsp;Processors incorporating cores with diverse performance and power characteristics are already found in mobile devices. Software running on such processors can choose between a high performing but power hungry core or a slow core with lower power consumption. Individual cores can further be clocked at different frequencies. This shift towards heterogeneity is not limited to processors alone. The challenge to scale DRAM beyond 20 nm led scientists to look for new memory technologies. Of the known alternatives, phase change memory is the most promising. But owing to certain drawbacks, of which higher latency and limited lifetime are the most prominent, recent research proposes using a combination of DRAM and PCM, also called hybrid memory, to best fulfill the memory requirements of future applications.&nbsp;On the software side, developers today increasingly prefer managed languages for improved productivity. Managed workloads are ubiquitous, yet, prior work in making the best use of heterogeneous hardware through scheduling on different core types, performance prediction for frequency scaling, and dynamic memory management for systems with hybrid memory almost entirely assumes native applications written in C and C++. In this talk, I will discuss new opportunities for improving the performance and efficiency of managed language applications running on heterogeneous hardware. I will first introduce a new performance predictor for multithreaded managed applications that enables accurately estimating the execution time of a managed application at a different frequency setting. I will then discuss the challenge of scheduling concurrent garbage collection, a critical component of all managed runtimes, on a heterogeneous multicore. Our proposed scheduler dynamically adjusts the amount of time the collector threads spend on the high performing versus the slow core leading to improved efficiency and better performance compared to existing proposals. Finally, I will briefly share early results and our experiences with building a new garbage collector for systems with hybrid memory that mitigates a major drawback of PCM i.e., limited lifetime of individual cells, while also improving energy efficiency. In all three case studies, I will show how making the language runtime aware of the underlying hardware leads to a higher reduction in energy consumption without sacrificing too much performance.",
      "Affiliations": ["Ghent University"],
      "AffiliationsString": "Ghent University",
      "Authors": ["shoaibakram"],
      "Key": "pass-2017-invited-talk-2",
      "PersonsString": "Shoaib Akram",
      "Title": "Managed Language Runtimes on Heterogeneous Hardware: Optimizations for Performance, Efficiency and Lifetime Improvement",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/pass-2017-invited-talk-2"
    },
    {
      "Abstract": "Learning how to design and implement a program is hard. Most text books on programming describe each topic in terms of syntax followed by some examples. Little or no attention is paid to how to design a program systematically. Where design is treated, it is often accommodated in a separate course. As a consequence, Integration of these types of knowledge and skills often does not happen.\nFor the development of concurrent programs, we have developed a systematic design method in which the development process is divided into a sequence of explicit, manageable steps. The procedure is intended to scaffold student\u2019s learning of concurrency concepts and their application as part of a first year university course in object-oriented programming. The procedure imparts conceptual knowledge and scaffolds students on how to analyze, design and implement a concurrent program step-by-step. Each steps comprise (standard) OO structuring, decisions to take, and reflection on both the design and implementation process. The systematic method, helps students to develop better software, to understand difficult concepts and to integrate conceptual and procedural knowledge. Moreover, students learn to think systematically before act.",
      "Affiliations": ["Open University of the Netherlands, The Netherlands"],
      "AffiliationsString": "Open University of the Netherlands, The Netherlands",
      "Authors": ["harriepassier"],
      "Key": "pass-2017-invited-talk-iii",
      "PersonsString": "Harrie Passier",
      "Title": "Teaching a Systematic Design Method for Concurrent Programs",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/pass-2017-invited-talk-iii"
    },
    {
      "Abstract": "Business applications are usually data-intensive. The process of designing and implementing such applications benefits from working with realistic data to sharpen requirements and discover pitfalls. However, such data is usually quite extensive and the feedback cycles during programming and design activities can become long and distracting. As a result, programmers might prefer abstract thinking and mental simulations over working with concrete, realistic data. We propose a new approach supporting live programming, with immediate feedback and explorable runtime data, for the domain of data-intensive business applications on top of relational databases. With the integration of streamed access to sampled data, we can employ productive traits of a live programming environment such as Squeak/Smalltalk, which is not optimized for the processing of huge amounts of data and is hence not well-suited for such tasks. We describe two representative scenarios and also discuss limitations by putting our approach in relation to the current development of business applications.",
      "Affiliations": [
        "Hasso Plattner Institute",
        "Hasso Plattner Institute",
        "HPI",
        "Hasso Plattner Institute"
      ],
      "AffiliationsString": "Hasso Plattner Institute, HPI",
      "Authors": [
        "patrickrein",
        "marceltaeumel",
        "roberthirschfeld",
        "michaelperscheid"
      ],
      "Key": "px-2017-exploratory-development-of-data-intensive-applications",
      "PersonsString": "Patrick Rein, Marcel Taeumel, Robert Hirschfeld and Michael Perscheid",
      "Title": "Exploratory Development of Data-intensive Applications",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/px-2017-exploratory-development-of-data-intensive-applications"
    },
    {
      "Abstract": "The ECA approach to analyse energy consumption of systems controlled by software will be discussed. Applications include thermostats, fridges, cars, and they can be analysed for their electricity, gas or water usage. This can be used during design of the systems to reduce the energy consumption. This approach need to incorporate details of the whole software stack (including libraries, operating system and language used), and include models of the hardware that is controlled. This talk focusses on the foundation, validity, scope and identifies challenges for the future.",
      "Affiliations": ["Open University of the Netherlands, The Netherlands"],
      "AffiliationsString": "Open University of the Netherlands, The Netherlands",
      "Authors": ["bernardvangastel"],
      "Key": "pass-2017-invited-talk",
      "PersonsString": "Bernard van Gastel",
      "Title": "Analysing Energy Consumption of Systems Controlled by Software",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/pass-2017-invited-talk"
    },
    {
      "Abstract": "Interactive debuggers are indispensable in many software development scenarios. However, they are often hard to extend and more importantly, their capabilities are limited to an Application Programming Interface (API) provided by the runtime executing the corresponding programming language.\nWe propose an approach that allows to use the live tools of a Smalltalk environment for other programming languages. The approach is based on interpreter-level composition, ultimately making a full-fledged Integrated Development Environment (IDE) part of the language execution process. This allows to directly control interpreters of foreign languages from Smalltalk. It also enables tool reuse and provides the ability to rapidly build new tools.\nAs an example, we demonstrate how we have combined Squeak/Smalltalk and PyPy\u2019s Python implementation. We then reused Squeak\u2019s debugger, so that it enables edit-and-continue style debugging of Python applications \u2014 something that is currently not supported by Python\u2019s PDB or any Python IDE.",
      "Affiliations": [
        "Hasso-Plattner-Institute, Potsdam",
        "Hasso-Plattner-Institute, Potsdam",
        "HPI, Germany",
        "HPI"
      ],
      "AffiliationsString": "Hasso-Plattner-Institute, Potsdam, HPI, Germany, HPI",
      "Authors": [
        "fabioniephaus",
        "timfelgentreff",
        "tobiaspape",
        "roberthirschfeld"
      ],
      "Key": "px-2017-squeak-makes-a-good-python-debugger",
      "PersonsString": "Fabio Niephaus, Tim Felgentreff, Tobias Pape and Robert Hirschfeld",
      "Title": "Squeak Makes a Good Python Debugger",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/px-2017-squeak-makes-a-good-python-debugger"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "px-2017-open-discussion-and-feedback",
      "PersonsString": "",
      "Title": "Open discussion and feedback",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/px-2017-open-discussion-and-feedback"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "pass-2017-discussion-ii",
      "PersonsString": "",
      "Title": "discussion (common roadmap)",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/pass-2017-discussion-ii"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Vrije Universiteit Brussel, Belgium",
        "Universiteit Gent, Belgium",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": ", Vrije Universiteit Brussel, Belgium, Universiteit Gent, Belgium, Vrije Universiteit Brussel",
      "Authors": [
        "christophedetroyer",
        "jensnicolay",
        "christophescholliers",
        "wolfgangdemeuter"
      ],
      "Key": "pass-2017-abstractions-for-distributed-event-driven-systems",
      "PersonsString": "Christophe De Troyer, Jens Nicolay, Christophe Scholliers and Wolfgang De Meuter",
      "Title": "Abstractions for Distributed Event-Driven Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/pass-2017-abstractions-for-distributed-event-driven-systems"
    },
    {
      "Abstract": "Programmers write source code that compiles to programs, and users execute the programs to benefit from their features. While issue-tracking systems help communication between these two groups of people, feature requests have usually been written in text with optional figures that follows community guidelines and needs human interpretation to understand what to implement in which part of the source code. To make this process more direct, intuitive, and efficient, a streamlined interaction design called \u201cUser- Generated Variables (UGV)\u201d is proposed. First, the users can declare parameters that they want to tweak in existing programs without reading or understanding the source code. Then, the system turns the proposal into variable declarations in the relevant part of the source code. Finally, the programmers are notified of the proposal and can implement the actual features to reflect changes in the variable value. The proposed interaction is implemented in two existing Web-based Integrated Development Environments, and its user experience is briefly tested with eight users and programmers. Its technical requirements, limitations, and potentials are discussed. The content of this paper with live demo will be available at http://junkato.jp/ugv.",
      "Affiliations": [
        "National Institute of Advanced Industrial Science and Technology, Japan",
        "National Institute of Advanced Industrial Science and Technology, Japan"
      ],
      "AffiliationsString": "National Institute of Advanced Industrial Science and Technology, Japan",
      "Authors": [
        "junkato",
        "masatakagoto"
      ],
      "Key": "px-2017-user-generated-variables-streamlined-interaction-design-for-feature-requests-and-implementations",
      "PersonsString": "Jun Kato and Masataka Goto",
      "Title": "User-Generated Variables: Streamlined Interaction Design for Feature Requests and Implementations",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/px-2017-user-generated-variables-streamlined-interaction-design-for-feature-requests-and-implementations"
    },
    {
      "Abstract": "",
      "Affiliations": ["Philipps-UniversitÃ¤t Marburg"],
      "AffiliationsString": "Philipps-UniversitÃ¤t Marburg",
      "Authors": ["christophbockisch"],
      "Key": "pass-2017-wrap-up",
      "PersonsString": "Christoph Bockisch",
      "Title": "wrap-up",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/pass-2017-wrap-up"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "px-2017-arrival-and-workshop-introduction",
      "PersonsString": "",
      "Title": "Arrival and Workshop Introduction",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/px-2017-arrival-and-workshop-introduction"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "pass-2017-discussion",
      "PersonsString": "",
      "Title": "discussion",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/pass-2017-discussion"
    },
    {
      "Abstract": "When we write a program that manipulates data structures, we often draw and manipulate a visual image of the structures in our mind. In order to immediately connect those mental images with the data objects created by the program, we propose a live programming environment, called Kanon, specialized for data structure programming. It automatically executes a program being edited, and draws objects and their mutual references as a node-link diagram. In order to visualize information relevant to the programmer\u2019s concern, it offers two visualization modes based on the cursor position in the editor. It also offers two interactive mechanisms that relate elements in the program to elements on the diagram, and vice versa. The implementation includes a novel technique for mental map preservation of visual diagrams.",
      "Affiliations": [
        "Department of Information Science, Tokyo Institute of Technology",
        "Tokyo Institute of Technology",
        "Tokyo Institute of Technology",
        "Tokyo Institute of Technology"
      ],
      "AffiliationsString": "Department of Information Science, Tokyo Institute of Technology, Tokyo Institute of Technology",
      "Authors": [
        "akiooka",
        "hidehikomasuhara",
        "tomokiimai",
        "tomoyukiaotani"
      ],
      "Key": "px-2017-live-data-structure-programming",
      "PersonsString": "Akio Oka, Hidehiko Masuhara, Tomoki Imai and Tomoyuki Aotani",
      "Title": "Live Data Structure Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/px-2017-live-data-structure-programming"
    },
    {
      "Abstract": "",
      "Affiliations": ["Raincode, Belgium"],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "cocodo-2017-welcome-and-introductions",
      "PersonsString": "Vadim Zaytsev",
      "Title": "Welcome and Introductions",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-welcome-and-introductions"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["adrianjohnstone"],
      "Key": "cocodo-2017-funcons-as-the-future-of-compiler-compilers",
      "PersonsString": "Adrian Johnstone",
      "Title": "FunCons as the Future of Compiler Compilers",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-funcons-as-the-future-of-compiler-compilers"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Royal Holloway University of London"
      ],
      "AffiliationsString": ", Royal Holloway University of London",
      "Authors": [
        "adrianjohnstone",
        "elizabethscott"
      ],
      "Key": "cocodo-2017-attribute-grammars-for-dsls-for-music-and-3d-graphics",
      "PersonsString": "Adrian Johnstone and Elizabeth Scott",
      "Title": "Attribute Grammars for DSLs for Music and 3D Graphics",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-attribute-grammars-for-dsls-for-music-and-3d-graphics"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Koblenz-Landau, Germany"],
      "AffiliationsString": "University of Koblenz-Landau, Germany",
      "Authors": ["ralflammel"],
      "Key": "cocodo-2017-from-compilers-to-software-language-engineering",
      "PersonsString": "Ralf LÃ¤mmel",
      "Title": "From Compilers to Software Language Engineering",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-from-compilers-to-software-language-engineering"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "McGill University, Canada",
        "UniversitÃ© CÃ´te d'Azur, France"
      ],
      "AffiliationsString": "McGill University, Canada, UniversitÃ© CÃ´te d'Azur, France",
      "Authors": [
        "guntermussbacher",
        "sebastienmosser"
      ],
      "Key": "momo-2017-papers-welcome-introduction",
      "PersonsString": "Gunter Mussbacher and SÃ©bastien Mosser",
      "Title": "Welcome & Introduction",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-welcome-introduction"
    },
    {
      "Abstract": "Program analyses are an important tool to check if a system fulfills its specification. A typical implementation strategy for program analyses is to use an imperative, general-purpose language like Java, and access the program to be analyzed through libraries that offer an API for reading, writing and manipulating intermediate code, such as BCEL or ASM for Java bytecode. We claim that this hampers reuse and interoperability. In this paper we propose a complete ECore-metamodel for Java bytecode, which can be used as a common basis for arbitrary program analyses. We provide tools to generate instances of our bytecode metamodel from Java code in class file format to and vice versa. Code analyses as well as instrumentations can then be defined as model transformations in a declarative, domain-specific language. As a consequence, the implementation of program analysis becomes more concise, more readable and more modular. We demonstrate the effectiveness of this approach by two case studies: profiling of timing performance and model checking of reachability requirements.",
      "Affiliations": [
        "",
        "Philipps-UniversitÃ¤t Marburg",
        "",
        "University of Twente"
      ],
      "AffiliationsString": ", Philipps-UniversitÃ¤t Marburg, University of Twente",
      "Authors": [
        "bugramehmetyildiz",
        "christophbockisch",
        "arendrensink",
        "mehmetaksit"
      ],
      "Key": "momo-2017-papers-an-mde-approach-for-modular-program-analyses",
      "PersonsString": "Bugra Mehmet Yildiz, Christoph Bockisch, Arend Rensink and Mehmet Aksit",
      "Title": "An MDE Approach for Modular Program Analyses",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-an-mde-approach-for-modular-program-analyses"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "momo-2017-papers-discussion-afternoon-",
      "PersonsString": "",
      "Title": "Discussion (Afternoon)",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-discussion-afternoon-"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "momo-2017-papers-discussions-morning-",
      "PersonsString": "",
      "Title": "Discussions (morning)",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-discussions-morning-"
    },
    {
      "Abstract": "Designing a secure software system requires the ability to represent and reason about a wide variety of security concerns. Existing modelling representations lack a comprehensive set of security building blocks or lack support for composition or refinement of the design under consideration. We propose a new modular meta-model for representing these security designs. This model supports both composition for more complex solutions and representing different levels of abstraction to model the underlying details. This meta-model can subsequently be used for the construction of security solutions, supporting a wide range of mechanisms on a wide variety of abstraction levels, thereby providing a foundation for the security-by-design approach.",
      "Affiliations": [
        "",
        "",
        "",
        "Katholieke Universiteit Leuven"
      ],
      "AffiliationsString": ", Katholieke Universiteit Leuven",
      "Authors": [
        "laurenssion",
        "koenyskout",
        "riccardoscandariato",
        "wouterjoosen"
      ],
      "Key": "momo-2017-papers-a-modular-meta-model-for-security-solutions",
      "PersonsString": "Laurens Sion, Koen Yskout, Riccardo Scandariato and Wouter Joosen",
      "Title": "A Modular Meta-model for Security Solutions",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-a-modular-meta-model-for-security-solutions"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Bergen"],
      "AffiliationsString": "University of Bergen",
      "Authors": ["anyahelenebagge"],
      "Key": "cocodo-2017-late-phases-of-compilation-in-rascal",
      "PersonsString": "Anya Helene Bagge",
      "Title": "Late Phases of Compilation in Rascal",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-late-phases-of-compilation-in-rascal"
    },
    {
      "Abstract": "In software development, we must always be ready to respond to changes. To reflect changes flexibly, code should be organized according to system usage. Making code modularization fully reflect system usage may seem to be too ambitious. Fortunately, tests capture system usage in a well readable form of examples. However, relating a change to the corresponding place in code remains difficult because code is organized according to technical concerns, such as objects. In this paper, we propose test driven modularization, which aims at organizing code according to tests and enforces tests to be represented in code. For this, use case modularization is adapted to accommodate expressing tests in code. Test driven modularization remains compatible with use case modularization while at the same time opens new capabilities of having different views on software based on use cases and various tests simultaneously. The results of measuring effort to comprehend user actions in user interface of scenarios and complexity of use case modules show that employing user acceptance tests in code improves code comprehension and maintenance. Also, test driven modularization reduces switching between tests and code in test driven development.",
      "Affiliations": [
        "Slovak University of Technology in Bratislava",
        "Slovak University of Technology in Bratislava"
      ],
      "AffiliationsString": "Slovak University of Technology in Bratislava",
      "Authors": [
        "michalbystricky",
        "valentinovranic"
      ],
      "Key": "momo-2017-papers-from-use-case-driven-to-test-driven-modularization",
      "PersonsString": "Michal BystrickÃ½ and Valentino VraniÄ",
      "Title": "Presentation only: From Use Case Driven to Test Driven Modularization",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-from-use-case-driven-to-test-driven-modularization"
    },
    {
      "Abstract": "After two decades of research on superimpositions, aspects, and complex event notations, I suggest several basic principles for specifying and formally verifying modules using such cross-cutting notations. These principles can also be applicable for emerging applications and new modularization constructs. \nFirst, it is essential to find a clean semantic definition for the construct, e.g., viewing aspects as a system transformer. This leads to the need for specification as the relation between \u201cbefore\u201d and \u201cafter\u201d applying the construct. Specifications need also to carefully include the context in order to be verifiable. Verification needs to be done for generic contexts, in advance of use in applications, and must deal with interferences among such complex modules. Finally, existing automatic tools and results from formal methods can and should be adapted to new modularity constructs.\nAfter illustrating these ideas for aspects and complex events, I show their relevance for additional domains. As one example, autonomous systems, such as lunar rovers, need to be self-stabilizing under arbitrary faults (e.g., when cosmic rays corrupt small but key parts of computer memory). Such faults can throw the system to an otherwise \u201cimpossible\u201d state, and a self-stabilizing module needs to then return the system to normal operation without unnecessarily disturbing parts of the system that still are functioning correctly. Other examples include augmenting systems to analyze and optimize power consumption, and modeling internet or cloud security with several modules that simulate attacks, detect an ongoing attack, and/or prevent incursions or disruptions of service.\nBio\nShmuel Katz is an Emeritus Professor in the Computer Science Department at the Technion\u2014Israel Institute of Technology. He joined the Technion in 1981, helped develop and lead the Software Engineering degree track, and directed the Systems and Software Development Lab. His Sabbaticals and extended visits include UC Berkeley, Carnegie-Mellon University, University of Lancaster, University of Twente, Tampere University of Technology, and the University of Texas at Austin.\nHe has written over 100 journal and conference papers on using formal methods to improve software quality, modularity, and reliability. His early work focused on automatic generation of invariants, multiparty interactions for distributed programming, fault tolerance using self-stabilizing systems, and verifying properties such as database serializability using convenient execution sequences. Since 2000 his work has centered on specification and formal verification for aspect-oriented and event-driven programming. He was Editor-in-Chief of the Transactions on Aspect-Oriented Software Development from 2009 to 2011.",
      "Affiliations": ["Computer Science Dept., The Technion"],
      "AffiliationsString": "Computer Science Dept., The Technion",
      "Authors": ["shmuelkatz"],
      "Key": "modularity-2017-talks-formal-verification-for-cross-cutting-modularity",
      "PersonsString": "Shmuel Katz",
      "Title": "Formal Verification for Cross-cutting Modularity",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-formal-verification-for-cross-cutting-modularity"
    },
    {
      "Abstract": "In this talk I will first review existing units of reuse and techniques for separation of concerns, and explain how programming / modelling language features, in particular interfaces and composition operators, affect the capability of creating units that are both reusable and generic. I will then present the vision of Concern-oriented Reuse (CORE), a novel reuse approach that extends Model-Driven Engineering (MDE) with best practices from advanced modularization and separation of concerns techniques, goal modelling, and Software Product Lines (SPL). CORE advocates the use of a three-part interface to describe a new unit of reuse called concern that spans multiple development phases. The variation interface describes the available functional- and implementation alternatives that the concern encapsulates, and the impact of choosing one over another on system qualities. The customization interface allows adapting a chosen variation to a specific reuse context, while the usage interface defines how a customized concern may eventually be used. I will also elaborate on the support for delayed decision making in CORE, which makes it possible to build reusable concerns on top of other reusable concerns without restricting the lower-level genericity and variability unnecessarily.\nThroughout the talk I will illustrate the ideas of CORE on practical examples presented with our software design modelling tool TouchCORE.\nBio\nJ&ouml;rg Kienzle is an associate professor at the School of Computer Science at McGill University in Montreal, Canada, where he is leading the Software Engineering Laboratory. He holds a Ph.D. and engineering diploma from the Swiss Federal Institute of Technology in Lausanne (EPFL). His current research interests include concern-oriented software development, reuse of models, software development methods in general, aspect-orientation, distributed systems and fault tolerance. He has co-organized and organized many workshops (15 workshops on Aspect-Oriented Modelling, 6 1-week workshops on Modelling at the Bellairs Research Institute, 4 workshops on exception handling, 3 workshops on comparing modelling approaches), and is actively involved in the MODELS and Modularity:AOSD communities (PC member, workshop chair of MODELS, tutorial chair of MODELS, PC chair of Modularity:AOSD, PC chair of MODELS 2016).",
      "Affiliations": ["McGill University, Canada"],
      "AffiliationsString": "McGill University, Canada",
      "Authors": ["jorgkienzle"],
      "Key": "modularity-2017-talks-concern-oriented-reuse-combine-mde-aspect-orientation-and-software-product-lines-to-create-generic-crosscutting-yet-modular-units-of-reuse",
      "PersonsString": "JÃ¶rg Kienzle",
      "Title": "Concern-Oriented Reuse: Combine MDE, Aspect-Orientation and Software Product Lines to Create Generic, Crosscutting yet Modular Units of Reuse",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-concern-oriented-reuse-combine-mde-aspect-orientation-and-software-product-lines-to-create-generic-crosscutting-yet-modular-units-of-reuse"
    },
    {
      "Abstract": "Come to this session and hack Racket. Here\u2019s a rough plan to get us started.",
      "Affiliations": ["Northwestern University"],
      "AffiliationsString": "Northwestern University",
      "Authors": ["robbyfindler"],
      "Key": "cocodo-2017-fractals-in-racket",
      "PersonsString": "Robby Findler",
      "Title": "Experimenting with Racket as a Language Workbench",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-fractals-in-racket"
    },
    {
      "Abstract": "Separation of Concerns is an important aid to understand and construct large software systems. The concept of a Separation of Concerns Space (SoC Space) separates concerns from components and thereby, provides indices to structure component spaces, aids decomposition and composition.\nThe talk presents the concept, shows that it generalizes feature modeling, hybrid automata, context-oriented programming and other so far unrelated programming paradigms. We also define several general laws on SoC spaces that have a profound consequences for modularity and reuse. Since a SoC space provides indices to the component space, it offers techniques of index-based decomposition and composition. SoC Spaces form a new, specific and abstract form of composition system naturally supporting the principle of separation of concerns for a wide range of applications.\nBio\nUwe A&szlig;mann holds the Chair of Software Engineering at the Technische Universit&auml;t Dresden. He has obtained a PhD in compiler optimization and a habilitation on Invasive Software Composition (ISC), a composition technology for code fragments enabling flexible software reuse. ISC unifies generic, connector-,view-, and aspect-based programming for arbitrary program or modeling languages. The technology is demonstrated by the Reuseware environment, a meta-environment for the generation of software tools (http://www.reuseware.org), as well as the SkAT meta-environment based on Reference Attribute Grammars (https://bitbucket.org/svenkarol/skat/wiki/Home).\nCurrently, much of his research is embedded in the research centre Center for Advancing Electronics Dresden (cfAED), in which he takes part in several subprojects: orchestration of many cores (Orchestration Path), code generation for silicon-nanowire structures (Silicon Nanowire Path), and energy-adaptive software architectures (Highly-Adaptive Energy-Efficient Computing, HAEC). In the Orchestration Path, A&szlig;mann\u2019s group works on novel code generation techniques for many-core architectures and modern hardware structures. For Silicon Nanowires, novel hardware synthesis tools are investigated. In HAEC, A&szlig;mann and his assistants apply ISC to energy autotuning (EAT), a technique to dynamically recompose code adapted to the required quality of service, the context of the system, and the hardware platforms.\nUwe A&szlig;mann is also member of the 5G Lab Germany (http://www.5glab.de) and the ResUbic Lab on software for cyber-physical systems and the internet of things (http://www.resubic.org). In both labs, he works on software engineering techniques for cyber-physical systems and cloud-based robots, which present interesting challenges for context-sensitive and resource-efficient programming.",
      "Affiliations": ["TU Dresden, Germany"],
      "AffiliationsString": "TU Dresden, Germany",
      "Authors": ["uweamann"],
      "Key": "modularity-2017-talks-soc-spaces-indexes-for-composition",
      "PersonsString": "Uwe AÃmann",
      "Title": "SoC Spaces - Indexes for Composition",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-soc-spaces-indexes-for-composition"
    },
    {
      "Abstract": "Over the last 10 years we did a large remodularisation effort on Pharo. This talk will cover some challenges of bringing modularity in a real system. For the record, Pharo 60 as released is about 480 packages for about 80 committers. This talk will present:  \n \n Problems faces. \n Analyses to identify cycles and others. \n Concerns about bringing new abstractions (traits) in an existing system. \n The process we followed to be able to bootstrap a reflective kernel and build the complete system on this core. \n A new module system that we are prototyping. \n\nBio\nSt&eacute;phane is directeur de recherche at Inria. He leads the RMoD (http://rmod.lille.inria.fr) team. He is expert in two domains: object-oriented language design and reengineering. He worked on traits, composable groups of methods. Traits have been introduced in Pharo, Perl, PHP and under a variant into Scala and Fortress. He is also expert on software quality, program understanding, program visualisations, reengineering and metamodeling. He is one of the developer of Moose, an open-source software analysis platform http://www.moosetechnology.org/. He created http://www.synectique.eu/ a company building dedicated tools for advanced software analyses. He is one of the leader of Pharo (http://www.pharo.org/) a dynamic reflective object-oriented language supporting live programming. The objective of Pharo is to create an ecosystem where innovation and business bloom. He wrote several books such as Functional Programming in Scheme, Pharo by Example, Deep into Pharo, Object-oriented Reengineering Patterns, Dynamic web development with Seaside. According to google his h-index is 51 for more than 11000 citations. He would like to thanks all the researchers making reference to his work!",
      "Affiliations": [" INRIA Lille"],
      "AffiliationsString": " INRIA Lille",
      "Authors": ["stephaneducasse"],
      "Key": "modularity-2017-talks-modularity-from-the-trenches",
      "PersonsString": "StÃ©phane Ducasse",
      "Title": "Modularity from the Trenches",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-modularity-from-the-trenches"
    },
    {
      "Abstract": "Makepad is a new live programmable IDE and renderstack for the browser, The GPU is exposed to JavaScript programmers via type inferring JS and compiling to GLSL. Core UI system is multithreaded and APIs are extremely performant. Makepad contains a new kind of JS editor that is symbolic, but still feels like a text editor opening up the future path to design-tools operating on the same source. Working demo can be found at Makepad.github.io/makepad.html, all technology Apache2/MIT licensed. In this talk the inner workings and future of makepad will be presented.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["rikarends"],
      "Key": "cocodo-2017-live-programming-in-the-21st-century",
      "PersonsString": "Rik Arends",
      "Title": "Live Programming in the 21st Century",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-live-programming-in-the-21st-century"
    },
    {
      "Abstract": "J&ouml;rg Kienzle, Professor at the School of Computer Science of McGill University, Canada\nThe 1st Workshop on Reuse at the Language Level takes place March 17-24, 2017. Domain-Specific (Modeling) Languages (DSLs) aim at bridging the gap between the problem and solution spaces. They are usually small and intuitive software languages whose concepts and expressiveness are focused on a particular domain. As software languages are software too, the development of DSLs and their supporting environment (editors, generators, simulators, etc.) inherits the complexity of software development in general. Techniques for increasing reuse from one DSL to another and supporting the customization of legacy ones to meet new requirements may improve the quality of DSLs and allow DSLs to be created more quickly and and cheaply. Consequently, the benefits in terms of productivity when using DSL technologies may more easily offset the initial investment required in developing such DSLs. This talk reports on the findings of this workshop.",
      "Affiliations": ["McGill University, Canada"],
      "AffiliationsString": "McGill University, Canada",
      "Authors": ["jorgkienzle"],
      "Key": "momo-2017-papers-invited-talk",
      "PersonsString": "JÃ¶rg Kienzle",
      "Title": "Invited Talk: Towards Concern-Oriented Modularity in Software Language Engineering",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-invited-talk"
    },
    {
      "Abstract": "Software driving and using the Cloud (and the web) often count among the largest software systems ever produced and executed. It is therefore of paramount importance to dispose of appropriate structuring mechanisms, notably for their modular construction, execution and evolution. However, due to new constraints on how such systems must scale, new technologies (such as broker-less interacting Clouds, NoSQL databases), and new application domains and requirements (such as stream-oriented business analytics, end-to-end security), popular traditional modularization mechanisms are not sufficient for Cloud programming.\nIn this talk I first present an analysis of which characteristics and trends in Cloud architectures and programming are relevant for the modularization of Cloud infrastructures and applications. This analysis is then complemented by a survey of new means for the modularization of Cloud software.\nBio\nMario S&uuml;dholt is a full professor in Computer Science at IMT Atlantique, Nantes, France. He holds an MSc from U. Koblenz, Germany, a PhD from TU Berlin, Germany, and a habilitation from U. of Nantes, France. He is heading the ASCOLA team, a joint team of IMT Atlantique and Inria that is also part of the LS2N (CNRS) institute. His research interests focus on large-scale, typically distributed, software systems, their formal definition, compositional properties and efficient implementation.\nFrom 2011 to 2013, Prof. S&uuml;dholt has chaired the international association of AOSD, including the steering committee of the AOSD conference. Furthermore, he is a member of the steering committee of the international conference on Programming and serves on the editorial board of the journal Transactions on AOSD. He has published more than 100 international peer-reviewed publications.",
      "Affiliations": ["Ãcole des Mines de Nantes, France"],
      "AffiliationsString": "Ãcole des Mines de Nantes, France",
      "Authors": ["mariosudholt"],
      "Key": "modularity-2017-talks-to-be-announced-2-",
      "PersonsString": "Mario SÃ¼dholt",
      "Title": "Advanced Modularity for the Cloud ",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-to-be-announced-2-"
    },
    {
      "Abstract": "Software is becoming increasingly large, complex and critical to our society. Modularity is a key principle to manage its growing size and complexity. The purpose of this talk is to provide some insights into todays and upcoming challenges and possible solutions for software modularity at the programming language level. To achieve this, we will look at the patterns and lessons learned from the past, in particular 25+ years of research on modularity and software composition at the University of Twente. We will also address current and upcoming modularity challenges in the state of the practice of the software industry. \nTo illustrate the issues, we will look at examples from large scale embedded systems, and energy management in particular: such systems typically bring high technical complexity, caused by a complex problem domain and strong technical requirements. This requires the composition of many different concerns, with substantial long-term benefits for modular software.\nLooking back in time, we will discuss the \u2018inheritance anomalies\u2019 by Matsuoka et.al., which provided a first structured look into the challenges of composing functional and synchronisation concerns in objects. This led to a generalized model for describing issues in the composition and reuse of multiple concerns. Over time, new composition challenges appeared, such as crosscutting concerns over multiple objects and composing the behavior of message interactions. We will particularly focus on examples of software engineering challenges that are posed by typical (embedded) optimization problems, such as energy conservation policies. \nFinally, we will look into a number of modularization challenges, mostly from the perspective of the state-of-the practice in large-scale industrial software development: what innovations have been adopted and have made a significant change, what trends have impact on modularization issues, and what is needed to make sure better, more modular software is actually created in practice? \nBio\nLodewijk Bergmans is a consultant at the Software Improvement Group, where he helps clients in understanding and addressing their software problems regarding quality, architecture and best practices, taking the business context, risks and costs into account. Lodewijk has over 25 years of experience in the field of object-oriented and aspect-oriented software development. He has worked in industry as an architect, coach and trainer, and as a researcher/assistant professor at the University of Twente. He has published well over 50 refereed articles in international books, journals, conferences and workshops. He holds M.Sc. and Ph.D. degrees in Computer Science, both from the University of Twente.",
      "Affiliations": ["Software Improvement Group"],
      "AffiliationsString": "Software Improvement Group",
      "Authors": ["lodewijkbergmans"],
      "Key": "modularity-2017-talks-some-history-and-future-perspectives-on-the-modularity-challenges-for-large-and-complex-software-systems",
      "PersonsString": "Lodewijk Bergmans",
      "Title": "Some History and Future Perspectives on the Modularity Challenges for Large and Complex Software Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-some-history-and-future-perspectives-on-the-modularity-challenges-for-large-and-complex-software-systems"
    },
    {
      "Abstract": "This talk will present ongoing work in the context of the PACE (Programming Abstractions for Applications in Cloud Environments) ERC Advanced Grant. I will start by presenting core concepts of REScala, a language for concurrent and distributed reactive programming. Next, I will focus on our ongoing work on CorrL, a core language that aims at unifying concepts for reactives, events, and streams to enable a broad range of custom correlation behaviors, be it relational-algebra joins, CEP-style event patterns, RP combinators, or synchronization patterns. The key insight is to separate general-purpose and custom correlation semantics via an extensible effect system that enables fine-grained control over correlation semantics, which resembles the way aspects enable control over the semantics of a base language. I will conclude with a more speculative discussion of how I envision CorrL\u2019s concepts to be integrated into REScala and its generalized correlation semantics to be part of a module system for reactive cloud-based applications.\nBio\nMira Mezini is professor of computer science and vice-president for research and innovation at Technische Universit&auml;t Darmstadt, Germany. Together with her students and collaborators, she has made significant contributions in programming language design and implementation with special focus on fostering modularity and adaptability in software, software analysis techniques with special focus on security, and recommender systems for software engineering. She is (co)author of over 150 scientific publications, most of them in renown software engineering and programming language journals and conferences. Mira is member of editorial boards respectively steering committees of several international journals and conferences, such as JOT, TAOSD, AOSD, ECOOP, ESEC. She has served as the General Chair of AOSD 2005, and as the PC chair of AOSD 2008, ECOOP 2011, and ESEC/FSE 2013. She received several awards, most notably an Advanced Grant of the European Research Council in 2012.",
      "Affiliations": ["TU Darmstadt"],
      "AffiliationsString": "TU Darmstadt",
      "Authors": ["miramezini"],
      "Key": "modularity-2017-talks-to-be-announced-1-",
      "PersonsString": "Mira Mezini",
      "Title": "Modular Composition of Reactive Applications (from aspects to events and back)",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-to-be-announced-1-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Raincode, Belgium"],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "cocodo-2017-final-discussion-and-framework-pitches",
      "PersonsString": "Vadim Zaytsev",
      "Title": "Final Discussion and Framework Pitches",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/cocodo-2017-final-discussion-and-framework-pitches"
    },
    {
      "Abstract": "Smart systems are characterised by their ability to analyse measured data in live and to react to changes according to expert rules. Therefore, such systems exploit appropriate data models together with actions triggered by domain-related conditions. Often thousands of updates need to be processed in a short amount of time, to detect which rules need to be triggered. The challenge at hand is that smart systems usually run on restricted hardware, like Raspberry Pi. There have been several approaches investigated to efficiently check conditions on data models, such as OCL-Gremlin or EMF-IncQuery. However, these solutions assume either that rules and data models fit into main memory or rely on high latency persistence storages, which severely damage the reactivity of smart systems. To tackle this challenge, we propose a novel composition process, which weaves executable rules into a data model with lazy loading abilities. Our approach targets models@run.time usages and has been evaluated on a real-world home automation case study. We quantitatively show that our approach can handle, at low latency, big sets of rules on top of large-scale data models, even on restricted hardware.",
      "Affiliations": [
        "",
        "",
        "",
        "",
        "",
        "University of Luxembourg"
      ],
      "AffiliationsString": ", University of Luxembourg",
      "Authors": [
        "ludovicmouline",
        "thomashartmann",
        "francoisfouquet",
        "johanbourcier",
        "olivierbarais",
        "yvesletraon"
      ],
      "Key": "momo-2017-papers-weaving-rules-into-models-run-time-for-embedded-smart-systems",
      "PersonsString": "Ludovic Mouline, Thomas Hartmann, FranÃ§ois Fouquet, Johan Bourcier, Olivier Barais and Yves Le Traon",
      "Title": "Weaving Rules into Models@run.time for Embedded Smart Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/momo-2017-papers-weaving-rules-into-models-run-time-for-embedded-smart-systems"
    },
    {
      "Abstract": "Modularity has been addressed at various levels in the software development life cycle including programming, design and architecture. Several abstractions and guidelines have been proposed to ensure a modularly composable system that is needed for different quality factors such as adaptability, reuse and maintainability. \nWhereas traditionally software systems were addressing a single domain, we can now observe the composition of multiple systems that are integrated in a coherent way, leading to software-intensive system-of-systems (SoSs). In parallel we observe the need for the right allocation of concerns over the different system entities and the composition of the systems. In this talk I will discuss the notion of modularity from the perspective of system-of-systems. I will elaborate on the required design abstractions and the principles needed to support modularity at the SoS level. \nBio\nBedir Tekinerdogan is full professor and chairholder of the Information Technology group at Wageningen University in The Netherlands. He received his MSc degree and a PhD degree in Computer Science from the University of Twente in The Netherlands. \nHe graduated around 50 MSc students, supervised around 20 PhD students and developed more than 15 academic computer science courses. He has also been very active in scientific conferences and organized more than 50 conferences/workshops on important software engineering research topics.\nHe has around 25 years of experience in software engineering research and education. He has been active in many national and international research and consultancy projects with various large software companies. His current research at Wageningen University concerns smart system of systems engineering, with an emphasis on software engineering and information technology. \nMore details can be found on his LinkedIn Profile: https://www.linkedin.com/in/bedir.",
      "Affiliations": ["Wageningen University, The Netherlands"],
      "AffiliationsString": "Wageningen University, The Netherlands",
      "Authors": ["bedirtekinerdogan"],
      "Key": "modularity-2017-talks-modularity-for-system-of-systems",
      "PersonsString": "Bedir Tekinerdogan",
      "Title": "Modularity for System-of-Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/modularity-2017-talks-modularity-for-system-of-systems"
    },
    {
      "Abstract": "The Context Interaction Problem occurs in dynamically adaptive software systems whenever adaptations to different contexts provide incompatible behaviour, as they were not foreseen to occur simultaneously. Several strategies have been proposed to resolve such conflicts when they occur. This paper surveys a number of such conflict resolution strategies, and proposes a design space in which to classify, compare and explain the differences between them.",
      "Affiliations": [
        "UniversitÃ© Catholique de Louvain, Belgium",
        "UniversitÃ© catholique de Louvain, Belgium",
        "Universidad de los Andes"
      ],
      "AffiliationsString": "UniversitÃ© Catholique de Louvain, Belgium, UniversitÃ© catholique de Louvain, Belgium, Universidad de los Andes",
      "Authors": [
        "kimmens",
        "benoitduhoux",
        "nicolascardozo"
      ],
      "Key": "lassy-2017-papers-managing-the-context-interaction-problem-a-classification-of-conflict-resolution-techniques-in-dynamically-adaptive-software-systems",
      "PersonsString": "Kim Mens, BenoÃ®t Duhoux and NicolÃ¡s Cardozo",
      "Title": "Managing the Context Interaction Problem : A Classification of Conflict Resolution Techniques in Dynamically Adaptive Software Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-managing-the-context-interaction-problem-a-classification-of-conflict-resolution-techniques-in-dynamically-adaptive-software-systems"
    },
    {
      "Abstract": "To debug running software we need unanticipated adaptation capabilities, especially when systems cannot be stopped, updated and restarted. Adapting such programs at runtime is an extreme solution given the delicate live contexts the debugging activity takes place. We introduce the Dynamic Layer, a construct in which behavioral variations are gathered and activated as a whole set of adaptations. Dimensions of Dynamic Layers activation are reified to allow very fine definitions of layer scopes and a fine grained selection of adapted entities. This paper describes and discusses the Dynamic Layer solution to perform unanticipated runtime debugging. An experimental implementation with the Pharo language is evaluated through a runtime adaptation example.",
      "Affiliations": [
        "University of Brest",
        "University of Brest",
        " INRIA Lille",
        "University of Occidental  Brittary, France"
      ],
      "AffiliationsString": "University of Brest,  INRIA Lille, University of Occidental  Brittary, France",
      "Authors": [
        "stevencostiou",
        "mickaelkerboeuf",
        "marcusdenker",
        "alainplantec"
      ],
      "Key": "lassy-2017-papers-dynamic-layers-for-extreme-debugging",
      "PersonsString": "Steven Costiou, Mickael Kerboeuf, Marcus Denker and Alain Plantec",
      "Title": "Dynamic Layers for Extreme Debugging",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-dynamic-layers-for-extreme-debugging"
    },
    {
      "Abstract": "In future smart computing environments, e.g., smart home, smart mobility, smart grid or pervasive health, autonomously designed subsystems are dynamically interconnected to smart service systems to develop their full potential. Other than existing approaches from the domain of Self-organizing Software Systems, where the application structure emerges from internal constraints or mechanisms, smart service systems require complex application models and a coordinating instance for their setup. In this paper, we utilize role-based application models, by means of a collaboration specification, for automated, on-demand service composition in decentralized infrastructures, i.e., infrastructures without a predefined central coordinator. We propose a two-phase development methodology in which a collaboration designer specifies the overall collaboration including its abstract functionality and several (other) developers complement it with its concrete performance. We verify our approach using a case study which rigorously follows the proposed development methodology and demonstrate that role-based application models provide sufficient information to guide the discovery and composition process for smart service systems.",
      "Affiliations": [
        "Technische UniversitÃ¤t Dresden",
        "",
        ""
      ],
      "AffiliationsString": "Technische UniversitÃ¤t Dresden, ",
      "Authors": [
        "markuswutzler",
        "thomasspringer",
        "alexanderschill"
      ],
      "Key": "lassy-2017-papers-utilizing-role-based-models-for-distributed-on-demand-service-composition",
      "PersonsString": "Markus Wutzler, Thomas Springer and Alexander Schill",
      "Title": "Utilizing Role-based Models for Distributed On-Demand Service Composition",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-utilizing-role-based-models-for-distributed-on-demand-service-composition"
    },
    {
      "Abstract": "Dynamic software updating (DSU) is an extremely useful feature to be used during the software evolution. It can be used to reduce downtime costs, for security enhancements, profiling and testing the new functionalities. There are many researches and solutions on dynamic software updating regarding diverse problems introduced by the topic, but there is a lack of research which compare various approaches concerning supported changes and demands on re-sources. In this paper we are comparing currently available concepts for Java programming language that deal with dynamically applied changes and impact of those changes on computer resource demands.",
      "Affiliations": [
        "University of Zagreb",
        "University of Zagreb"
      ],
      "AffiliationsString": "University of Zagreb",
      "Authors": [
        "danijelmlinaric",
        "vedranmornar"
      ],
      "Key": "lassy-2017-papers-dynamic-software-updating-in-java-comparing-concepts-and-resource-demands",
      "PersonsString": "Danijel MlinariÄ and Vedran Mornar",
      "Title": "Dynamic Software Updating in Java - Comparing Concepts and Resource Demands",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-dynamic-software-updating-in-java-comparing-concepts-and-resource-demands"
    },
    {
      "Abstract": "This paper presents possible usages of reflection in Emfrp, a functional reactive programming language designed for resource constrained embedded systems. We propose a simple reflection mechanism that provides a higher-level abstraction for accessing the internals of the language runtime. In this mechanism, the metalevel access is via time-varying values. This means that the reflective operations are also reactive. As an example, we show a simple adaptive runtime of the language that eliminates unnecessary evaluations.",
      "Affiliations": [
        "Tokyo Institute of Technology",
        "Tokyo Institute of Technology, Japan"
      ],
      "AffiliationsString": "Tokyo Institute of Technology, Tokyo Institute of Technology, Japan",
      "Authors": [
        "takuowatanabe",
        "kensukesawada"
      ],
      "Key": "lassy-2017-papers-towards-reflection-in-an-frp-language-for-small-scale-embedded-systems",
      "PersonsString": "Takuo Watanabe and Kensuke Sawada",
      "Title": "Towards Reflection in an FRP Language for Small-Scale Embedded Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-towards-reflection-in-an-frp-language-for-small-scale-embedded-systems"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "UniversitÃ© Catholique de Louvain, Belgium",
        "Universidad de los Andes"
      ],
      "AffiliationsString": "UniversitÃ© Catholique de Louvain, Belgium, Universidad de los Andes",
      "Authors": [
        "kimmens",
        "nicolascardozo"
      ],
      "Key": "lassy-2017-papers-welcome",
      "PersonsString": "Kim Mens and NicolÃ¡s Cardozo",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-welcome"
    },
    {
      "Abstract": "With ubiquitous computing, autonomous cars, and cyber- physical systems (CPS), adaptive software becomes more and more important as computing is increasingly context- dependent. Role-based programming has been proposed to enable adaptive software design without the problem of scat- tering the context-dependent code. Adaptation is achieved by letting objects play roles during runtime. With every role, the object\u2019s behavior is modified to adapt to the given context. In recent years many role-based programming lan- guages have been developed. While they greatly differ in the set of supported features, they all incur in large runtime over- heads resulting in inferior performance. The increased vari- ability and expressiveness of the programming languages have a direct impact on the run-time and memory consump- tion. In this paper we provide a detailed analysis of state- of-the-art role-based programming languages, with empha- sis on performance bottlenecks. We also provide insight on how to overcome these problems via language re-design.",
      "Affiliations": [
        "Technische UniversitÃ¤t Dresden",
        "Technische UniversitÃ¤t Dresden"
      ],
      "AffiliationsString": "Technische UniversitÃ¤t Dresden",
      "Authors": [
        "larsschutze",
        "jeronimocastrillon"
      ],
      "Key": "lassy-2017-papers-analyzing-state-of-the-art-role-based-programming-languages",
      "PersonsString": "Lars SchÃ¼tze and Jeronimo Castrillon",
      "Title": "Analyzing State-of-the-Art Role-based Programming Languages",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-analyzing-state-of-the-art-role-based-programming-languages"
    },
    {
      "Abstract": "The paper introduces an Internet of Tings (IoT) Robot simulator. The aim of this simulator is to discuss issues for Context-Oriented Programming. The context-sensitive and live- adaptive are important features for next-generation systems such as IoT and Industrial 4.0. Context-Oriented Programming (COP) Languages give us adequate modularity to implement those features. However, even if we construct a program on COP, we cannot predict enough for its behavior. We consider a thinking way of Operating Systems (OS) would be helpful to overcome this problem. In OS, researchers have proposed communication algorithms based on some common problems, such as the five philosophers\u2019 problem. Towards finding typical problems of COP such as the five philosophers\u2019 problem, we propose a simple cooperative robot system simulator. The novel mechanism of this system is that the one and same COP program drive a cooperative robot on both a virtual map and real worlds. We expect the mechanism contributes to imagine realistic issues of context- oriented software for constructing next generation robots. The paper presents a mechanism for this simulator system and shows the simulator finds some issues of context-oriented software.",
      "Affiliations": [
        "Kyusyu University",
        "Tokai University",
        "Tokyo City University",
        "Kyushu University",
        "Kyushu University"
      ],
      "AffiliationsString": "Kyusyu University, Tokai University, Tokyo City University, Kyushu University",
      "Authors": [
        "ikutatanigawa",
        "harumiwatanabe",
        "nobuhikoogura",
        "kenjihisazumi",
        "akirafukuda"
      ],
      "Key": "lassy-2017-papers-iot-robot-simulator-for-context-sensitive-and-live-adaptive-software-developments",
      "PersonsString": "Ikuta Tanigawa, Harumi Watanabe, Nobuhiko Ogura, Kenji Hisazumi and Akira Fukuda",
      "Title": "IoT Robot Simulator for Context-Sensitive and Live-Adaptive Software Developments",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-iot-robot-simulator-for-context-sensitive-and-live-adaptive-software-developments"
    },
    {
      "Abstract": "Context-dependent applications are relatively complex due to their multiple variations caused by context activation, especially in the presence of unanticipated adaptation. Testing these systems is challenging, as it is hard to reproduce the same execution environments. Therefore, a software failure caused by bugs is no exception. This paper presents a rollback mechanism to recover from software failures as part of a role-based runtime with support for unanticipated adaptation. The mechanism performs checkpoints before each adaptation and employs specialized sensors to detect bugs resulting from recent configuration changes. When the runtime detects a bug, it assumes that the bug belongs to the latest configuration. The runtime rolls back to the recent checkpoint to recover and subsequently notifies the developer to fix the bug and re-applying the adaptation through unanticipated adaptation. We prototype the concept as part of our role-based runtime engine LyRT and demonstrate the applicability of the rollback recovery mechanism for unanticipated adaptation in erroneous situations.",
      "Affiliations": [
        "",
        "",
        "Universidad de los Andes",
        ""
      ],
      "AffiliationsString": ", Universidad de los Andes",
      "Authors": [
        "nguonlytaing",
        "thomasspringer",
        "nicolascardozo",
        "alexanderschill"
      ],
      "Key": "lassy-2017-papers-a-rollback-mechanism-to-recover-from-software-bugs-in-role-based-adaptive-software-systems",
      "PersonsString": "Nguonly Taing, Thomas Springer, NicolÃ¡s Cardozo and Alexander Schill",
      "Title": "A Rollback Mechanism to Recover from Software Bugs in Role-based Adaptive Software Systems",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-a-rollback-mechanism-to-recover-from-software-bugs-in-role-based-adaptive-software-systems"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "UniversitÃ© Catholique de Louvain, Belgium",
        "Universidad de los Andes"
      ],
      "AffiliationsString": "UniversitÃ© Catholique de Louvain, Belgium, Universidad de los Andes",
      "Authors": [
        "kimmens",
        "nicolascardozo"
      ],
      "Key": "lassy-2017-papers-discussion-and-closing-remarks",
      "PersonsString": "Kim Mens and NicolÃ¡s Cardozo",
      "Title": "Discussion and closing remarks",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/lassy-2017-papers-discussion-and-closing-remarks"
    },
    {
      "Abstract": "A recent trend in application development for the web is a move towards rich internet applications (RIAs). As more and more of the application logic is moved to the client, these applications can benefit from concurrency in order to increase overall performance as well as responsiveness of the application. Additionally, RIAs are often written in an event-driven style of programming to react to incoming events of a multitude of services that are integrated within the application.\nIn this paper we argue that, while individual technologies exist to tackle both concerns, these technologies cannot easily be integrated in an ad hoc way. In order to increase the modularisability and composability of RIAs we propose a new programming model based on actors and reactors that encapsulate different parts of the application. We show that our model is able to exploit some of the available concurrency while reducing the required amount of event-driven code. Both actors and reactors are modular components that can be glued together via a unified communication mechanism. We evaluate our approach by means of a motivating example of a collaborative code editor.",
      "Affiliations": [
        "",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": ", Vrije Universiteit Brussel, Belgium, Vrije Universiteit Brussel",
      "Authors": [
        "samvandenvonder",
        "florianmyter",
        "joeridekoster",
        "wolfgangdemeuter"
      ],
      "Key": "proweb-2017-papers-enriching-the-internet-by-acting-and-reacting",
      "PersonsString": "Sam Van den Vonder, Florian Myter, Joeri De Koster and Wolfgang De Meuter",
      "Title": "Enriching the Internet By Acting and Reacting",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-enriching-the-internet-by-acting-and-reacting"
    },
    {
      "Abstract": "Group discussion on the future of tooling and virtuality",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2017-papers-group-discussion-on-the-future-of-tooling-and-virtuality",
      "PersonsString": "",
      "Title": "Group discussion on the future of tooling and virtuality",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-group-discussion-on-the-future-of-tooling-and-virtuality"
    },
    {
      "Abstract": "Microservices application architecture emerged as a special application architecture of Service Oriented Architecture (SOA). It is also known as cloud native applications architecture. For component based web applications, the adoption of microservices requires an extensive refactoring process to be evolved to microservices based application. \nCurrent practice for the main activity in this refactoring process, is following the white box based techniques which requires enormous time to analyze all business processes in the business domain and not considering non functional requirements such as performance and resource consumption. Moreover, the granularity level - which refers to the size of emerged services - is not following a structured approach and left for the experience of software architect.\nIn this session, I will expresses the need for planning for granularity level early in the development life cycle, Through simulating a simple browsing scenario for online bookshop under different conditions of load testing. The main aim of this session is to discuss the importance of supporting software architects with a suitable tool helps reaching the optimized microservices architecture.",
      "Affiliations": [
        "Carl von Ossietzky UniversitÃ¤t Oldenburg / University of Oldenburg",
        ""
      ],
      "AffiliationsString": "Carl von Ossietzky UniversitÃ¤t Oldenburg / University of Oldenburg, ",
      "Authors": [
        "olamustafa",
        "jorgemarxgomez"
      ],
      "Key": "proweb-2017-papers-optimizing-economics-of-microservices-by-planning-for-granularity-level",
      "PersonsString": "Ola Mustafa and Jorge Marx GÃ³mez",
      "Title": "Optimizing economics of microservices by planning for granularity level",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-optimizing-economics-of-microservices-by-planning-for-granularity-level"
    },
    {
      "Abstract": "Responsive Web Design (RWD) enables web applications to adapt to the characteristics of different devices such as screen size which is important for mobile browsing. Today, the only W3C standard to support this adaptability is CSS media queries. However, using media queries it is impossible to create applications in a modular way, because responsive elements then always depend on the global context. Hence, responsive elements can only be reused if the global context is exactly the same. This makes it extremely challenging to develop large responsive applications, because the lack of true modularity makes certain requirement changes either impossible or expensive to realize. \nIn this paper we extend RWD to also include responsive modules, i.e., modules that adapt their design based on their local context, independently of the global context. We present the ELQ project which implements our approach. ELQ is a novel implementation of so-called element queries which generalize CSS media queries. Importantly, our design conforms to existing web specifications, enabling adoption on a large scale. ELQ is designed to be heavily extensible using plugins. Experimental results show speed-ups of the core algorithms of up to 37x compared to previous approaches.",
      "Affiliations": [
        "",
        "",
        "KTH Royal Institute of Technology"
      ],
      "AffiliationsString": ", KTH Royal Institute of Technology",
      "Authors": [
        "lucaswiener",
        "tomasekholm",
        "philipphaller"
      ],
      "Key": "proweb-2017-papers-modular-responsive-web-design-an-experience-report",
      "PersonsString": "Lucas Wiener, Tomas Ekholm and Philipp Haller",
      "Title": "Modular Responsive Web Design: An Experience Report",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-modular-responsive-web-design-an-experience-report"
    },
    {
      "Abstract": "Abstract\nA paradigm shift is taking place on the Web. Users spend less and less time using browsers and more and more time using instant messaging applications. While originally designed to facilitate communication among humans, these platforms now position themselves as \u201cnext-generation browsers\u201d to interact with services and businesses. They do this by offering the ability to extend their platforms with chatbots: applications that interact with the user through chat.\nThis shift toward a dialoge-based mode of interaction will have a profound impact on the programming technologies that will be needed to effectively develop applications for the Conversational Web. While existing Web technology will continue to play an important role, new frameworks are emerging that facilitate dialogue-based interactions. There is also a growing need to extend explicitly programmed scripts with AI toolkits to bridge the gap between ambiguous humans and rigid APIs. We will discuss these trends, review today\u2019s state-of-the-art bot SDKs and AI toolkits, and highlight new opportunities where programming abstractions and program analyses can help developers in this rapidly evolving domain.\nBio\nTom Van Cutsem leads a research team at Nokia Bell Labs in Antwerp, Belgium. His team works on next-generation communications software with topics ranging from new user interaction mechanisms and conversational bots to innovations at the networking layer based on software-defined networks. Tom is a computer scientist who loves to explore the bleeding edge of software development. Within Bell Labs he has worked on various research projects, focusing on the design, architecture and implementation of distributed systems, query languages and stream processing platforms. Prior to joining Bell Labs, Tom was a professor of computer science at the Vrije Universiteit Brussel and a Visiting Faculty at Google. Tom has a passion for programming languages and sat on the ECMA TC39 committee in charge of standardising JavaScript. He received his PhD in 2008 from Vrije Universiteit Brussel for his research on AmbientTalk, a distributed scripting language for mobile phones.",
      "Affiliations": ["Nokia Bell Labs"],
      "AffiliationsString": "Nokia Bell Labs",
      "Authors": ["tomvancutsem"],
      "Key": "proweb-2017-papers-keynote",
      "PersonsString": "Tom Van Cutsem",
      "Title": "From Documents to Dialogues: Programming Technology for the Conversational Web",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-keynote"
    },
    {
      "Abstract": "Immediate mode UI programming is based on continually drawing the UI in a render loop, handling events in between frames using ordinary control-flow. This supports straightforward understanding and debugging of UI code, without inversion of control. In this paper I present TwoStones, a simple DSL for immediate mode Web UI programming in a purely functional style: it presumes a single, immutable application model which is updated functionally through the use of cursors (a kind of zipper). Relying only on immutable data means that time-travel debugging and undo-facilities are easy to implement. For exposition purposes, the semantics of TwoStones is first decomposed in two parts: one semantics for rendering, and one semantics for event handling. Finally, they are merged again for better performance. A number of examples show the potential of the approach.",
      "Affiliations": ["CWI"],
      "AffiliationsString": "CWI",
      "Authors": ["tijsvanderstorm"],
      "Key": "proweb-2017-papers-immediate-mode-with-immutable-data",
      "PersonsString": "Tijs van der Storm",
      "Title": "Immediate Mode with Immutable Data",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-immediate-mode-with-immutable-data"
    },
    {
      "Abstract": "The modern Web technology become more about software components and applications, then Hypertext. Even one-page websites are being built using Virtual DOM, React or Web components entirely in JavaScript programming language. Virtual Reality and Augmented Reality are coming into Web browser with the help of React VR and A-Frame libraries. Someone could easily create a rich VR app or static website declaratively. So, Web apps become more like desktop apps with all advantages and disadvantages of application-centric approach. On the contrary Virtual World\u2019s concept in software domain represent the new computational paradigm and shift application creation to the new level. Virtual Worlds blurs the borders between application and hosted environment, runtime and development mode. The Virtual World\u2019s paradigm in conjunction with Web technologies offers to both programmers and domain experts nearly unlimited capabilities for creating novel computer-based simulated environments just in Web browser. Virtual time, user-defined meta language, live coding, avatar, self-explaratory environment become the new crucial concepts of the Web applications. So, that Web could conformally suits the modern human computer interaction domain or Virtual Being simply.",
      "Affiliations": ["Fund for Supporting Development of RT"],
      "AffiliationsString": "Fund for Supporting Development of RT",
      "Authors": ["nikolaisuslov"],
      "Key": "proweb-2017-papers-towards-the-web-for-virtual-being",
      "PersonsString": "Nikolai Suslov",
      "Title": "Towards the Web for Virtual Being",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-towards-the-web-for-virtual-being"
    },
    {
      "Abstract": "Webstrates presents an alternative take on the future of web use and development. In Webstrates, changes to the Document Object Model (DOM) of webpages (called webstrates) are persisted across reloads and synchronized to other clients of the same webstrate. This includes changes to embedded JavaScript and CSS. With Webstrates we demonstrate one possible direction for the future web that we hope can inspire and foster discussion at the ProWeb 2017 workshop. We will gladly demonstrate Webstrates at the workshop and illustrate best programming practices for it. Further, we would like to discuss open issues (e.g. programming language support, collaborative programming, fine-grained permis- sions, handling large datasets, and other advances in the future of web programming) from which we believe future versions of Webstrates and its community will greatly benefit.",
      "Affiliations": [
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "kristianbantonsen",
        "michelbeaudouinlafon",
        "jameseagan",
        "clemensnylandstedklokmose",
        "wendymackay",
        "romanradle"
      ],
      "Key": "proweb-2017-papers-webstrates-for-the-future-web-",
      "PersonsString": "Kristian B. Antonsen, Michel Beaudouin-Lafon, James Eagan, Clemens Nylandsted Klokmose, Wendy Mackay and Roman RÃ¤dle",
      "Title": "Webstrates for the future web?",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-webstrates-for-the-future-web-"
    },
    {
      "Abstract": "Introduction and welcome to the ProWeb workshop.",
      "Affiliations": [
        "Vrije Universiteit Brussel",
        "Aarhus University",
        "Universiteit Gent, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Aarhus University, Universiteit Gent, Belgium",
      "Authors": [
        "coenderoover",
        "andersmoller",
        "christophescholliers"
      ],
      "Key": "proweb-2017-papers-welcome-to-proweb",
      "PersonsString": "Coen De Roover, Anders MÃ¸ller and Christophe Scholliers",
      "Title": "Welcome to ProWeb",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-welcome-to-proweb"
    },
    {
      "Abstract": "Group discussion on common goals of the ProWeb workshop",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2017-papers-group-discussion-on-common-goals",
      "PersonsString": "",
      "Title": "Group discussion on common workshop goals",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-group-discussion-on-common-goals"
    },
    {
      "Abstract": "Web applications are inherently event-driven and traditionally implemented using imperative callbacks in Javascript. An alternative approach for such programs is functional reactive programming (FRP). FRP offers abstractions to make event-driven programming convenient, safe and composable, but like pure functions it is isolated from the `outside\u2019 world. In this paper we describe our experience in developing a library that binds FRP to the document object model (DOM). We describe that in its current state there are fundamental issues that do not yet have a perfect solution. We expand upon the functionality of existing FRP DOM libraries with an FRP model for DOM properties. We show that despite of some design problems a pragmatic library can be created that can be used to create web applications.",
      "Affiliations": [
        "iMinds - Distrinet, KU Leuven",
        "iMinds - Distrinet, KU Leuven",
        "iMinds, Belgium"
      ],
      "AffiliationsString": "iMinds - Distrinet, KU Leuven, iMinds, Belgium",
      "Authors": [
        "bobreynders",
        "dominiquedevriese",
        "frankpiessens"
      ],
      "Key": "proweb-2017-papers-experience-report-functional-reactive-programming-and-the-dom",
      "PersonsString": "Bob Reynders, Dominique Devriese and Frank Piessens",
      "Title": "Experience Report: Functional Reactive Programming and the DOM",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-experience-report-functional-reactive-programming-and-the-dom"
    },
    {
      "Abstract": "Group discussion on the future of reactivity",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2017-papers-group-discussion-on-the-future-of-reactivity",
      "PersonsString": "",
      "Title": "Group discussion on the future of reactivity",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-group-discussion-on-the-future-of-reactivity"
    },
    {
      "Abstract": "Group discussion on the future of collaboration and responsiveness",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2017-papers-group-discussion-on-collaboration-and-responsiveness-on-the-future-web",
      "PersonsString": "",
      "Title": "Group discussion on the future of collaboration and responsiveness ",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/proweb-2017-papers-group-discussion-on-collaboration-and-responsiveness-on-the-future-web"
    },
    {
      "Abstract": "Grace is an object-oriented programming language designed to aid teaching programming. The specification of Grace and its various implementations have, to varying degrees, grown out of sync. The purpose of our study is to create a single source of truth for the semantics of the Grace programming language. We define a specification of the dynamic semantics of Grace which, at the time of writing, is nearly complete, can be easily understood by a human reader, is concise and derives an implementation for the language.\nThis talk will bring to discussion relevant features of the language by means of excerpts from the specification. We will offer a conceptual overview of the meta-interpretation technique used to obtain the language runtime and expose the challenges we face in the future in order to achieve good runtime performance.",
      "Affiliations": [
        "TU Delft",
        "TU Delft",
        "Delft University of Technology"
      ],
      "AffiliationsString": "TU Delft, Delft University of Technology",
      "Authors": [
        "vladvergu",
        "michielhaisma",
        "eelcovisser"
      ],
      "Key": "morevms-2017-papers-a-readable-and-executable-semantics-of-grace",
      "PersonsString": "Vlad Vergu, Michiel Haisma and Eelco Visser",
      "Title": "A Readable and Executable Semantics of Grace",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-a-readable-and-executable-semantics-of-grace"
    },
    {
      "Abstract": "A custom mixed compiler/interpreter design for reimplementation of mainframe assembler language for .NET.",
      "Affiliations": ["Raincode, Belgium"],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "morevms-2017-papers-on-the-need-of-compilepretation-for-legacy-languages",
      "PersonsString": "Vadim Zaytsev",
      "Title": "On the Need of Compilepretation for Legacy Languages",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-on-the-need-of-compilepretation-for-legacy-languages"
    },
    {
      "Abstract": "In the current state of debugging, there are bugs which exceed the capabilities of conventional online debuggers. When developers have to inspect past states of programs in order to solve them, they often have to restart the applications to be able to analyze the states live instead of inspecting them retrospectively. Omniscient debugging offers back-in-time debugging capabilities by recording full runs of applications, at the cost of scalability.\nIn this work we present an in-between approach called back-in-time evaluation that extends online debuggers with back-in-time capabilities. Instead of tracing full runs, the lifetime of the stored events are reduced to the scope of the methods they are executed in, which incurs a runtime overhead of only a few percent.",
      "Affiliations": [
        "Philipps-UniversitÃ¤t Marburg",
        "Philipps-UniversitÃ¤t Marburg"
      ],
      "AffiliationsString": "Philipps-UniversitÃ¤t Marburg",
      "Authors": [
        "stefanschulz",
        "christophbockisch"
      ],
      "Key": "morevms-2017-papers-debugging-with-back-in-time-evaluation",
      "PersonsString": "Stefan Schulz and Christoph Bockisch",
      "Title": "Debugging with Back-In-Time Evaluation",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-debugging-with-back-in-time-evaluation"
    },
    {
      "Abstract": "We adapt SOMns, a Truffle-based interpreter for Newspeak, to the Grace programming language. We highlight differences between the semantics of these languages and offer preliminary results showing that adaption is possible while retaining performance. The similarities between the languages promote the potential for adaption and code sharing between implementations. Through experimentation we intend to explore how the design of the tailored implementation; the flexibility of the underlying framework; and similarities between languages affect adaptability, and by doing so hope to realize a set of mechanisms that can be easily extended to create optimized virtual machines for object-orientated languages.",
      "Affiliations": [
        "Victoria University of wellington",
        "Johannes Kepler University Linz",
        "Victoria University of Wellington",
        "Victoria University of Wellington"
      ],
      "AffiliationsString": "Victoria University of wellington, Johannes Kepler University Linz, Victoria University of Wellington",
      "Authors": [
        "richardroberts",
        "stefanmarr",
        "michaelhomer",
        "jamesnoble"
      ],
      "Key": "morevms-2017-papers-toward-virtual-machine-adaption-rather-than-reimplementation",
      "PersonsString": "Richard Roberts, Stefan Marr, Michael Homer and James Noble",
      "Title": "Toward Virtual Machine Adaption Rather than Reimplementation",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-toward-virtual-machine-adaption-rather-than-reimplementation"
    },
    {
      "Abstract": "Debuggers in interactive programming environments are powerful tools to explore and develop systems at runtime.\nHowever, among users of scripting languages such as Python or Ruby, a debugger is sometimes viewed as a rarely used \u201cdevelopment time\u201d tool. As Seaton, Van De Vanter, and Haupt have observed debugging support is assumed to come with compromises: there surely must be a performance impact; in order to minimize the impact when debugging is not needed the functionality surely must be limited; the complexity of debugging couples debuggers closely to just one language; and in order to actually use debugging facilities, one surely must accept the inconvenience of having to run the program in a special \u201cdebug\u201d mode.\nDue to the inconvenience involved in using debuggers in such systems, developers instead set up feedback loops by creating the infrastructure for quick, repeated test executions. This further cements the distinction between \u201cdevelopment time\u201d and \u201cdeployment time\u201d: to a program running in production, this feedback loop infrastructure is not available and any issues have to be reproduced and distilled into tests on a development system before they can be fixed.\nAs Gilad Bracha has noted, this separation of development time and deployment time stands in contrast to environments in the Lisp, Smalltalk, and Self heritage that view programs as live, continuously evolving systems. The development environment is the runtime environment and developers can work with concrete objects and can interrupt, inspect, and modify runtime state, and keep running.\nIn this work, we present a prototype virtual machine (VM) written in RPython based on the RSqueak/VM that provides Squeak/Smalltalk\u2019s live development and debugging to PyPy Python and Topaz Ruby. Of particular interest in this context is how the interpreters can be adapted in a general fashion for Smalltalk-style development, as well as the practical overhead of such an integration.\nThe core features of our prototype are: \n \n A combination of multiple RPython interpreters in the same, cooperatively scheduled execution environment, \n Smalltalk-style unhandled exception debugging for Ruby and Python, \n Smalltalk-style edit-and-continue for Ruby and Python.",
      "Affiliations": [
        "Hasso-Plattner-Institute, Potsdam",
        "Hasso-Plattner-Institute, Potsdam",
        "HPI, Germany",
        "HPI"
      ],
      "AffiliationsString": "Hasso-Plattner-Institute, Potsdam, HPI, Germany, HPI",
      "Authors": [
        "timfelgentreff",
        "fabioniephaus",
        "tobiaspape",
        "roberthirschfeld"
      ],
      "Key": "morevms-2017-papers-when-a-mouse-eats-a-python-smalltalk-style-development-for-python-and-ruby",
      "PersonsString": "Tim Felgentreff, Fabio Niephaus, Tobias Pape and Robert Hirschfeld",
      "Title": "When a Mouse Eats a Python: Smalltalk-style Development for Python and Ruby",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-when-a-mouse-eats-a-python-smalltalk-style-development-for-python-and-ruby"
    },
    {
      "Abstract": "Dataflow models are a promising platform for programming language implementation due to their ability to extract the latent parallelism present in a given program. In spite of this, no modern-day language has emerged which leverages this property of implicit parallelism. As a first step towards the creation of such a language, we introduce a virtual machine design which is based on the tagged-token dataflow model. Notably, this design offers the fundamental concepts of the underlying model as first-class entities, which makes it possible to support various high-level language features without the need for any additional runtime support.",
      "Affiliations": [
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel + University Ghent",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Vrije Universiteit Brussel, Belgium, Vrije Universiteit Brussel + University Ghent",
      "Authors": [
        "mathijssaey",
        "joeridekoster",
        "jennifersartor1",
        "wolfgangdemeuter"
      ],
      "Key": "morevms-2017-papers-an-extensible-virtual-machine-design-for-the-execution-of-high-level-languages-on-tagged-token-dataflow-machines",
      "PersonsString": "Mathijs Saey, Joeri De Koster, Jennifer Sartor and Wolfgang De Meuter",
      "Title": "An Extensible Virtual Machine Design for the Execution of High-level Languages on Tagged-token Dataflow Machines",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-an-extensible-virtual-machine-design-for-the-execution-of-high-level-languages-on-tagged-token-dataflow-machines"
    },
    {
      "Abstract": "The disconnect between programming languages and the developer tools needed to make them useful has grown wide since the days of programming systems with integral tool support, such as Self (1989), Smalltalk (1980), and Lisp (1965). Tools now are typically an afterthought: expensive to develop, delivered late if ever, and arrive with undesirable performance trade-offs.",
      "Affiliations": ["Oracle Labs"],
      "AffiliationsString": "Oracle Labs",
      "Authors": ["michaelvandevanter"],
      "Key": "morevms-2017-papers-building-reusable-low-overhead-tooling-support-into-a-high-performance-polyglot-vm",
      "PersonsString": "Michael Van De Vanter",
      "Title": "Building Reusable, Low-overhead Tooling Support into a High Performance Polyglot VM",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-building-reusable-low-overhead-tooling-support-into-a-high-performance-polyglot-vm"
    },
    {
      "Abstract": "Graphics Processor Units (GPUs) are powerful hardware to parallelize and speed-up applications. However, programming these devices is too complex for most users and the existing standards for GPU programming are available only for low-level languages such as C.\nDynamic programming languages offer higher abstractions and functionality for many users. GPU programming is possible for dynamic languages through external libraries or via wrappers in which the GPU code is normally written in C. Either way, programmers have to rely on third-party libraries with a limited number of operations or program the GPU kernels themselves.\nIn this work we present a technique to automatically offload parts of the input program written in a dynamic language into OpenCL without any changes in the original source code. Our preliminary results show we achieve speedups of up to 150x when using the GPU.",
      "Affiliations": [
        "The University of Edinburgh",
        "The University of Edinburgh",
        "Oracle Labs, Austria",
        "University of Edinburgh"
      ],
      "AffiliationsString": "The University of Edinburgh, Oracle Labs, Austria, University of Edinburgh",
      "Authors": [
        "juanfumero",
        "michelsteuwer",
        "lukasstadler",
        "christophedubach"
      ],
      "Key": "morevms-2017-papers-opencl-jit-compilation-for-dynamic-programming-languages",
      "PersonsString": "Juan Fumero, Michel Steuwer, Lukas Stadler and Christophe Dubach",
      "Title": "OpenCL JIT Compilation for Dynamic Programming Languages",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-opencl-jit-compilation-for-dynamic-programming-languages"
    },
    {
      "Abstract": "The gathering and analysis of processor traces has been used in computer design and processor architecture research for many decades, but has not been of practical utility in production software \u2014 until now. A new facility from Intel, Processor Trace, allows software to gather control-flow traces at low overhead, and it may be possible to analyse and utilise this information within virtual machines for a variety of benefits. In this talk we will describe Processor Trace, how it could be used in VMs, and our progress towards exploiting this mechanism.",
      "Affiliations": [
        "Oracle Labs",
        "Oracle"
      ],
      "AffiliationsString": "Oracle Labs, Oracle",
      "Authors": [
        "mariowolczko",
        "cansukaynak"
      ],
      "Key": "morevms-2017-papers-processor-tracing-for-virtual-machines",
      "PersonsString": "Mario Wolczko and Cansu Kaynak",
      "Title": "Processor Tracing for Virtual Machines",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-processor-tracing-for-virtual-machines"
    },
    {
      "Abstract": "It is natural for a developer to want to benefit from both the high-level abstractions of a language like OCaml, and the great number of libraries of a language like Java.\nThere are different ways to achieve this goal by leveraging existing tools and/or libraries: through communication between processes (e.g. by using JSON), through the native interfaces of both languages (i.e. by using the C language), etc. However, it is much easier, stable, and productive for the developer to have both languages share a common runtime: the JVM.\nOCaml-Java provides a compiler and a runtime support to allow compilation of OCaml sources to plain Java bytecode that can then be run on any JVM. More, in order to make interoperability straighforward, OCaml-Java provides an extension to the original OCaml type system that allows the developer to manipulate Java instances directly from OCaml programs.\nIn this talk we will present the current state of the project, and the ongoing effort to improve performance and usability.",
      "Affiliations": ["ocamljava.org"],
      "AffiliationsString": "ocamljava.org",
      "Authors": ["xavierclerc"],
      "Key": "morevms-2017-papers-ocaml-java-running-ml-programs-on-a-jvm",
      "PersonsString": "Xavier Clerc",
      "Title": "OCaml-Java: Running ML programs on a JVM",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-ocaml-java-running-ml-programs-on-a-jvm"
    },
    {
      "Abstract": "A common problem arising from embedding a virtual machine as a component in a larger software system is the management of references between the VM\u2019s managed heap and the embedder\u2019s heap. Direct references between components allow fast communication, but can result in cycles over component boundaries, making these hybrid systems prone to memory leaks. In this paper we present a design and implementation of a tracing mechanism for effective and efficient garbage collection over component boundaries which is implemented and shipped in Chrome\u2019s JavaScript virtual machine V8 and the Blink rendering engine. Tracing through the C++ heap of Blink poses several challenges on which we elaborate: 1) an abstract visitation mechanism for C++ objects that can be used by the V8 garbage collector, 2) write barriers for C++ objects to reduce pauses through incremental marking, and 3) a mechanism to verify correctness of write barrier usage.",
      "Affiliations": [
        "Google",
        "Google",
        "Google",
        "Google",
        "Google",
        "Google"
      ],
      "AffiliationsString": "Google",
      "Authors": [
        "ulandegenbaev",
        "jocheneisinger",
        "kentarohara",
        "marcelhlopko",
        "michaellippautz",
        "hannespayer"
      ],
      "Key": "morevms-2017-papers-garbage-collection-as-a-joint-venture",
      "PersonsString": "Ulan Degenbaev, Jochen Eisinger, Kentaro Hara, Marcel Hlopko, Michael Lippautz and Hannes Payer",
      "Title": "Garbage Collection as a Joint Venture",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-garbage-collection-as-a-joint-venture"
    },
    {
      "Abstract": "The Dart programming language includes built in support for asynchrony colloquially known as async-await. Recently, the implementation has been extended to support debugging, allowing users to step in and out of asynchronous methods. \nMuch as the async-await constructs allow code to be expressed in a manner closer to the traditional synchronous model, the debugging support allows programmers to debug their asynchronous code almost as if it were being invoked synchronously. We describe the virtual machine\u2019s support for asynchrony and debugging.",
      "Affiliations": [
        "Google",
        "Google"
      ],
      "AffiliationsString": "Google",
      "Authors": [
        "johnmccutchan",
        "giladbracha"
      ],
      "Key": "morevms-2017-papers-debugging-await-in-dart",
      "PersonsString": "John McCutchan and Gilad Bracha",
      "Title": "Debugging Await in Dart",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-debugging-await-in-dart"
    },
    {
      "Abstract": "Viua is a work-in-progress with the final goal of creating a runtime environment for writing highly concurrent, highly reliable software systems. This paper provides a brief, high- level overview of the internals of the Viua virtual machine, and the primitives it provides to achieve its design goals.",
      "Affiliations": ["Polish-Japanese Academy of Information Technology"],
      "AffiliationsString": "Polish-Japanese Academy of Information Technology",
      "Authors": ["marekmarecki"],
      "Key": "morevms-2017-papers-moving-beyond-single-threaded-concurrency",
      "PersonsString": "Marek Marecki",
      "Title": "Moving beyond single-threaded concurrency",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-moving-beyond-single-threaded-concurrency"
    },
    {
      "Abstract": "Language-level virtual machines are now ubiquitous. There is a wide variety of platforms, leading to massive duplication of effort. We investigate whether optimizations in one virtual machine can be transplanted to a different infrastructure. We introduce the notion of horizontal profiling to identify relative optimization differences. We identify two potential transplants between Java HotSpot and Javascript V8.",
      "Affiliations": [
        "University of Glasgow",
        "University of Glasgow"
      ],
      "AffiliationsString": "University of Glasgow",
      "Authors": [
        "winghangli",
        "jeremysinger"
      ],
      "Key": "morevms-2017-papers-horizontal-profiling-for-virtual-machine-optimization-transplants",
      "PersonsString": "Wing Hang Li and Jeremy Singer",
      "Title": "Horizontal Profiling for Virtual Machine Optimization Transplants",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/morevms-2017-papers-horizontal-profiling-for-virtual-machine-optimization-transplants"
    },
    {
      "Abstract": "Classically, computers have been used as knowledge discovery tools insofar as the result of executing a program provides useful insight. For instance, the solution of a differential equation may help us understand the natural world, the value of a parameter of a statistical model may help us understand the probabilistic structure of a domain, the variable assignment maximising an objective function may help to further business goals. A secondary class of knowl- edge discovery stems from the act of using a programming language. By modeling a domain computationally, the developer can discover new and interesting properties of that domain, and better convey those insights to others. The purpose of this work is twofold: First, we want to show that programming languages can help their users achieve knowledge discovery moments and, secondly, that this property is the least exploited feature of programming languages in the general science community. We want to outline a research program with the objective of making scientific programming more efficient in its ultimate goal of knowledge discovery.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["javierburroni"],
      "Key": "refuses-2017-the-act-of-computer-programming-in-science",
      "PersonsString": "Javier Burroni",
      "Title": "The Act of Computer Programming in Science",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-the-act-of-computer-programming-in-science"
    },
    {
      "Abstract": "",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "refuses-2017-welcome-and-workshop-introduction",
      "PersonsString": "Tomas Petricek",
      "Title": "Welcome and workshop introduction",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-welcome-and-workshop-introduction"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["feliennehermans"],
      "Key": "refuses-2017-review-code-is-not-just-text-current-code-editors-are-inadequate-tools",
      "PersonsString": "Felienne Hermans",
      "Title": "Review: Code is not just text - current code editors are inadequate tools",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-code-is-not-just-text-current-code-editors-are-inadequate-tools"
    },
    {
      "Abstract": "Most of our interactions with the digital world are mediated by apps: desktop, web, or mobile applications. Apps impose artificial limitations on collaboration among users, distribution across devices, and the changing procedures that constantly occur in real work. These limitations are partially due to the engineering principles of encapsulation and program-data separation. By contrast, the field of hypermedia envisions collaboration, distribution and flexible practices as fundamental features of software. We discuss shareable dynamic media, an alternative model for software that unifies hypermedia and interactive systems, and Webstrates, an experimental implementation of that model. We give examples of patterns and challenges for software architecture that have emerged in our experimentation with Webstrates, and show that it subverts the principles of encapsulation and program-data separation.",
      "Affiliations": [
        "Ex Situ | UniversitÃ© Paris-Sud",
        "",
        ""
      ],
      "AffiliationsString": "Ex Situ | UniversitÃ© Paris-Sud, ",
      "Authors": [
        "philiptchernavskij",
        "clemensnylandstedklokmose",
        "michelbeaudouinlafon"
      ],
      "Key": "refuses-2017-what-can-software-learn-from-hypermedia-",
      "PersonsString": "Philip Tchernavskij, Clemens Nylandsted Klokmose and Michel Beaudouin-Lafon",
      "Title": "What Can Software Learn From Hypermedia?",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-what-can-software-learn-from-hypermedia-"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["lukechurch"],
      "Key": "refuses-2017-review-principles-of-antifragile-software",
      "PersonsString": "Luke Church",
      "Title": "Review: Principles of Antifragile Software",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-principles-of-antifragile-software"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["stephenkell"],
      "Key": "refuses-2017-review-a-certain-tendency-of-the-database-community",
      "PersonsString": "Stephen Kell",
      "Title": "Review: A Certain Tendency Of The Database Community",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-a-certain-tendency-of-the-database-community"
    },
    {
      "Abstract": "There are many software engineering concepts and techniques related to software errors. But is this enough? Have we already completely explored the software engineering noosphere with respect to errors and reliability? \nIn this paper, I discuss an novel concept, called ``software antifragility\u2019\u2019, that is unconventional and has the capacity to improve the way we engineer errors and dependability in a disruptive manner. This paper first discusses the foundations of software antifragilty, from classical fault tolerance to the most recent advances on automatic software repair and fault injection in production. This paper then explores the relation between the antifragility of the development process and the antifragility of the resulting software product.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["martinmonperrus"],
      "Key": "refuses-2017-principles-of-antifragile-software",
      "PersonsString": "Martin Monperrus",
      "Title": "Principles of Antifragile Software",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-principles-of-antifragile-software"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["lukechurch"],
      "Key": "refuses-2017-review-from-software-creationism-to-software-evolutionism",
      "PersonsString": "Luke Church",
      "Title": "Review: From Software Creationism to Software Evolutionism",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-from-software-creationism-to-software-evolutionism"
    },
    {
      "Abstract": "Writing and programming are often seen as different. Writing a creative profession, programming a technical one. Below the surface however, there is one large similarity. Both writing and programming are, ultimately, the translation of a high-level idea into low level sentences or statements. In this paper, we compare the activities of writing and programming, and indeed uncover similarities in the activities commonly described as part of the writing and programming workflow. \nHowever we also observe some differences, like the attention writers have for formatting and styling, and the opportunity for feedback programmers have by compiling and executing programs. This paper aims to explore differences and similarities, to understand each field better. Where are the procedures similar? Where can we learn from each other? Do we understand striking differences?",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "feliennehermans",
        "marliesaldewereld"
      ],
      "Key": "refuses-2017-programming-is-writing-is-programming",
      "PersonsString": "Felienne Hermans and Marlies Aldewereld",
      "Title": "Programming is Writing is Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-programming-is-writing-is-programming"
    },
    {
      "Abstract": "",
      "Affiliations": ["Ex Situ | UniversitÃ© Paris-Sud"],
      "AffiliationsString": "Ex Situ | UniversitÃ© Paris-Sud",
      "Authors": ["philiptchernavskij"],
      "Key": "refuses-2017-review-avatars-and-their-embodiments-midi-devices-their-past-and-future",
      "PersonsString": "Philip Tchernavskij",
      "Title": "Review: Tracing a Paradigm for Externalization: Avatars and the GPII Nexus",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-avatars-and-their-embodiments-midi-devices-their-past-and-future"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["antranigbasman"],
      "Key": "refuses-2017-review-what-can-software-learn-from-hypermedia-",
      "PersonsString": "Antranig Basman",
      "Title": "Review: What Can Software Learn From Hypermedia?",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-what-can-software-learn-from-hypermedia-"
    },
    {
      "Abstract": "We will situate the concept of an avatar (a working simulacrum of part of a system separated from it in space or time) with respect to traditional concepts of programming language and systems design. Whilst much theory and practice argues in favour of insulation (the creation of architectural boundaries prohibiting the leakage of information) we will find that many successful systems take a diametrically opposed approach. We name this family of systems as those based on externalised state transfer. Rather than hiding implementation details behind APIs, object interfaces or similar, these systems actively advertise their internal structure and its coordinates via data and metadata. Examples of these systems include RESTful web applications, MIDI devices, and the DWARF debugging file format. We discuss such systems and how we can purposefully design new systems embodying such virtues in a more distilled form.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "colinclark",
        "antranigbasman"
      ],
      "Key": "refuses-2017-avatars-and-their-embodiments-midi-devices-their-past-and-future",
      "PersonsString": "Colin Clark and Antranig Basman",
      "Title": "Tracing a Paradigm for Externalization: Avatars and the GPII Nexus",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-avatars-and-their-embodiments-midi-devices-their-past-and-future"
    },
    {
      "Abstract": "We posit that striving for distributed systems that provide \u201csingle system image\u201d semantics is fundamentally flawed and at odds with how systems operate in the physical world. We realize the database as an optimization of this system: a required, essential optimization in practice that facilitates central data placement and ease of access to participants in a system. We motivate a new model of computation that is designed to address the problems of computation over \u201ceventually consistent\u201d information in a large-scale distributed system.",
      "Affiliations": ["UniversitÃ© catholique de Louvain"],
      "AffiliationsString": "UniversitÃ© catholique de Louvain",
      "Authors": ["christophermeiklejohn"],
      "Key": "refuses-2017-a-certain-tendency-of-the-database-community",
      "PersonsString": "Christopher Meiklejohn",
      "Title": "A Certain Tendency Of The Database Community",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-a-certain-tendency-of-the-database-community"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["antranigbasman"],
      "Key": "refuses-2017-review-the-act-of-computer-programming-in-science",
      "PersonsString": "Antranig Basman",
      "Title": "Review: The Act of Computer Programming in Science",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-the-act-of-computer-programming-in-science"
    },
    {
      "Abstract": "The lives we live are weaved around the stories we tell. This is true of programmers as of all humans. And the greatest of all stories are origin stories. I will examine the origin stories of software, from simple tales of software creation to elaborate theories of software evolution. And I will relate these stories to the tools they explain and the technological realities we bring about by following them. I will conclude by reflecting on storytelling, on the progression of the above stories, and on what lies beyond. Stories are fun! And they subtly inform us. Let me tell you a good story\u2026",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["francoisrenerideau"],
      "Key": "refuses-2017-from-software-creationism-to-software-evolutionism",
      "PersonsString": "FranÃ§ois-RenÃ© Rideau",
      "Title": "From Software Creationism to Software Evolutionism",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-from-software-creationism-to-software-evolutionism"
    },
    {
      "Abstract": "",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "refuses-2017-review-programming-is-writing-is-programming",
      "PersonsString": "Tomas Petricek",
      "Title": "Review: Programming is Writing is Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-review-programming-is-writing-is-programming"
    },
    {
      "Abstract": "The most popular code editors treat it like any other form of text. This leads to all kinds of problems, from grave syntax errors to the seemingly superficial code style inconsistencies. Alternative editors, namely visual programming lnaguages, are available, but mostly in the form of educational tools and therefor have their own set of problems when used productively. But there might be a middle ground wort exploring, between the high productivity of traditional editors and the constrained interactivity of visual programming languages.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["gregorweber"],
      "Key": "refuses-2017-code-is-not-just-text-current-code-editors-are-inadequate-tools",
      "PersonsString": "Gregor Weber",
      "Title": "Code is not just text - current code editors are inadequate tools",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/refuses-2017-code-is-not-just-text-current-code-editors-are-inadequate-tools"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alexanderwood"],
      "Key": "els-2017-type-inference-in-cleavi",
      "PersonsString": "Alexander Wood",
      "Title": "Type Inference in Cleavir",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-type-inference-in-cleavi"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Inria Bordeaux",
        ""
      ],
      "AffiliationsString": "Inria Bordeaux, ",
      "Authors": [
        "ireneannedurand",
        "robertstrandh"
      ],
      "Key": "els-2017-removing-redundant-tests-by-replicating-control-paths",
      "PersonsString": "IrÃ¨ne Anne Durand and Robert Strandh",
      "Title": "Removing redundant tests by replicating control paths",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-removing-redundant-tests-by-replicating-control-paths"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "robertgoldman",
        "eliaspipping",
        "francoisrenerideau"
      ],
      "Key": "els-2017-delivering-common-lisp-applications-with-asdf-3-3",
      "PersonsString": "Robert Goldman, Elias Pipping and FranÃ§ois-RenÃ© Rideau",
      "Title": "Delivering Common Lisp Applications with ASDF 3.3",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/els-2017-delivering-common-lisp-applications-with-asdf-3-3"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["fredericpeschanski"],
      "Key": "els-2017-a-lisp-way-to-type-theory-and-formal-proofs",
      "PersonsString": "FrÃ©dÃ©ric Peschanski",
      "Title": "A Lisp Way to Type Theory and Formal Proofs",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-a-lisp-way-to-type-theory-and-formal-proofs"
    },
    {
      "Abstract": "",
      "Affiliations": ["UniversitÃ© de Bordeaux / LaBRI"],
      "AffiliationsString": "UniversitÃ© de Bordeaux / LaBRI",
      "Authors": ["michaelraskin"],
      "Key": "els-2017-writing-a-portable-code-walker-in-common-lisp",
      "PersonsString": "Michael Raskin",
      "Title": "Writing a portable code walker in Common Lisp",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-writing-a-portable-code-walker-in-common-lisp"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "ireneannedurand1",
        "robertstrandh"
      ],
      "Key": "els-2017-fast-maintainable-and-portable-sequence-functions",
      "PersonsString": "IrÃ¨ne Anne Durand and Robert Strandh",
      "Title": "Fast, Maintainable, and Portable Sequence Functions",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-fast-maintainable-and-portable-sequence-functions"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alainmarty"],
      "Key": "els-2017-on-the-lambda-way-",
      "PersonsString": "Alain Marty",
      "Title": "on the {lambda way}",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-on-the-lambda-way-"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["stevelosh"],
      "Key": "els-2017-general-game-playing-in-common-lisp",
      "PersonsString": "Steve Losh",
      "Title": "General Game Playing in Common Lisp",
      "Type": "Other",
      "URL": "http://2017.programming-conference.org/event/els-2017-general-game-playing-in-common-lisp"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "benjaminseppke",
        "leoniedreschlerfischer"
      ],
      "Key": "els-2017-interactive-functional-medical-image-analysis",
      "PersonsString": "Benjamin Seppke and Leonie Dreschler-Fischer",
      "Title": "Interactive Functional Medical Image Analysis",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/els-2017-interactive-functional-medical-image-analysis"
    },
    {
      "Abstract": "We present a rationale for expanding the presence of the Lisp family of programming languages in bioinformatics and computational biology research. Put simply, Lisp-family languages enable programmers to more quickly write programs that run faster than in other languages. Languages such as Common Lisp, Scheme and Clojure facilitate the creation of powerful and flexible software that is required for complex and rapidly evolving domains like biology. We will point out several important key features that distinguish languages of the Lisp family from other programming languages, and we will explain how these features can aid researchers in becoming more productive and creating better code. We will also show how these features make these languages ideal tools for artificial intelligence and machine learning applications. We will specifically stress the advantages of domain-specific languages (DSLs): languages that are specialized to a particular area, and thus not only facilitate easier research problem formulation, but also aid in the establishment of standards and best programming practices as applied to the specific research field at hand. DSLs are particularly easy to build in Common Lisp, the most comprehensive Lisp dialect, which is commonly referred to as the \u2018programmable programming language\u2019. We are convinced that Lisp grants programmers unprecedented power to build increasingly sophisticated artificial intelligence systems that may ultimately transform machine learning and artificial intelligence research in bioinformatics and computational biology.",
      "Affiliations": ["University of Miami Miller School of Medicine"],
      "AffiliationsString": "University of Miami Miller School of Medicine",
      "Authors": ["bohdankhomtchouk"],
      "Key": "els-2017-how-the-strengths-of-lisp-family-languages-facilitate-building-complex-and-flexible-bioinformatics-applications",
      "PersonsString": "Bohdan Khomtchouk",
      "Title": "How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-how-the-strengths-of-lisp-family-languages-facilitate-building-complex-and-flexible-bioinformatics-applications"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["vsevoloddomkin"],
      "Key": "els-2017-loading-multiple-versions-of-an-asdf-system-in-the-same-lisp-image",
      "PersonsString": "Vsevolod Domkin",
      "Title": "Loading Multiple Versions of an ASDF System in the Same Lisp Image",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-loading-multiple-versions-of-an-asdf-system-in-the-same-lisp-image"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "els-2017-announcements-wrapup-goodbye",
      "PersonsString": "",
      "Title": "Announcements, wrapup, goodbye",
      "Type": "Day closing",
      "URL": "http://2017.programming-conference.org/event/els-2017-announcements-wrapup-goodbye"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["michaherda"],
      "Key": "els-2017-common-lisp-ultraspec-a-project-for-modern-common-lisp-documentation",
      "PersonsString": "MichaÅ Herda",
      "Title": "Common Lisp UltraSpec - A Project For Modern Common Lisp Documentation",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-common-lisp-ultraspec-a-project-for-modern-common-lisp-documentation"
    },
    {
      "Abstract": "",
      "Affiliations": ["Shirakumo.org"],
      "AffiliationsString": "Shirakumo.org",
      "Authors": ["nicolashafner"],
      "Key": "els-2017-radiance-a-web-application-environment",
      "PersonsString": "Nicolas Hafner",
      "Title": "Radiance \u2013 a Web Application Environment",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/els-2017-radiance-a-web-application-environment"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "marcoheisig",
        "nicolasneu"
      ],
      "Key": "els-2017-parallelizing-femlisp",
      "PersonsString": "Marco Heisig and Nicolas NeuÃ",
      "Title": "Parallelizing Femlisp",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-parallelizing-femlisp"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "EPITA / LRDE",
        "EPITA / LRDE",
        ""
      ],
      "AffiliationsString": "EPITA / LRDE, ",
      "Authors": [
        "jimnewton",
        "didierverna",
        "maximiliencolange"
      ],
      "Key": "els-2017-programmatic-manipulation-of-common-lisp-type-specifiers",
      "PersonsString": "Jim Newton, Didier Verna and Maximilien Colange",
      "Title": "Programmatic Manipulation of Common Lisp Type Specifiers",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-programmatic-manipulation-of-common-lisp-type-specifiers"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "danielbrunner",
        "stephanbrunner"
      ],
      "Key": "els-2017-teaching-students-of-engineering-some-insights-of-the-internet-of-things-using-racket-and-the-raspberrypi",
      "PersonsString": "Daniel Brunner and Stephan Brunner",
      "Title": "Teaching Students of Engineering some Insights of the Internet of Things using Racket and the RaspberryPi",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/els-2017-teaching-students-of-engineering-some-insights-of-the-internet-of-things-using-racket-and-the-raspberrypi"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "els-2017-welcome-messages-and-announcements",
      "PersonsString": "",
      "Title": "Welcome messages and announcements",
      "Type": "Day opening",
      "URL": "http://2017.programming-conference.org/event/els-2017-welcome-messages-and-announcements"
    },
    {
      "Abstract": "Data persistence can add a great deal of complexity to application software, and making the gap between application and storage has been a constant field of research, experiments and products. In the object oriented programming paradigm, persistence seems to be a natural extension to object behavior, and even though one could argue that many persistent object systems have flaws and leak their abstractions, there is a large body of prior art and research in that area.\nIn the functional programming world, persistence does not find as natural a partnering abstraction, and it is often either conceptionally pushed to the boundaries of the application, or treated in an ad-hoc fashion interleaved with the beauty and conceptional rigor of pure functions.\nThe presentation discusses these forces and explores how Clojure\u2019s Software Transactional Memory system can be used to implement application data persistence.",
      "Affiliations": ["LambdaWerk GmbH"],
      "AffiliationsString": "LambdaWerk GmbH",
      "Authors": ["hanshubner"],
      "Key": "els-2017-identity-in-a-world-of-values",
      "PersonsString": "Hans HÃ¼bner",
      "Title": "Identity in a World of Values",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-identity-in-a-world-of-values"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
        "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
        "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg"
      ],
      "AffiliationsString": "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
      "Authors": [
        "alexanderlier",
        "kaiselgrad",
        "marcstamminger"
      ],
      "Key": "els-2017-diy-meta-languages-with-common-lisp",
      "PersonsString": "Alexander Lier, Kai Selgrad and Marc Stamminger",
      "Title": "DIY Meta Languages with Common Lisp",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-diy-meta-languages-with-common-lisp"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": ", Vrije Universiteit Brussel, Belgium, Vrije Universiteit Brussel",
      "Authors": [
        "jonasdebleser",
        "quentinstievenart",
        "jensnicolay",
        "coenderoover"
      ],
      "Key": "els-2017-static-taint-analysis-of-event-driven-scheme-programs",
      "PersonsString": "Jonas De Bleser, Quentin StiÃ©venart, Jens Nicolay and Coen De Roover",
      "Title": "Static Taint Analysis of Event-driven Scheme Programs",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-static-taint-analysis-of-event-driven-scheme-programs"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "els-2017-lightning-talks",
      "PersonsString": "",
      "Title": "Lightning Talks",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/els-2017-lightning-talks"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-organizational-registration",
      "PersonsString": "",
      "Title": "Registration",
      "Type": "Registration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-organizational-registration"
    },
    {
      "Abstract": "Data accessors allow one to read and write components of a data structure, such as the fields of a record, the variants of a union, or the elements of a container. These data accessors are collectively known as optics; they are fundamental to programs that manipulate complex data. Individual data accessors for simple data structures are easy to write, for example as pairs of \u201cgetter\u201d and \u201csetter\u201d methods. However, it is not obvious how to combine data accessors, in such a way that data accessors for a compound data structure are composed out of smaller data accessors for the parts of that structure. Generally, one has to write a sequence of statements or declarations that navigate step by step through the data structure, accessing one level at a time - which is to say, data accessors are traditionally not first-class citizens, combinable in their own right.\nWe present a framework for modular data access, in which individual data accessors for simple data structures may be freely combined to obtain more complex data accessors for compound data structures. Data accessors become first-class citizens. The framework is based around the notion of profunctors, a flexible generalization of functions. The language features required are higher-order functions (\u201clambdas\u201d or \u201cclosures\u201d), parametrized types (\u201cgenerics\u201d or \u201cabstract types\u201d) of higher kind, and some mechanism for separating interfaces from implementations (\u201cabstract classes\u201d or \u201cmodules\u201d). We use Haskell as a vehicle in which to present our constructions, but other languages such as Scala that provide the necessary features should work just as well. We provide implementations of all our constructions, in the form of a literate program: the manuscript file for the paper is also the source code for the program, and the extracted code is available separately for evaluation. Our results should pave the way to simpler ways of writing programs that access the components of compound data structures.",
      "Affiliations": [
        "",
        "Department of Computer Science, University of Oxford",
        "University of Bristol"
      ],
      "AffiliationsString": ", Department of Computer Science, University of Oxford, University of Bristol",
      "Authors": [
        "matthewpickering",
        "jeremygibbons",
        "nicolaswu"
      ],
      "Key": "programming-2017-papers-tbd-11",
      "PersonsString": "Matthew Pickering, Jeremy Gibbons and Nicolas Wu",
      "Title": "Profunctor Optics: Modular Data Accessors",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-11"
    },
    {
      "Abstract": "The context of this research is testing and building software systems and, specifically, software language repositories (SLRs), i.e., repositories with components for language processing (interpreters, translators, analyzers, transformers, pretty printers, etc.). SLRs are typically set up for developing and using metaprogramming systems, language workbenches, language definition frameworks, executable semantic frameworks, and modeling frameworks.\nThis work is an inquiry into testing and building SLRs in a manner that the repository is seen as a collection of language-typed artifacts being related by the applications of language-typed functions or relations which serve language processing. The notion of language is used in a broad sense to include text-, tree-, graph-based languages as well as representations based on interchange formats and also proprietary formats for serialization.\nThe overall approach underlying this research is one of language design driven by a complex case study, i.e., a specific SLR with a significant number of processed languages and language processors as well as a noteworthy heterogeneity in terms of representation types and implementation languages.\nThe knowledge gained by our research is best understood as a declarative language design for regression testing and build management; we introduce a corresponding language Ueber with an executable semantics which maintains relationships between language-typed artifacts in an SLR.\nThe grounding of the reported research is based on the comprehensive, formal, executable (logic programming-based) definition of the Ueber language and its systematic application to the management of the SLR YAS which consists of hundreds of language definition and processing components (such as interpreters and transformations) for more than thirty languages (not counting different representation types) with Prolog, Haskell, Java, and Python being used as implementation languages.\nThe importance of this work follows from the significant costs implied by regression testing and build management and also from the complexity of SLRs which calls for means to help with understanding.",
      "Affiliations": ["University of Koblenz-Landau, Germany"],
      "AffiliationsString": "University of Koblenz-Landau, Germany",
      "Authors": ["ralflammel"],
      "Key": "programming-2017-papers-tdb-2",
      "PersonsString": "Ralf LÃ¤mmel",
      "Title": "Relationship Maintenance in Software Language Repositories",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tdb-2"
    },
    {
      "Abstract": "Model-driven development is a pragmatic approach to software development that embraces domain-specific languages (DSLs), where models correspond to DSL programs. A distinguishing feature of model-driven development is that clients of a model can select from an open set of alternative semantics of the model by applying different model transformations. However, in existing model-driven frameworks, dependencies between models, model transformations, and generated code artifacts are either implicit or globally declared in build scripts, which impedes modular reasoning, separate compilation, and programmability in general.\nWe propose the design of a new module system that incorporates models and model transformations as modules. A programmer can apply transformations in import statements, thus declaring a dependency on generated code artifacts. Our design enables modular reasoning and separate compilation by preventing hidden dependencies, and it supports mixing modeling artifacts with conventional code artifacts as well as higher-order transformations. We have formalized our design and the aforementioned properties and have validated it by an implementation and case studies that show that our module system successfully integrates model-driven development into conventional programming languages.",
      "Affiliations": [
        "TU Delft",
        "University of TÃ¼bingen, Germany"
      ],
      "AffiliationsString": "TU Delft, University of TÃ¼bingen, Germany",
      "Authors": [
        "sebastianerdweg",
        "klausostermann"
      ],
      "Key": "programming-2017-papers-tbd-8",
      "PersonsString": "Sebastian Erdweg and Klaus Ostermann",
      "Title": "A Module-System Discipline for Model-Driven Software Development",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-8"
    },
    {
      "Abstract": "On Monday (April 3rd), there is a beer reception at the conference venue, where you can enjoy many of our Belgian beers.\nMore information",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-social-events-belgian-beer-reception",
      "PersonsString": "",
      "Title": "Belgian beer reception",
      "Type": "Social Event",
      "URL": "http://2017.programming-conference.org/event/programming-2017-social-events-belgian-beer-reception"
    },
    {
      "Abstract": "Context: Multidimensional arrays are used by many different algorithms. As such, indexing and broadcasting complex operations over multidimensional arrays are ubiquitous tasks and can be performance limiting. \nInquiry: Simultaneously indexing two or more multidimensional arrays with different shapes (e.g., copying data from one tensor to another larger, zero padded tensor in anticipation of a convolution) is difficult to do efficiently: Hard-coded nested for loops in C, Fortran, and Go cannot be applied when the dimension of a tensor is unknown at compile time. Likewise, boost::multi_array cannot be used unless the dimensions of the array are known at compile time, and the style of implementation restricts the user from using the index tuple inside a vectorized operation (as would be required to compute an expected value of a multidimensional distribution). On the other hand, iteration methods that do not require the dimensionality or shape to be known at compile time (e.g., incrementing and applying carry operations to index tuples or remapping integer indices in the flat array), can be substantially slower than hard-coded nested for loops.\nApproach: Using a few tasks that broadcast operations over multidimensional arrays, several existing methods are compared: hard-coded nested for loops in C and Go, vectorized operations in Fortran, boost::multi_array, numpy, tuple incrementing, and integer reindexing.\nKnowledge: A new approach to this problem, ``template-recursive iteration over tensors\u2019\u2019 (TRIOT), is proposed. This new method, which is made possible by features of C++11, can be used when the dimensions of the tensors are unknown at compile time. Furthermore, the proposed method can access the index tuple inside the vectorized operations, permitting much more flexible operations.\nGrounding: Runtimes of all methods are compared, and demonstrate that the proposed TRIOT method is competitive with both hard-coded nested for loops in C and Go, as well as vectorized operations in Fortran, despite not knowing the dimensions at compile time. TRIOT outperforms boost::multi_array, numpy, tuple incrementing, and integer reindexing.\nImportance: Manipulation of multidimensional arrays is a common task in software, especially in high-performance numerical methods. This paper proposes a novel way to leverage template recursion to iterate over and apply operations to multidimensional arrays, and then demonstrates the superior performance and flexibility of operations that can be achieved using this new approach.",
      "Affiliations": [
        "Freie UniveristÃ¤t Berlin",
        "Freie UniversitÃ¤t Berlin"
      ],
      "AffiliationsString": "Freie UniveristÃ¤t Berlin, Freie UniversitÃ¤t Berlin",
      "Authors": [
        "oliverserang",
        "florianheyl"
      ],
      "Key": "programming-2017-papers-tbd-5",
      "PersonsString": "Oliver Serang and Florian Heyl",
      "Title": "TRIOT: Faster tensor manipulation in C++11",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-5"
    },
    {
      "Abstract": "Reversible debuggers and process replay have been developed at least since 1970. This vision enables one to execute backwards in time under a debugger. Two important problems in practice are that, first, current reversible debuggers are slow when reversing over long time periods, and, second, after building one reversible debugger, it is difficult to transfer that achievement to a new programming environment.\nThe user observes a bug when arriving at an error. Searching backwards for the correspond- ing fault may require many reverse steps. Ultimately, the user prefers to write an expression that will transition to false upon arriving at the fault. The solution is an expression-transition watchpoint facility based on top of snapshots and record/replay. Expression-transition watch- points are implemented as binary search through the timeline of a program execution, while using the snapshots as landmarks within that timeline. This allows for debugging of subtle bugs that appear only after minutes or more of program execution. When a bug occurs within seconds of program startup, repeated debugging sessions suffice. Reversible debugging is preferred for bugs seen only after minutes.\nThis architecture allows for an efficient and easy-to-write snapshot-based reversibe debugger on top of a conventional debugger. The validity of this approach was tested by developing four personalities (for GDB, MATLAB, Perl, and Python), with each personality typically requiring just 100 lines of code.",
      "Affiliations": [
        "",
        "",
        "Cloudera",
        "Northeastern University"
      ],
      "AffiliationsString": ", Cloudera, Northeastern University",
      "Authors": [
        "kapilarya",
        "tylerdenniston",
        "arielrabkin",
        "genecooperman"
      ],
      "Key": "programming-2017-papers-tbd-6",
      "PersonsString": "Kapil Arya, Tyler Denniston, Ariel Rabkin and Gene Cooperman",
      "Title": "Transition Watchpoints: Teaching Old Debuggers New Tricks",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-6"
    },
    {
      "Abstract": "Computer programs do not always work as expected. In fact, ominous warnings about the desperate state of the software industry continue to be released with almost ritualistic regularity. In this paper, we look at the 60 years history of programming and at the different practical methods that software community developed to live with programming errors. \nWe do so by observing a class of students discussing different approaches to programming errors. While learning about the different methods for dealing with errors, we uncover basic assumptions that proponents of different paradigms follow. We learn about the mathematical attempt to eliminate errors through formal methods, scientific method based on testing, a way of building reliable systems through engineering methods, as well as an artistic approach to live coding that accepts errors as a creative inspiration. \nThis way, we can explore the differences and similarities among the different paradigms. By inviting proponents of different methods into a single discussion, we hope to open potential for new thinking about errors. When should we use which of the approaches? And what can software development learn from mathematics, science, engineering and art? \nWhen programming or studying programming, we are often enclosed in small communities and we take our basic assumptions for granted. Through the discussion in this paper, we attempt to map the large and rich space of programming ideas and provide reference points for exploring, perhaps foreign, ideas that can challenge some of our assumptions.",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "programming-2017-papers-tbd-12",
      "PersonsString": "Tomas Petricek",
      "Title": "Miscomputation in software: Learning to live with errors",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-12"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "HPI",
        "University of Lugano",
        "University of Waterloo, Canada",
        "Google",
        "Universidad de MÃ¡laga, Spain",
        "Colorado State University, USA",
        "Open University and Technion IIT",
        "McGill University, Canada",
        " University of Central Florida",
        "Tokyo Institute of Technology",
        "TU Darmstadt",
        "Ãcole des Mines de Nantes, France",
        "University of Freiburg",
        "Delft University of Technology",
        "King's College London",
        "Inria, France"
      ],
      "AffiliationsString": "HPI, University of Lugano, University of Waterloo, Canada, Google, Universidad de MÃ¡laga, Spain, Colorado State University, USA, Open University and Technion IIT, McGill University, Canada,  University of Central Florida, Tokyo Institute of Technology, TU Darmstadt, Ãcole des Mines de Nantes, France, University of Freiburg, Delft University of Technology, King's College London, Inria, France",
      "Authors": [
        "roberthirschfeld",
        "walterbinder",
        "krzysztofczarnecki",
        "erikernst",
        "lidiafuentes",
        "sudiptoghosh",
        "davidhlorenz",
        "jorgkienzle",
        "garyleavens",
        "hidehikomasuhara",
        "guidosalvaneschi",
        "mariosudholt",
        "peterthiemann",
        "eelcovisser",
        "steffenzschaler",
        "manuelserrano"
      ],
      "Key": "programming-2017-organizational-steering-committee-meeting",
      "PersonsString": "Robert Hirschfeld, Walter Binder, Krzysztof Czarnecki, Erik Ernst, Lidia Fuentes, Sudipto Ghosh, David H. Lorenz, JÃ¶rg Kienzle, Gary Leavens, Hidehiko Masuhara, Guido Salvaneschi, Mario SÃ¼dholt, Peter Thiemann, Eelco Visser, Steffen Zschaler and Manuel Serrano",
      "Title": "Steering Committee Meeting",
      "Type": "Meeting",
      "URL": "http://2017.programming-conference.org/event/programming-2017-organizational-steering-committee-meeting"
    },
    {
      "Abstract": "We will have the first round of the Student Research Competition and the regular poster session together with an informal reception in the conference venue.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-posters-poster-session",
      "PersonsString": "",
      "Title": "Poster Session",
      "Type": "Social Event",
      "URL": "http://2017.programming-conference.org/event/programming-posters-poster-session"
    },
    {
      "Abstract": "Language-oriented modularity (LOM) is a methodology that complements language-oriented programming (LOP) in providing on-demand language abstraction solutions during software development. It involves the implementation and immediate utilization of domain-specific languages (DSLs) that are also aspect-oriented (DSALs). However, while DSL development is affordable thanks to modern language workbenches, DSAL development lacks similar tool support. Consequently, LOM is often impractical and underutilized.\nThe challenge is making the complexity of implementing DSALs comparable to that of DSLs and the effectiveness of programming with DSALs comparable to that of general-purpose aspect languages (GPALs). Today, despite being essentially both domain-specific and aspect-oriented, DSALs seem to be second-class. Aspect development tools (e.g., AJDT) do not work on DSAL code. DSL development tools like language workbenches (e.g., Spoofax) neither deal with the back-end weaving nor handle the composition of DSALs. DSAL composition frameworks (e.g., Awesome) do not provide front-end development tools. DSAL code transformation approaches (e.g., XAspects) do not preserve the semantics of DSAL programs in the presence of other aspect languages.\nTo address this challenge we extend AspectJ with a small set of annotations and interfaces that allows DSAL designers to define a semantic-preserving transformation to AspectJ and interface with AspectJ tools. Our transformation approach enables the use of a standard language workbench to implement DSALs and use of standard aspect development tools to program with these DSALs. As a result, DSALs regain their first-class status with respect to both DSLs and aspect languages. This, on the one hand, lowers the cost of developing DSALs to the level of DSLs and, on the other hand, raises the effectiveness of using a DSAL to the level of a GPAL. Consequently, LOM becomes cost-effective compared to the LOP baseline.\nAs validation, we modified the ajc compiler to support our approach. Using two different language workbenches (Spoofax and Xtext) we then implemented several DSALs. We implemented Cool to demonstrate that the non-trivial composition of AspectJ and Cool can be accommodated using our approach. We applied LOM to crosscutting concerns in two open source projects (oVirt and muCommander), implementing in the process application-specific DSALs, thus providing a sense of the decrease in the cost of developing composable DSALs and the increase in the effectiveness of programming with them.\nCrosscutting concerns remain a problem in modern real-world projects (e.g., as observed in oVirt). DSALs are often the right tool for addressing these concerns. Our work makes LOM practical, thus facilitating the use of DSAL solutions in the software development process.",
      "Affiliations": [
        "Open University",
        "Open University and Technion IIT"
      ],
      "AffiliationsString": "Open University, Open University and Technion IIT",
      "Authors": [
        "arikhadas",
        "davidhlorenz"
      ],
      "Key": "programming-2017-papers-tbd-1",
      "PersonsString": "Arik Hadas and David H. Lorenz",
      "Title": "Language Oriented Modularity: From Theory to Practice",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-1"
    },
    {
      "Abstract": "Extensible programming languages are the next big thing. Decades of work on programming-language design have given us powerful abstractions that cover a large problem space, but no one abstraction can close the gap between a programming language and all programming problems. When a programming language is extensible, a programmer can afford to create the right abstraction to solve each problem.\nRacket\u2019s Lisp and Scheme heritage gives it a head start on language extensibility, but Scheme\u2019s macro system turned out to be a starting point instead of a conclusion. The practice of building Racket and building applications has drawn us continually back the problem of building languages and composable language extensions.\nWe have been able to grow the idea of macros to the more expressive and convenient facilities that are found in Racket today. Key elements include a novel model of scope, a module system that enforces a phase separation, submodules that generalize program phases, and improved pattern-parsing and error-reporting libraries. These elements take on a specific flavor in our macro setting, but each element also reflects a general problem and points to a fundamental solution that designers of extensible languages can embrace.",
      "Affiliations": ["University of Utah"],
      "AffiliationsString": "University of Utah",
      "Authors": ["matthewflatt"],
      "Key": "programming-2017-keynotes-how-racket-went-meta",
      "PersonsString": "Matthew Flatt",
      "Title": "How Racket Went Meta",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-keynotes-how-racket-went-meta"
    },
    {
      "Abstract": "Since the early days of the Web, web application developers have aspired to develop much of their applications declaratively. However, one aspect of the application, namely its business-logic is constantly left imperative. In this work we present Application Embedding, a novel approach to application development which allows all aspects of an application, including its business-logic, to be programmed declaratively. \nWe achieve this approach in a two-step process. First, we draw a mapping between Web applications and Domain-Specific Languages (DSLs). Second, we note that out of the two methods for implementing DSLs, namely as internal and external DSLs, most traditional Web applications correspond to external DSLs, while the the technique that corresponds to DSL embedding (implementing internal DSLs) is left mostly unexplored. \nBy projecting the well-known technique of DSL embedding to web applications, we derive our novel technique \u2013 Application Embedding. Application embedding offers a separation of code assets that encourages reuse of imperative code, while keeping all application-specific assets, including those specifying its business-logic, declarative. \nAs validation, we implemented a simple, though nontrivial web application using the proposed separation of assets. This implementation includes an application-agnostic imperative host application named Fish-Tank, intended to be applicable for a wide variety of such applications, and a declarative definition of the different aspects of the specific application, intended to be loaded on that host. \nThis novel separation of code assets facilitates a better separation of work, in comparison to traditional methods. By this separation, host application developers can focus mostly on the extra-functional aspects of a web application, namely on improving performance, scalability and availability, while developers of an embedded application can focus on the functional aspects of their application, without worrying about extra-functional concerns. The reusability of the host application can make it cost-effective to put much effort into a better implementation, which can benefit all applications built on top of it.",
      "Affiliations": [
        "Open University and Technion IIT",
        "University of Haifa"
      ],
      "AffiliationsString": "Open University and Technion IIT, University of Haifa",
      "Authors": [
        "davidhlorenz",
        "boazrosenan"
      ],
      "Key": "programming-2017-papers-tbd-10",
      "PersonsString": "David H. Lorenz and Boaz Rosenan",
      "Title": "Application Embedding: A Language Approach to Declarative Web Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-10"
    },
    {
      "Abstract": "The context of the reported research is the documentation of software technologies such as object/relational mappers, web-application frameworks, or code generators. We assume that documentation should model a macroscopic view on usage scenarios of technologies in terms of involved artifacts, leveraged soft- ware languages, transformation and conformance relationships, I/O behavior, and others. In previous work, we referred to such documentation also as \u2018linguistic architecture\u2019. The corresponding models may also be referred to as \u2018megamodels\u2019 while adopting this term from the technological space of modeling/model-driven engineering. This work is an inquiry into making such documentation more useful by means of connecting (mega)models, systems, and developer experience in several ways. To this end, we adopt an approach that is primarily based on prototyping (i.e., implementation of a megamodeling infrastructure with all conceivable connections) and experimentation with showcases (i.e., documentation of concrete software technologies). The knowledge gained by this research is a notion of interconnected linguistic architecture on the grounds of connecting primary model elements, inferred model elements, static and runtime system artifacts, traceability links, system contexts, knowledge resources, plugged interpretations of model elements, and IDE views. A corresponding suite of aspects of interconnected linguistic architecture is systematically described. As to the grounding of this research, we describe a literature survey which tracks scattered occurrences and thus demonstrates the relevance of the identified aspects of interconnected linguistic architecture. Further, we describe the MegaL/Xtext+IDE infrastructure which realizes interconnected linguistic architecture. The importance of this work lies in providing relatively formal, ontologically rich, navigable, and verifiable documentation of software technologies, thereby helping developers to better understand how to use technologies in new systems (prescriptive mode) or how technologies are used in existing systems (descriptive mode).",
      "Affiliations": [
        "University of Koblenz-Landau, Germany",
        "University of Koblenz-Landau, Germany",
        "University of Koblenz-Landau, Germany",
        "University of Koblenz-Landau, Germany",
        "University of Koblenz-Landau, Germany"
      ],
      "AffiliationsString": "University of Koblenz-Landau, Germany",
      "Authors": [
        "johanneshartel",
        "lukashartel",
        "ralflammel",
        "andreivaranovich",
        "marcelheinz"
      ],
      "Key": "programming-2017-papers-tbd-9",
      "PersonsString": "Johannes HÃ¤rtel, Lukas HÃ¤rtel, Ralf LÃ¤mmel, Andrei Varanovich and Marcel Heinz",
      "Title": "Interconnected Linguistic Architecture",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-9"
    },
    {
      "Abstract": "The context of this work is specification, detection and ultimately removal of detectable harmful patterns in source code that are associated with defects in design and implementation of software. In particular, we investigate five code smells and four antipatterns previously defined in papers and books. Our inquiry is about detecting those in source code written in Python programming language, which is substantially different from all prior research, most of which concerns Java or C-like languages. Our approach was that of software engineers: we have processed existing research literature on the topic, extracted both the abstract definitions of nine design defects and their concrete implementation specifications, implemented them all in a tool we have programmed and let it loose on a huge test set obtained from open source code from thousands of GitHub projects. When it comes to knowledge, we have found that more than twice as many methods in Python can be considered too long (statistically extremely longer than their neighbours within the same project) than in Java, but long parameter lists are seven times less likely to be found in Python code than in Java code. We have also found that Functional Decomposition, the way it was defined for Java, is not found in the Python code at all, and Spaghetti Code and God Classes are extremely rare there as well. The grounding and the confidence in these results comes from the fact that we have performed our experiments on 32\u2019058\u2019823 lines of Python code, which is by far the largest test set for a freely available Python parser. We have also designed the experiment in such a way that it aligned with prior research on design defect detection in Java in order to ease the comparison if we treat our own actions as a replication. Thus, the importance of the work is both in the unique open Python grammar of highest quality, tested on millions of lines of code, and in the design defect detection tool which works on something else than Java.",
      "Affiliations": [
        "University of Amsterdam, Netherlands",
        "Raincode, Belgium"
      ],
      "AffiliationsString": "University of Amsterdam, Netherlands, Raincode, Belgium",
      "Authors": [
        "nicolevavrova",
        "vadimzaytsev"
      ],
      "Key": "programming-2017-papers-tbd-17",
      "PersonsString": "Nicole VavrovÃ¡ and Vadim Zaytsev",
      "Title": "Does Python Smell Like Java?",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-17"
    },
    {
      "Abstract": "Literate programming was conceived by Donald Knuth in the 1970s. Live programming has its roots even earlier, but the classic examples date from that same time. Both live programming and literate programming are now experiencing a resurgence. While these ideas were introduced separately, the two were made for each other from the start. This talk celebrates their happy, literate and live marriage.",
      "Affiliations": ["Google"],
      "AffiliationsString": "Google",
      "Authors": ["giladbracha"],
      "Key": "programming-2017-keynotes-live-literate-programming",
      "PersonsString": "Gilad Bracha",
      "Title": "Live Literate Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-keynotes-live-literate-programming"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-catering-lunch-i",
      "PersonsString": "",
      "Title": "Lunch",
      "Type": "Lunch",
      "URL": "http://2017.programming-conference.org/event/programming-2017-catering-lunch-i"
    },
    {
      "Abstract": "The second round of the Student Research Competition will have students presenting short talks on their research.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-posters-src-presentations",
      "PersonsString": "",
      "Title": "SRC Presentations",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-posters-src-presentations"
    },
    {
      "Abstract": "Live programming environments enable programmers to edit a running program and obtain immediate feedback on each individual change. The liveness quality is valued by programmers to help work in small steps and continuously add or correct small functionality while maintaining the impression of a direct connection between each edit and its manifestation at run-time. Such immediacy may conflict with the desire to perform a combined set of intermediate steps, such as a refactoring, without immediately taking effect after each individual edit. This becomes important when an incomplete sequence of small-scale changes can easily break the running program.\nState-of-the-art solutions focus on retroactive recovery mechanisms, such as debugging or version control. In contrast, we propose a proactive approach: Multiple individual changes to the program are collected in an Edit Transaction, which can be made effective if deemed complete. Upon activation, the combined steps become visible together.\nEdit Transactions are capable of dynamic scoping, allowing a set of changes to be tested in isolation before being extended to the running application. This enables a live programming workflow with full control over change granularity, immediate feedback on tests, delayed effect on the running application, and coarse-grained undos. \nWe present an implementation of Edit Transactions along with Edit-Transaction-aware tools in Squeak/Smalltalk. We asses this implementation by conducting a case study with and without the new tool support, comparing programming activities, errors, and detours for implementing new functionality in a running simulation. We conclude that workflows using Edit Transactions have the potential to increase confidence in a change, reduce potential for run-time errors, and eventually make live programming more predictable and engaging.",
      "Affiliations": [
        "Hasso Plattner Institute",
        "Hasso Plattner Institute",
        "HPI"
      ],
      "AffiliationsString": "Hasso Plattner Institute, HPI",
      "Authors": [
        "tonimattis",
        "patrickrein",
        "roberthirschfeld"
      ],
      "Key": "programming-2017-papers-tbd-13",
      "PersonsString": "Toni Mattis, Patrick Rein and Robert Hirschfeld",
      "Title": "Edit Transactions: Dynamically Scoped Change Sets for Controlled Updates in Live Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-13"
    },
    {
      "Abstract": "Context: In the context of exploring the art, science and engineering of programming, the question of which programming languages should be taught first has been fiercely debated since computer science teaching started in universities. Failure to grasp programming readily almost certainly implies failure to progress in computer science.\nInquiry: What first programming languages are being taught? There have been regular national-scale surveys in Australia and New Zealand, with the only US survey reporting on a small subset of universities. This the first such national survey of universities in the UK.\nApproach: We report the results of the first survey of introductory programming courses (N=80) taught at UK universities as part of their first year computer science (or related) degree programmes, conducted in the first half of 2016. We report on student numbers, programming paradigm, programming languages and environment/tools used, as well as the underpinning rationale for these choices.\nKnowledge: The results in this first UK survey indicate a dominance of Java at a time when universities are still generally teaching students who are new to programming (and computer science), despite the fact that Python is perceived, by the same respondents, to be both easier to teach as well as to learn.\nGrounding: We compare the results of this survey with a related survey conducted since 2010 (as well as earlier surveys from 2001 and 2003) in Australia and New Zealand.\nImportance: This survey provides a starting point for valuable pedagogic baseline data for the analysis of the art, science and engineering of programming, in the context of substantial computer science curriculum reform in UK schools, as well as increasing scrutiny of teaching excellence and graduate employability for UK universities.",
      "Affiliations": [
        "University of Bath",
        "Cardiff Metropolitan University",
        "University of Bath"
      ],
      "AffiliationsString": "University of Bath, Cardiff Metropolitan University",
      "Authors": [
        "ellenmurphy",
        "tomcrick",
        "jameshdavenport"
      ],
      "Key": "programming-2017-papers-tbd-15",
      "PersonsString": "Ellen Murphy, Tom Crick and James H. Davenport",
      "Title": "An Analysis of Introductory Programming Courses at UK Universities",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-15"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-catering-afternoon-coffee-break-i",
      "PersonsString": "",
      "Title": "Coffee break",
      "Type": "Coffee break",
      "URL": "http://2017.programming-conference.org/event/programming-2017-catering-afternoon-coffee-break-i"
    },
    {
      "Abstract": "On Thursday, we\u2019ll end the conference with a \u201cBrussels waffle social\u201d, where you can enjoy our famous waffles. The waffle social will take place at the conference venue.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-social-events-brussels-waffle-social",
      "PersonsString": "",
      "Title": "Brussels waffle social",
      "Type": "Social Event",
      "URL": "http://2017.programming-conference.org/event/programming-2017-social-events-brussels-waffle-social"
    },
    {
      "Abstract": "The conference banquet will take place in the Museum of Natural Sciences on Wednesday (April 5th).\nMore information",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-social-events-banquet",
      "PersonsString": "",
      "Title": "Banquet",
      "Type": "Social Event",
      "URL": "http://2017.programming-conference.org/event/programming-2017-social-events-banquet"
    },
    {
      "Abstract": "Modern software development without reactive programming is hard to imagine. Reactive programming favors a wide class of contemporary software systems that respond to user input, network messages, and other events.\nWhile reactive programming is an active field of research, the implementation of reactive concepts remains challenging. In particular, change detection represents a hard but inevitable necessity when implementing reactive concepts. Typically, change detection mechanisms are not intended for reuse but are tightly coupled to the particular change resolution mechanism. As a result, developers often have to re-implement similar abstractions. A reusable primitive for change detection is still missing.\nTo find a suitable primitive, we identify commonalities in existing reactive concepts. We discover a class of reactive concepts, state-based reactive concepts. All state-based reactive concepts share a common change detection mechanism: they detect changes in the evaluation result of an expression.\nOn the basis of the identified common change detection mechanism, we propose active expressions as a reusable primitive. By abstracting the tedious implementation details of change detection, active expressions can ease the implementation of reactive programming concepts.\nWe evaluate the design of active expressions by re-implementing a number of existing state-based reactive concepts using them. The resulting implementations highlight the expressiveness of active expressions.\nActive expressions enable the separation of essential from non-essential parts when reasoning about reactive programming concepts. By using active expressions as a primitive for change detection, developers of reactive language constructs and runtime support can now focus on the design of how application programmers should be able to react to change. Ultimately, we would like active expressions to encourage experiments with novel reactive programming concepts and with that to yield a wider variety of them to explore.",
      "Affiliations": [
        "Hasso Plattner Institute, Potsdam",
        "HPI"
      ],
      "AffiliationsString": "Hasso Plattner Institute, Potsdam, HPI",
      "Authors": [
        "stefanramson",
        "roberthirschfeld"
      ],
      "Key": "programming-2017-papers-tdd-18",
      "PersonsString": "Stefan Ramson and Robert Hirschfeld",
      "Title": "Active Expressions: Basic Building Blocks for Reactive Programming",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tdd-18"
    },
    {
      "Abstract": "Context: This paper presents the concept of open programming language interpreters, a model to support them and a prototype implementation in the Neverlang framework for modular development of programming languages.\nInquiry: We address the problem of dynamic interpreter adaptation to tailor the interpreter\u2019s behaviour on the task to be solved and to introduce new features to fulfil unforeseen requirements. Many languages provide a meta-object protocol (MOP) that to some degree supports reflection. However, MOPs are typically language-specific, their reflective functionality is often restricted, and the adaptation and application logic are often mixed which hardens the understanding and maintenance of the source code. Our system overcomes these limitations.\nApproach: We designed a model and implemented a prototype system to support open programming language interpreters. The implementation is integrated in the Neverlang framework which now exposes the structure, behaviour and the runtime state of any Neverlang-based interpreter with the ability to modify it. \nKnowledge: Our system provides a complete control over interpreter\u2019s structure, behaviour and its runtime state. The approach is applicable to every Neverlang-based interpreter. Adaptation code can potentially be reused across different language implementations. \nGrounding: Having a prototype implementation we focused on feasibility evaluation. The paper shows that our approach well addresses problems commonly found in the research literature. We have a demonstrative video and examples that illustrate our approach on dynamic software adaptation, aspect-oriented programming, debugging and context-aware interpreters.\nImportance: Our paper presents the first reflective approach targeting a general framework for language development. Our system provides full reflective support for free to any Neverlang-based interpreter. Rather than substituting other approaches, we believe our system can be used as a complementary technique in situations where other approaches present serious limitations.",
      "Affiliations": [
        " UniversitÃ  degli Studi di Milano",
        ""
      ],
      "AffiliationsString": " UniversitÃ  degli Studi di Milano, ",
      "Authors": [
        "waltercazzola",
        "albertshaqiri"
      ],
      "Key": "programming-2017-papers-tbd-7",
      "PersonsString": "Walter Cazzola and Albert Shaqiri",
      "Title": "Open Programming Language Interpreters",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-7"
    },
    {
      "Abstract": "User-defined syntax extensions are useful to implement an embedded domain specific language (EDSL) with good code-readability. They allow EDSL authors to define domain-natural notation, which is often different from the host language syntax. Nowadays, there are several research works of powerful user-defined syntax extensions.\nOne promising approach uses user-defined operators. A user-defined operator is a function with user-defined syntax. It can be regarded as a syntax extension implemented without macros. An advantage of user-defined operators is that an operator can be statically typed. The compiler can find type errors in the definition of an operator before the operator is used. In addition, the compiler can resolve syntactic ambiguities by using static types. However, user-defined operators are difficult to implement language constructs involving static name binding. Name binding is association between names and values (or memory locations). Our inquiry is whether we can design a system for user-defined operators involving a new custom name binding.\nThis paper proposes a variant of a lambda expression, named a context-sensitive expression. A context-sensitive expression looks like a normal expression but it implicitly takes parameters. To realize user-defined name binding, these parameters are accessed through public members such as methods and operators of one parameter object instead of through parameter names. Programmers can emulate name binding by such methods or operators, for example, they can emulate a local variable through getter operator and setter operator. We also present turnstile type to give a type to a context-sensitive expression, DSL class to cooperate with syntax extension, and generic name to recognize arbitrary names given by users.\nA contribution of this paper is that we reveal we can integrate a system for managing names and their scopes with a module and type system of an object-oriented language like Java. Programmers can define new language constructs involving custom name binding and another programmers can use them by importing modules. The compiler can statically verify the types of both the definition and usage of the language constructs.\nWe have implemented ProteaJ2, which is a programming language based on Java and it supports our proposal. We describe a parsing method that adopts eager disambiguation for fast parsing and discuss its time complexity. To show the practicality of our proposal, we have conducted two micro benchmarks to see the performance of our compiler. We also show several use cases of DSL classes for demonstrating DSL classes can express various language constructs.\nOur ultimate goal is to let programmers add any kind of new language construct to a host language. To do this, programmers should be able to define new syntax, name binding, and type system within the host language. This paper shows programmers can define name binding with their own syntax.",
      "Affiliations": [
        "",
        "University of Tokyo"
      ],
      "AffiliationsString": ", University of Tokyo",
      "Authors": [
        "kazuhiroichikawa",
        "shigeruchiba"
      ],
      "Key": "programming-2017-papers-tbd-3",
      "PersonsString": "Kazuhiro Ichikawa and Shigeru Chiba",
      "Title": "User-Defined Operators Including Name Binding for New Language Constructs",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-3"
    },
    {
      "Abstract": "On Tuesday (April 4th), there is a reception at the top floor of the Musical Instruments Museum.\nMore information",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2017-social-events-reception",
      "PersonsString": "",
      "Title": "Reception",
      "Type": "Social Event",
      "URL": "http://2017.programming-conference.org/event/programming-2017-social-events-reception"
    },
    {
      "Abstract": "Context. Variability-intensive programs (program families) appear in many application areas and for many reasons today. Different family members, called variants, are derived by switching statically configurable options (features) on and off, while reuse of the common code is maximized. \nInquiry. Verification of program families is challenging since the number of variants is exponential in the number of features. Existing single-program analysis and verification tools cannot be applied directly to program families, and designing and implementing the corresponding variability-aware versions is tedious and laborious.\nApproach. In this work, we propose a range of variability-related transformations for translating program families into single programs by replacing compile-time variability with run-time variability (non-determinism). The obtained transformed programs can be subsequently analyzed using the conventional off- the-shelf single-program analysis tools such as type checkers, symbolic executors, model checkers, and static analyzers. \nKnowledge. Our variability-related transformations are outcome-preserving, which means that the relation between the outcomes in the transformed single program and the union of outcomes of all variants derived from the original program family is equality.\nGrounding. We show our transformation rules and their correctness with respect to a minimal core imperative language IMP. Then, we discuss our experience of implementing and using the transformations for efficient and effective analysis and verification of real-world C program families. \nImportance. We report some interesting variability-related bugs that we discovered using various state-of-the-art single-program C verification tools, such as Frama-C, Clang, LLBMC.",
      "Affiliations": [
        "IT University of Copenhagen",
        "IT University of Copenhagen",
        "IT University of Copenhagen, Denmark",
        "IT University of Copenhagen, Denmark",
        "IT University of Copenhagen, Denmark"
      ],
      "AffiliationsString": "IT University of Copenhagen, IT University of Copenhagen, Denmark",
      "Authors": [
        "alexandruiosiflazar",
        "jeanmelo",
        "aleksandarsdimovski",
        "clausbrabrand",
        "andrzejwasowski"
      ],
      "Key": "programming-2017-papers-tbd-4",
      "PersonsString": "Alexandru Iosif-Lazar, Jean Melo, Aleksandar S. Dimovski, Claus Brabrand and Andrzej WÄsowski",
      "Title": "Effective Analysis of C Programs by Rewriting Variability",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-4"
    },
    {
      "Abstract": "The occurrence of similar code, or `code clones\u2019, can make program code difficult to read, modify and maintain. This paper describes industrial case studies of clone detection and elimination, and were were performed in collaboration with engineers from Ericsson AB using the refactoring and clone detection tool Wrangler for Erlang.\nWe use the studies to illustrate the complex set of decisions that have to be taken when performing clone elimination in practice; we also discuss how the studies have informed the design of the tool. However, the conclusions we draw are largely language-independent, and set out the pragmatics of clone detection and elimination in real-world projects as well as design principles for clone detection decision-support tools.\nThe work gives guidelines that assist an engineer in using clone detection and elimination in practice, as well as helping a tool developer to shape their tool building. Although the work was in the context of a particular tool and programming language, the authors would argue that the high-level knowledge gained applies equally well to other notions of clone, as well as other tools and programming languages.",
      "Affiliations": [
        "",
        "University of Kent",
        "Ericsson AB"
      ],
      "AffiliationsString": ", University of Kent, Ericsson AB",
      "Authors": [
        "simonthompson",
        "huiqingli",
        "andreasschumacher"
      ],
      "Key": "programming-2017-papers-tbd-16",
      "PersonsString": "Simon Thompson, Huiqing Li and Andreas Schumacher",
      "Title": "The pragmatics of clone detection and elimination",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-16"
    },
    {
      "Abstract": "The better developers can learn software tools, the faster they can start using them and the more efficiently they can later work with them. Tutorials are supposed to help here. While in the early days of computing, mostly text tutorials were available, nowadays software developers can choose among a huge number of tutorials for almost any popular software tool. However, only little research was conducted to understand how text tutorials differ from other tutorials, which tutorial types are preferred and, especially, which tutorial types yield the best learning experience in terms of efficiency and effectiveness, especially for programmers.\nTo evaluate these questions, we converted an existing video tutorial for a novel software tool into a content-equivalent text tutorial. We then conducted an experiment in three groups where 42 undergraduate students from a software engineering course were commissioned to operate the software tool after using a tutorial: the first group was provided only with the video tutorial, the second group only with the text tutorial and the third group with both. \nIn this context, the differences in terms of efficiency were almost negligible: We could observe that participants using only the text tutorial completed the tutorial faster than the participants with the video tutorial. However, the participants using only the video tutorial applied the learned content faster, achieving roughly the same bottom line performance. We also found that if both tutorial types are offered, participants prefer video tutorials for learning new content but text tutorials for looking up \u201cmissed\u201d information.\nWe mainly gathered our data through questionnaires and screen recordings and analyzed it with suitable statistical hypotheses tests. The data is available at https://doi.org/10.5281/zenodo.188896. \nSince producing tutorials requires effort, knowing with which type of tutorial learnability can be increased to which extent has an immense practical relevance. We conclude that in contexts similar to ours, while it would be ideal if software tool makers would offer both tutorial types, it seems more efficient to produce only text tutorials instead of a passive video tutorial - provided you manage to motivate your learners to use them.",
      "Affiliations": [
        "UniversitÃ¤t Stuttgart",
        "UniversitÃ¤t Stuttgart",
        "UniversitÃ¤t Stuttgart"
      ],
      "AffiliationsString": "UniversitÃ¤t Stuttgart",
      "Authors": [
        "verenakafer",
        "danielkulesz",
        "stefanwagner"
      ],
      "Key": "programming-2017-papers-tbd-14",
      "PersonsString": "Verena KÃ¤fer, Daniel Kulesz and Stefan Wagner",
      "Title": "What Is the Best Way For Developers to Learn New Software Tools? An Empirical Comparison Between a Text and a Video Tutorial",
      "Type": "Talk",
      "URL": "http://2017.programming-conference.org/event/programming-2017-papers-tbd-14"
    },
    {
      "Abstract": "When debugging, developers often use backwards reasoning to find possible causes for a bug symptom they observed. The popularity of this approach likely stems from the fact that online debuggers, such as jdb, only support stepping forwards through the execution of an application and analyzing the current state of the program.\nIn contrast, omniscient debuggers allow developers to debug back-in-time and freely step through the execution. However, the application run has to be recorded first, which implies a significant runtime overhead of a factor between 20 and 252.\nIn this demo we present RedShell, a prototype that extends the Eclipse Java debugger with back-in-time debugging capabilities in a lightweight fashion.",
      "Affiliations": [
        "Philipps-UniversitÃ¤t Marburg",
        "Philipps-UniversitÃ¤t Marburg"
      ],
      "AffiliationsString": "Philipps-UniversitÃ¤t Marburg",
      "Authors": [
        "stefanschulz",
        "christophbockisch"
      ],
      "Key": "programming-2017-demos-redshell-online-back-in-time-debugging",
      "PersonsString": "Stefan Schulz and Christoph Bockisch",
      "Title": "RedShell: Online Back-In-Time Debugging",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-redshell-online-back-in-time-debugging"
    },
    {
      "Abstract": "With the omnipresence of multicore processors, developers combine various concurrency abstractions such as actors, communicating sequential processes, or fork/join programming to utilize the available parallelism. Unfortunately, when we debug such systems today, we need to reason about low-level memory accesses, locks, and thread pools, because debuggers rarely know about actors, messages, channels, or fork/join tasks.\nWith K&oacute;mpos, we present a concurrent debugger that is designed to enable us to reason about our programs on the level of these abstractions. We will demonstrate some of the features of K&oacute;mpos and discuss the research challenges for building a concurrent debugger for a wide range of concurrency abstractions.",
      "Affiliations": [
        "Johannes Kepler University Linz",
        "",
        "",
        "Vrije Universiteit Brussel",
        "JKU Linz, Austria"
      ],
      "AffiliationsString": "Johannes Kepler University Linz, , Vrije Universiteit Brussel, JKU Linz, Austria",
      "Authors": [
        "stefanmarr",
        "carmentorreslopez",
        "dominikaumayr",
        "elisagonzalezboix",
        "hanspetermossenbock"
      ],
      "Key": "programming-2017-demos-a-platform-for-debugging-complex-concurrent-applications",
      "PersonsString": "Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix and Hanspeter MÃ¶ssenbÃ¶ck",
      "Title": "ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-a-platform-for-debugging-complex-concurrent-applications"
    },
    {
      "Abstract": "Application embedding is a technique for developing web applications. It divides the implementation of an application to two artifacts: \n \n A host application \u2013 a platform that is agnostic of any particular application, and \n the application\u2019s definition \u2013 specifying one particular application in a declarative manner. \n\nFishTank is an example of a host application for application embedding. In this demo we present our work in progress on Axiom, a host application for application embedding as an alternative to Fishtank. Axiom (similar to FishTank) is based on the a conceptual data language called Cloudlog. However, Axiom (unlike FishTank) uses Clojure both as its host language and as its implementation language.\nThe use of Clouldlog-over-Clojure instead of Cloudlog-over-Cedalion (as done in FishTank) brings several important benefits. First, Clojure makes Axiom potentially more approachable for developers than FishTalk which is based on Cedalion. Second, Clojure has a rich ecosystem that can benefit both the implementation of Axiom itself, and both the applications built on top of it. Third, Clojure is compiled to Java Bytecode and runs on the JVM, making it (and in particular, rules written by developers on top of it) run much faster than rules written in Cedalion. Fourth, Clojure\u2019s integration with the Java ecosystem opens the door to using big-data platforms (specifically, we use Apache Storm). The use of Clouldlog-over-Clojure also presents new challenges. Clojure (like most LISPs) is homoiconic but impure. To allow Cloudlog to be correctly defined over Clojure we had to create a pure subset of Clojure, which we call permacode.\nThe demo will provide an overview on application embedding and will compare the embedding of simple applications in FishTank to their embedding in Axiom.",
      "Affiliations": [
        "Open University and Technion IIT",
        "University of Haifa"
      ],
      "AffiliationsString": "Open University and Technion IIT, University of Haifa",
      "Authors": [
        "davidhlorenz",
        "boazrosenan"
      ],
      "Key": "programming-2017-demos-application-embedding-from-fishtank-to-axiom",
      "PersonsString": "David H. Lorenz and Boaz Rosenan",
      "Title": "Application Embedding: From FishTank to Axiom",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-application-embedding-from-fishtank-to-axiom"
    },
    {
      "Abstract": "In common object-oriented code, user acceptance tests, which play a very important role in any kind of software development process and which follow procedural modularization, would be scattered and, consequently, hard to maintain. This is of particular importance, since it is known that user acceptance tests immensely improve code comprehension, as can be seen in the Cucumber approach.\nBoth use case and test driven modularizations remain compatible while at the same time open new capabilities of having different views on software based on use cases and various tests simultaneously. The environment synchronizes changes in multiple modularizations at the level of static file processing and enforces use case and test representations in code by displaying a percentage of how well use cases and tests are covered by code.\nWe will demonstrate how use case and test driven modularization supported by our environment (avaliable at useion.com), which is based on our previous work on literal inter-language use case driven modularization, simplifies development and maintenance of a real world application of 55 use cases built on the OpenCart e-commerce platform.\nThe development of selected simple and complex use cases and tests will be presented. However, the main aim of the demonstration will be to present how our environment helps developers respond effectively to common change requests using object-oriented, use case driven, and test driven modularization interchangeably.\n(Supported by the Scientific Grant Agency of Slovak Republic (VEGA) under the grant No. VG 1/0808/17, Research &amp; Development Operational Programme for the project Research of Methods for Acquisition, Analysis and Personalized Conveying of Information and Knowledge, ITMS 26240220039, co-funded by the ERDF, and STU Grant scheme for Support of Young Researchers (M. Bystrick&yacute;).)",
      "Affiliations": [
        "Slovak University of Technology in Bratislava",
        "Slovak University of Technology in Bratislava"
      ],
      "AffiliationsString": "Slovak University of Technology in Bratislava",
      "Authors": [
        "michalbystricky",
        "valentinovranic"
      ],
      "Key": "programming-2017-demos-modularizing-code-by-use-cases-and-tests-for-better-maintainability",
      "PersonsString": "Michal BystrickÃ½ and Valentino VraniÄ",
      "Title": "Modularizing Code by Use Cases and Tests for Better Maintainability",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-modularizing-code-by-use-cases-and-tests-for-better-maintainability"
    },
    {
      "Abstract": "What if you could look at the source code behind any online visualization, understand how it works, run it to check the results using the latest data and modify the parameters to explore different aspects that you are interested in?",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "programming-2017-demos-tools-for-open-transparent-and-engaging-storytelling",
      "PersonsString": "Tomas Petricek",
      "Title": "Tools for Open, Transparent and Engaging Storytelling",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-tools-for-open-transparent-and-engaging-storytelling"
    },
    {
      "Abstract": "The Dart virtual machine supports hot reloading of code, e.g., changing the code while it is executing, without the need to restart the program. The Dart workflow for such changes differs from what is done in classical live environments like Smalltalk. The Dart VM monitors changes to source files and updates the program with respect to changes across the program\u2019s code base atomically. The system runs on mobile devices (both Android and iOS).\nThe Dart programming language [1] includes built in support for asynchrony [2] via constructs like async functions, await expressions and await for loops. Debugging asynchronous code is notoriously difficult. When an asynchronous function fails unexpectedly, the code that invoked is no longer active. If no special effort is made, even a stack trace beyond the entry into the asynchronous code is not available. The Dart VM supports complete stack traces for asynchronous code, as well the ability to step into, out of, or over asynchronous code. In addition, the Dart VM supports hot reloading, i.e., the ability to modify code during program execution allowing users to make live fixes, known as fix-and-continue debugging. These features work together seamlessly to provide a high quality debugging experience for asynchronous code.\nThe Dart VM comes with an interactive tool, the Observatory, that allows programmers to debug, profile and monitor the running system in various ways. We plan to demonstrate Observatory updating and debugging a running inter- active mobile application.\nA technical description of the implementation of async debugging in Dart will be presented at the MoreVMs workshop at Programming 17. A paper on hot reloading in the Dart VM is in preparation.\nReferences\n[1] Gilad Bracha. The Dart Programming Language. Addison-Wesley, Boston, Massachusetts, 2015.\n[2] Erik Meijer, Kevin Milliken, and Gilad Bracha. Spicing up Dart with side effects. Queue, 13(3):40:40-40:59, March 2015.",
      "Affiliations": [
        "Google",
        "",
        "Google"
      ],
      "AffiliationsString": "Google, ",
      "Authors": [
        "johnmccutchan",
        "toddturnidge",
        "giladbracha"
      ],
      "Key": "programming-2017-demos-live-development-in-dart",
      "PersonsString": "John McCutchan, Todd Turnidge and Gilad Bracha",
      "Title": "Live Development in Dart",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-live-development-in-dart"
    },
    {
      "Abstract": "We demonstrate, how to implement interactive applications with Reactive Programming (RP). Our RP framework REScala provides RP abstractions as an embedded domain-specific language in Scala. The demo begins with a simple animation to introduce Signals and Events, the fundamental RP abstractions. We incrementally evolve the animation into a Pong-style game, exploring increasingly advanced features of RP. We demonstrate, how RP enables declarative implementation of modular designs of interactive applications. We discuss additional benefits provided by these abstractions, such as strong consistency for concurrent applications provided by REScala. Finally, we showcase how REScala enables implementation of distributed RP applications, by extending the Pong-style game with local network multi-player.",
      "Affiliations": [
        "Technische UniversitÃ¤t Darmstadt",
        "Technische UniversitÃ¤t Darmstadt"
      ],
      "AffiliationsString": "Technische UniversitÃ¤t Darmstadt",
      "Authors": [
        "ragnarmogk",
        "joschadrechsler"
      ],
      "Key": "programming-2017-demos-reactive-programming-with-rescala",
      "PersonsString": "Ragnar Mogk and Joscha Drechsler",
      "Title": "Reactive Programming with REScala",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-reactive-programming-with-rescala"
    },
    {
      "Abstract": "Development of embedded systems has been receiving in last decade a considerable attention for both academy and industry. Advances in hardware miniaturization, in particular, single-boards computers like Raspberry Pi, Beaglebone Black, allow for the use of high-level programming languages. Still, the greatest challenges when developing IoT applications are distribution and coordination. To date, mainstream languages (e.g. Java, JavaScript, Python) lack high- level abstractions to deal with distribution and coordination. For example, implementing standard leader election algorithms (e.g., Ring, Bully) with these languages, force developers to write code on top of low-level networking APIs. As a result, programmers need to write over and over, aspects like the discovery of peers, coordination, failure handling necessary for implementing distributed algorithms. Furthermore, craft and deploy such systems on embedded devices is also complex, due to hardware restrictions and software dependencies. In this demo, we show how a concurrent and distributed language with a rich macro system could in an easy and declarative way solve these problems. Our demo recreates a leader election algorithm between the nodes in an embedded environment by employing a Raspberry Pi cluster. The code for the leader election algorithm is built on top of a macro-based Elixir library which includes abstractions for distribution and coordination. Developers can use this library to translate core operations described by the Bully algorithm to declarative macro-constructs. This library also abstracts develop- ers of communication and network concerns (e.g. service discovery and network monitoring). Furthermore, it includes an implementation of an Elixir behaviour to provide a base skeleton for developing leader-election applications.",
      "Affiliations": [
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel",
      "Authors": [
        "humbertorodriguezavila",
        "elisagonzalezboix",
        "wolfgangdemeuter"
      ],
      "Key": "programming-2017-demos-an-elixir-library-for-programming-concurrent-and-distributed-embedded-systems",
      "PersonsString": "Humberto Rodriguez Avila, Elisa Gonzalez Boix and Wolfgang De Meuter",
      "Title": "An Elixir Library for Programming Concurrent and Distributed Embedded Systems",
      "Type": "Demonstration",
      "URL": "http://2017.programming-conference.org/event/programming-2017-demos-an-elixir-library-for-programming-concurrent-and-distributed-embedded-systems"
    }
  ],
  "Name": "\u2039Programming\u203a 2017",
  "People": [
    {
      "Affiliation": "",
      "Key": "michaherda",
      "Name": "MichaÅ Herda"
    },
    {
      "Affiliation": "",
      "Key": "kapilarya",
      "Name": "Kapil Arya"
    },
    {
      "Affiliation": " INRIA Lille",
      "Key": "stephaneducasse",
      "Name": "StÃ©phane Ducasse",
      "URL": "http://stephane.ducasse.free.fr/"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "huiqingli",
      "Name": "Huiqing Li"
    },
    {
      "Affiliation": "",
      "Key": "francoisrenerideau",
      "Name": "FranÃ§ois-RenÃ© Rideau"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "guidosalvaneschi",
      "Name": "Guido Salvaneschi",
      "URL": "http://www.guidosalvaneschi.com/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/guidosalvaneschi/6f1373d5-57c6-4d68-b6c3-c0a679ee24ed/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "antranigbasman",
      "Name": "Antranig Basman"
    },
    {
      "Affiliation": "University of Luxembourg",
      "Key": "yvesletraon",
      "Name": "Yves Le Traon",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/yvesletraon/0ee26c23-677b-4ce2-b525-b520394d5906/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "toddturnidge",
      "Name": "Todd Turnidge"
    },
    {
      "Affiliation": "Fund for Supporting Development of RT",
      "Bio": "Nikolai Suslov is a software engineer and computer science researcher at Fund for Supporting Development of RT. His work is focus on virtual worlds software architecture, user-oriented self-exploratory integrated development environments, live coding, human computer interaction, virtual reality. He is the creator of Krestianstvo SDK project and virtual learning environment based on it. His works were presented at several International conferences: Live Interfaces (ICLI\u201916), Live Coding (ICLC\u201915), Future Programming Workshop (SPLASH FPW\u201914), Conference on Creating, Connecting and Collaborating through Computing (C5\u201912). From 2005-2008 he was an active participant of European Smalltalk User Group conferences (ESUG). He is an author of several multimedia discs and installations for art museums. Full bio and cv is here",
      "Key": "nikolaisuslov",
      "Name": "Nikolai Suslov",
      "URL": "https://www.krestianstvo.org",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nikolaisuslov/145252ff-d868-4fc8-8547-bcf6709c9f80/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "ireneannedurand1",
      "Name": "IrÃ¨ne Anne Durand"
    },
    {
      "Affiliation": "Open University and Technion IIT",
      "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion\u2014Israel Institute of Technology.\nHis research interests include language-oriented software engineering and programming, particularly involving domain specific languages. He is a steering committee member and the former chair of the AOSA, a non-profit organization whose mission is to be the primary sponsor for the annual conferences: International Conference on Aspect-Oriented Software Development, International Conference on Modularity, and International Conference on the Art, Science, and Engineering of Programming.\nProf. Lorenz received his PhD in computer science from the Technion\u2014Israel Institute of Technology. He\u2019s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
      "Key": "davidhlorenz",
      "Name": "David H. Lorenz",
      "URL": "http://www.cs.technion.ac.il/people/dhlorenz/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/davidhlorenz/05195420-94d5-4990-81dd-1c79b02de964/small.jpg"
    },
    {
      "Affiliation": "Oracle",
      "Key": "cansukaynak",
      "Name": "Cansu Kaynak"
    },
    {
      "Affiliation": " INRIA Lille",
      "Key": "marcusdenker",
      "Name": "Marcus Denker"
    },
    {
      "Affiliation": "Keio University, Japan",
      "Key": "takashiiba1",
      "Name": "Takashi Iba",
      "URL": "http://web.sfc.keio.ac.jp/~iba/"
    },
    {
      "Affiliation": "ZenRobotics",
      "Key": "nikodemussiivola",
      "Name": "Nikodemus Siivola"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "mathijssaey",
      "Name": "Mathijs Saey"
    },
    {
      "Affiliation": "Centrum Wiskunde & Informatica (CWI) and Eindhoven University of Technology (TUE)",
      "Key": "jurgenvinju",
      "Name": "Jurgen Vinju",
      "URL": "http://homepages.cwi.nl/~jurgenv",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jurgenvinju/31e5a54c-e7a3-4c37-b0c9-ca2254e3ef59/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "michelbeaudouinlafon",
      "Name": "Michel Beaudouin-Lafon"
    },
    {
      "Affiliation": "UniversitÃ© de Nice Sophia-Antipolis, France",
      "Key": "erickgallesio",
      "Name": "Erick Gallesio"
    },
    {
      "Affiliation": "",
      "Key": "robertgoldman",
      "Name": "Robert Goldman"
    },
    {
      "Affiliation": "Google",
      "Key": "jocheneisinger",
      "Name": "Jochen Eisinger"
    },
    {
      "Affiliation": "University of British Columbia",
      "Key": "gailmurphy",
      "Name": "Gail Murphy",
      "URL": "https://blogs.ubc.ca/gailcmurphy/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/gailmurphy/73d0b02f-de45-4e07-83cc-8b24f293ff8a/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Darmstadt",
      "Key": "joschadrechsler",
      "Name": "Joscha Drechsler",
      "URL": "http://www.stg.tu-darmstadt.de/staff/joscha_drechsler/joscha_drechsler.en.jsp",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/joschadrechsler/62094cc2-5bba-4052-a0d3-cf605adc1059/small.jpg"
    },
    {
      "Affiliation": "Mozilla Corporation",
      "Key": "allenwirfsbrock",
      "Name": "Allen Wirfs-Brock"
    },
    {
      "Affiliation": "",
      "Key": "arendrensink",
      "Name": "Arend Rensink"
    },
    {
      "Affiliation": "University of Brest",
      "Key": "mickaelkerboeuf",
      "Name": "Mickael Kerboeuf"
    },
    {
      "Affiliation": "University of Rennes 1",
      "Key": "benoitcombemale",
      "Name": "Benoit Combemale",
      "URL": "http://people.irisa.fr/Benoit.Combemale/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/benoitcombemale/46a774c3-cec1-410d-99c2-c9c9d10b3bda/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "timmolderez",
      "Name": "Tim Molderez",
      "URL": "http://timmolderez.be/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/timmolderez/fc3f5b3e-d4db-4b12-9d89-43a7df61af24/small.jpg"
    },
    {
      "Affiliation": "Freie UniversitÃ¤t Berlin",
      "Key": "florianheyl",
      "Name": "Florian Heyl"
    },
    {
      "Affiliation": "",
      "Key": "vsevoloddomkin",
      "Name": "Vsevolod Domkin"
    },
    {
      "Affiliation": "iMinds - Distrinet, KU Leuven",
      "Key": "dominiquedevriese",
      "Name": "Dominique Devriese",
      "URL": "https://distrinet.cs.kuleuven.be/people/dominiqu",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/dominiquedevriese/08b1fc2d-d157-4905-9c9a-e1ff279ab345/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Bio": "I am a PhD student at the Hasso Plattner Institute at the University of Potsdam. I am part of the Software Architecture group led by Prof. Dr. Robert Hirschfeld. Since October 2011, I have also been part of the HPI Research School after getting my Master\u2019s degree in Software Engineering at the HPI, too.\nMy research activities include the area of building tools for programmers, especially data-driven ones for program comprehension tasks. For this, direct manipulation concepts, dynamic analysis, and cooperation of distributed teams in agile processes play an important role. Additionally, I investigate modularity concepts with respect to critical software quality metrics such as extensibility and maintainability while reasoning about interdependencies between languages and tools.",
      "Key": "marceltaeumel",
      "Name": "Marcel Taeumel",
      "URL": "http://www.taeumel.eu",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/marceltaeumel/6586e7ac-b7f0-4e44-b127-e1d62530239a/small.jpg"
    },
    {
      "Affiliation": "Hasso-Plattner-Institute, Potsdam",
      "Key": "fabioniephaus",
      "Name": "Fabio Niephaus",
      "URL": "https://fniephaus.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/fabioniephaus/44d2c4cc-3f4f-42d2-8496-ca7e59905dd3/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "kristianbantonsen",
      "Name": "Kristian B. Antonsen"
    },
    {
      "Affiliation": "Shen Programming Group",
      "Key": "marktarver",
      "Name": "Mark Tarver"
    },
    {
      "Affiliation": "HARC / Y Combinator Research",
      "Key": "jonathanedwards",
      "Name": "Jonathan Edwards",
      "URL": "http://alarmingdevelopment.org/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jonathanedwards/3bc9c5ec-29fc-4efd-b8bc-6ba62fa73ec1/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ¤t Stuttgart",
      "Key": "stefanwagner",
      "Name": "Stefan Wagner"
    },
    {
      "Affiliation": "University of Bath",
      "Key": "jameshdavenport",
      "Name": "James H. Davenport"
    },
    {
      "Affiliation": "",
      "Key": "gefeizhang",
      "Name": "Gefei Zhang"
    },
    {
      "Affiliation": "Australian National University, Data61, and Purdue University",
      "Bio": "I am a professor of computer science, with academic appointments at Purdue University (on leave from August 2015) and the Australian National University, contributing also as a researcher with Data61 (formerly NICTA). I studied computer science at the University of Adelaide, the University of Waikato, and the University of Massachusetts at Ahmerst, receiving BSc, MSc, and PhD degrees, respectively. My research interests lie in the area of programming language implementation, and I work on problems arising in object persistence, object databases, distribution, memory management (garbage collection), managed language runtimes, language virtual machines, optimizing compilers, and architectural support for programming languages and applications.\nI am a Life Member of the Association for Computing Machinery and a Member of the IEEE. I was named a Distinguished Scientist of the ACM in 2012.",
      "Key": "tonyhosking",
      "Name": "Tony Hosking",
      "URL": "https://hosking.github.io",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tonyhosking/6d43d7a0-6e7b-47fe-8081-e4ae5207cda1/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Darmstadt",
      "Key": "ragnarmogk",
      "Name": "Ragnar Mogk"
    },
    {
      "Affiliation": "",
      "Key": "ramvaishnav",
      "Name": "Ram Vaishnav",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/ramvaishnav/983de967-508e-41c6-adc1-ea46df427f94/small.jpg"
    },
    {
      "Affiliation": "Katholieke Universiteit Leuven",
      "Key": "wouterjoosen",
      "Name": "Wouter Joosen"
    },
    {
      "Affiliation": "Shirakumo.org",
      "Key": "nicolashafner",
      "Name": "Nicolas Hafner",
      "URL": "https://everything.shinmera.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nicolashafner/c79e734e-95ca-4980-9760-9175f2924b31/small.jpg"
    },
    {
      "Affiliation": "University of Occidental  Brittary, France",
      "Key": "alainplantec",
      "Name": "Alain Plantec"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Key": "clausbrabrand",
      "Name": "Claus Brabrand"
    },
    {
      "Affiliation": "University of Haifa",
      "Bio": "Education \n \n 2013 - Present: PhD Candidate, The University of Haifa, Israel. \n 2008 - 2012: MSc in Computer Science, The Open University of Israel. \n 1996 - 2000: BA in Computer Science, The Technion - Israel Institute of Technology. \n\nProfessional Experience:\nI currently work part time as a Software Architect in GE Healthcare. I previously held software engineering jobs in the Telecom and Semiconductor Equipment industries.",
      "Key": "boazrosenan",
      "Name": "Boaz Rosenan",
      "URL": "https://cloudalion.org/about/boazs-page/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/boazrosenan/3e5b46c9-da0c-4cdc-b3f7-aebfdcf40ab2/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "kazuhiroichikawa",
      "Name": "Kazuhiro Ichikawa"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "johanneshartel",
      "Name": "Johannes HÃ¤rtel"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "christophedubach",
      "Name": "Christophe Dubach",
      "URL": "http://homepages.inf.ed.ac.uk/cdubach/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christophedubach/027f1e94-32e1-4135-b907-9e170cecc4f9/small.jpg"
    },
    {
      "Affiliation": "University of Texas, Austin",
      "Bio": "Don Batory holds the David Bruton Centennial Professorship in the Department of Computer Science at The University of Texas at Austin. He received a B.S. (1975) and M.Sc. (1977) degrees from Case Institute of Technology, and a Ph.D. (1980) from the University of Toronto. He was a faculty member at the University of Florida in 1981 before he joined the University of Texas in 1983. He was Associate Editor of IEEE Transactions on Software Engineering (1999-2002), Associate Editor of ACM Transactions on Database Systems (1986-1992), member of the ACM Software Systems Award Committee (1989-1993; Committee Chairman in 1992), Program Co-Chair for the 2002 Generative Programming and Component Engineering Conference. He is a proponent of Feature Oriented Software Development (FOSD) and with colleagues (and former students) has recently authored a textbook on the topic. Since 1993, he and his students have written 11 Award Papers for their work in automated program development. He and Lance Tokuda were awarded the Automated Software Engineering 2013 Most Influential Paper Award on their work on program refactorings.",
      "Key": "donbatory",
      "Name": "Don Batory",
      "URL": "http://www.cs.utexas.edu/users/dsb/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/donbatory/2a96b1e7-6ed1-4c7d-9c06-163bbb2ac3a5/small.jpg"
    },
    {
      "Affiliation": "Trent University",
      "Key": "omaralam",
      "Name": "Omar Alam",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/omaralam/d6e9de9f-fc3d-473f-a7bf-07c250aa8de8/small.jpg"
    },
    {
      "Affiliation": "Freie UniveristÃ¤t Berlin",
      "Key": "oliverserang",
      "Name": "Oliver Serang",
      "URL": "http://colorfulengineering.org",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/oliverserang/f8140d3c-9e5c-41ef-978d-241b5b35e40d/small.jpg"
    },
    {
      "Affiliation": " University of Central Florida",
      "Bio": "I am a Professor, and Chair of the University of Central Florida\u2019s Dept. of Electrical Engineering and Computer Science, Computer Science division.\nResearch Interests: Programming and specification language design and semantics, formal methods (program specification and verification), aspect-oriented languages, object-oriented languages, distributed languages, type theory, programming methodology, software engineering, information assurance, computer science education.",
      "Key": "garyleavens",
      "Name": "Gary Leavens",
      "URL": "http://www.eecs.ucf.edu/~leavens/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/garyleavens/2cb4551e-cd4c-453d-a3b2-beaaff849a0e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alexanderschill",
      "Name": "Alexander Schill"
    },
    {
      "Affiliation": "Ex Situ | UniversitÃ© Paris-Sud",
      "Key": "philiptchernavskij",
      "Name": "Philip Tchernavskij",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/philiptchernavskij/7dfaf129-611d-490a-a103-5428532c69b0/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Indiana University.\nResearch Interests: my research focuses on the design and analysis of software and programming languages. I am particularly interested in how programs grow from prototype scripts to robust software, and how programming language design can support this process. My research concerns type systems, software contracts, modularity, and extensibility. I\u2019m currently working with the DARPA CRASH program on Racket and with Mozilla Labs on JavaScript.",
      "Key": "samtobinhochstadt",
      "Name": "Sam Tobin-Hochstadt",
      "URL": "http://samth.github.io",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/samtobinhochstadt/d817e5c9-fe1c-4664-a4d1-6af45d4d4586/small.jpg"
    },
    {
      "Affiliation": "Tokyo City University",
      "Key": "nobuhikoogura",
      "Name": "Nobuhiko Ogura",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nobuhikoogura/93469c11-201e-445c-8138-4e1325cce699/small.jpg"
    },
    {
      "Affiliation": "National Institute of Advanced Industrial Science and Technology, Japan",
      "Key": "masatakagoto",
      "Name": "Masataka Goto"
    },
    {
      "Affiliation": "",
      "Bio": "Lisp Hacker",
      "Key": "rainerjoswig",
      "Name": "Rainer Joswig",
      "URL": "http://lispm.de"
    },
    {
      "Affiliation": "University of Zagreb",
      "Key": "vedranmornar",
      "Name": "Vedran Mornar"
    },
    {
      "Affiliation": "Technical University of Lisbon, Portugal",
      "Key": "antoniomenezesleitao",
      "Name": "AntÃ³nio Menezes LeitÃ£o"
    },
    {
      "Affiliation": "North Carolina State University",
      "Key": "emersonmurphyhill",
      "Name": "Emerson Murphy-Hill",
      "URL": "http://people.engr.ncsu.edu/ermurph3/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/emersonmurphyhill/f6ca60d6-c205-45d4-a648-93e795475428/small.jpg"
    },
    {
      "Affiliation": "Northwestern University",
      "Key": "robbyfindler",
      "Name": "Robby Findler",
      "URL": "http://www.eecs.northwestern.edu/~robby/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/robbyfindler/1c5789be-fa0c-482b-a237-e7e575ac257e/small.jpg"
    },
    {
      "Affiliation": "University of Utah",
      "Bio": "Matthew Flatt is a professor in the School of Computing at the University of Utah, where he works on extensible programming languages, runtime systems, and applications of functional programming. He is one of the developers of the Racket programming language. He received his PhD from Rice University in 1999.",
      "Key": "matthewflatt",
      "Name": "Matthew Flatt",
      "URL": "http://www.cs.utah.edu/~mflatt/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/matthewflatt/8be359a0-6498-4c8c-a43a-e74a3d39673c/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "hannespayer",
      "Name": "Hannes Payer",
      "URL": "http://research.google.com/pubs/HannesPayer.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/hannespayer/78040631-dcb2-434d-b80a-f095f1bf5e22/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "estherguerra",
      "Name": "Esther Guerra",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/estherguerra/6529c94e-dfd9-4b1a-82ae-a9ab0313a37c/small.jpg"
    },
    {
      "Affiliation": "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
      "Key": "marcstamminger",
      "Name": "Marc Stamminger"
    },
    {
      "Affiliation": "",
      "Key": "benjaminseppke",
      "Name": "Benjamin Seppke"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Key": "andrzejwasowski",
      "Name": "Andrzej WÄsowski"
    },
    {
      "Affiliation": "Sofware Languages Lab, Vrije Universiteit Brussel",
      "Key": "jennifersartor",
      "Name": "Jennifer Sartor",
      "URL": "http://soft.vub.ac.be/~jsartor/index.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jennifersartor/49f34418-99a7-4c27-acaf-7c3aed1d8b59/small.jpg"
    },
    {
      "Affiliation": "University of Miami Miller School of Medicine",
      "Bio": "Bohdan Khomtchouk is an NDSEG Fellow in the Human Genetics and Genomics Graduate Program at the University of Miami Miller School of Medicine. His research interests include bioinformatics and computational biology applications in HPC, integrative multi-omics, artificial intelligence, machine learning, mathematical genetics, biostatistics, epigenetics, visualization, search engines and databases. He will be starting his postdoctoral research work at Stanford University this year.",
      "Key": "bohdankhomtchouk",
      "Name": "Bohdan Khomtchouk",
      "URL": "http://bohdankhomtchouk.com/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/bohdankhomtchouk/3c0c6411-5e76-4209-ba3c-57115c108f03/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "michaellippautz",
      "Name": "Michael Lippautz",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michaellippautz/65dd8e6d-5c92-4c87-a859-bdd987355cca/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "stephanbrunner",
      "Name": "Stephan Brunner"
    },
    {
      "Affiliation": "",
      "Key": "robertstrandh",
      "Name": "Robert Strandh"
    },
    {
      "Affiliation": "IMT Atlantique, Nantes, France",
      "Key": "jacquesnoye",
      "Name": "Jacques NoyÃ©",
      "URL": "http://www.emn.fr/z-info/noye/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jacquesnoye/3dd78d6d-d4cf-4838-bcbc-b99badbb6e7f/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "krzysztofczarnecki",
      "Name": "Krzysztof Czarnecki",
      "URL": "http://gsd.uwaterloo.ca/kczarnec",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/krzysztofczarnecki/3e6de89f-c056-483d-a671-6b3f2e6a23e3/small.jpg"
    },
    {
      "Affiliation": "Slovak University of Technology in Bratislava",
      "Key": "valentinovranic",
      "Name": "Valentino VraniÄ",
      "URL": "http://fiit.stuba.sk/~vranic/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/valentinovranic/f4da6218-d1b1-4843-bc05-246876c3db34/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "samuelaaron",
      "Name": "Samuel Aaron"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign, USA",
      "Key": "sasamisailovic",
      "Name": "Sasa Misailovic",
      "URL": "http://misailo.web.engr.illinois.edu/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sasamisailovic/6e3299c7-e0f5-4e78-a5f3-7ea49e488545/small.jpg"
    },
    {
      "Affiliation": "IBM Canada",
      "Key": "markstoodley",
      "Name": "Mark Stoodley",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/markstoodley/4d48f041-7d47-4ff0-a45c-bf650fd741cb/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "gregorweber",
      "Name": "Gregor Weber"
    },
    {
      "Affiliation": "iMinds - Distrinet, KU Leuven",
      "Key": "bobreynders",
      "Name": "Bob Reynders"
    },
    {
      "Affiliation": "UFPE",
      "Key": "fernandocastor",
      "Name": "Fernando Castor"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "winghangli",
      "Name": "Wing Hang Li"
    },
    {
      "Affiliation": "University of Bath",
      "Key": "ellenmurphy",
      "Name": "Ellen Murphy"
    },
    {
      "Affiliation": "IT University of Copenhagen",
      "Bio": "Jean is currently a Ph.D. Student in Software Engineering at the IT University of Copenhagen (ITU), Denmark. Developing methods and tools to find bugs and to improve debugging and maintainability of highly-configurable systems.",
      "Key": "jeanmelo",
      "Name": "Jean Melo",
      "URL": "http://itu.dk/people/jeam/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jeanmelo/b8522d3f-2d53-40fd-a6e7-9e96c686616c/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "mariowolczko",
      "Name": "Mario Wolczko",
      "URL": "http://labs.oracle.com/people/mario",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/mariowolczko/cbf01e95-3325-467b-b760-d8928c4c5e6b/small.jpg"
    },
    {
      "Affiliation": "Wageningen University, The Netherlands",
      "Bio": "Bedir Tekinerdogan is full professor and chairholder of the Information Technology group at Wageningen University in The Netherlands. He received his MSc degree and a PhD degree in Computer Science from the University of Twente in The Netherlands. \nHe graduated around 50 MSc students, supervised around 20 PhD students and developed more than 15 academic computer science courses. He has also been very active in scientific conferences and organized more than 50 conferences/workshops on important software engineering research topics.\nHe has around 25 years of experience in software engineering research and education. He has been active in many national and international research and consultancy projects with various large software companies. His current research at Wageningen University concerns smart system of systems engineering, with an emphasis on software engineering and information technology. \nMore details can be found on his LinkedIn Profile: https://www.linkedin.com/in/bedir",
      "Key": "bedirtekinerdogan",
      "Name": "Bedir Tekinerdogan",
      "URL": "https://linkedin.com/in/bedir",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/bedirtekinerdogan/5441fbaa-0995-4389-9f82-3a2924d8b207/small.jpg"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Key": "aleksandarsdimovski",
      "Name": "Aleksandar S. Dimovski",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/aleksandarsdimovski/841e9009-5b54-48b4-81b9-86c9d361b1bb/small.jpg"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "genecooperman",
      "Name": "Gene Cooperman"
    },
    {
      "Affiliation": "JKU Linz, Austria",
      "Key": "hanspetermossenbock",
      "Name": "Hanspeter MÃ¶ssenbÃ¶ck",
      "URL": "http://ssw.jku.at/General/Staff/HM/"
    },
    {
      "Affiliation": "Victoria University of wellington",
      "Bio": "A postdoctoral research fellow working on Grace; also has a background in computer graphics.",
      "Key": "richardroberts",
      "Name": "Richard Roberts",
      "URL": "http://richardroberts.co.nz",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/richardroberts/f645f707-1780-4030-ab14-0791de5a53ca/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "francoisfouquet",
      "Name": "FranÃ§ois Fouquet"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "thomaskuehne",
      "Name": "Thomas Kuehne",
      "URL": "http://homepages.ecs.vuw.ac.nz/~tk/"
    },
    {
      "Affiliation": "Red Hat",
      "Key": "christinehflood",
      "Name": "Christine H. Flood",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christinehflood/04966ca7-0cae-44db-932d-9f5c8f9dab70/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "stefanmarr",
      "Name": "Stefan Marr",
      "URL": "http://stefan-marr.de/research/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/stefanmarr/0917eab8-ec51-465f-9ff6-1295826fd91e/small.jpg"
    },
    {
      "Affiliation": "HPI",
      "Bio": "Robert Hirschfeld is a Professor of Computer Science at the Hasso Plattner Institute at the University of Potsdam, Germany. There he founded and leads the Software Architecture Group which is concerned with fundamental elements and structures of software. Methods and tools are developed for improving the comprehension and design of complex and interesting systems.\nHe served as a visiting professor at the Tokyo Institute of Technology (æ±äº¬å·¥æ¥­å¤§å­¦) and The University of Tokyo (æ±äº¬å¤§å­¦), Japan.\nRobert was a senior researcher with DoCoMo Euro-Labs, the European research facility of NTT DoCoMo Japan, where he worked on infrastructure components for next generation mobile communication systems with a focus on dynamic service adaptation and context-oriented programming.\nPrior to joining DoCoMo Euro-Labs, he was a principal engineer at Windward Solutions in Sunnyvale, California, where he designed and implemented distributed object systems, consulted in the area of object database technologies, and developed innovative software products and applications.\nRobert received a Ph.D. in Computer Science from the Ilmenau University of Technology, Germany.",
      "Key": "roberthirschfeld",
      "Name": "Robert Hirschfeld",
      "URL": "http://www.hirschfeld.org/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/roberthirschfeld/4a92f36f-71c6-4386-a0d7-ac6e1d9813b1/small.jpg"
    },
    {
      "Affiliation": "Philipps-UniversitÃ¤t Marburg",
      "Key": "stefanschulz",
      "Name": "Stefan Schulz"
    },
    {
      "Affiliation": "King's College London",
      "Key": "steffenzschaler",
      "Name": "Steffen Zschaler",
      "URL": "http://www.steffen-zschaler.de/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/steffenzschaler/4c2a67e3-fd60-42a5-a68d-751bb44aa44c/small.jpg"
    },
    {
      "Affiliation": "ocamljava.org",
      "Key": "xavierclerc",
      "Name": "Xavier Clerc"
    },
    {
      "Affiliation": "",
      "Key": "rafaelcapilla",
      "Name": "Rafael Capilla"
    },
    {
      "Affiliation": "University of Massachusetts Lowell",
      "Key": "jaymccarthy1",
      "Name": "Jay McCarthy",
      "URL": "https://jeapostrophe.github.io/home/"
    },
    {
      "Affiliation": "TU Delft",
      "Key": "michielhaisma",
      "Name": "Michiel Haisma",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michielhaisma/78ea9329-26f9-4da4-ad79-7e50a6381aa2/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel + University Ghent",
      "Key": "jennifersartor1",
      "Name": "Jennifer Sartor"
    },
    {
      "Affiliation": "",
      "Key": "fredericpeschanski",
      "Name": "FrÃ©dÃ©ric Peschanski"
    },
    {
      "Affiliation": "",
      "Key": "rikarends",
      "Name": "Rik Arends"
    },
    {
      "Affiliation": "",
      "Key": "adrianjohnstone",
      "Name": "Adrian Johnstone"
    },
    {
      "Affiliation": "Hasso-Plattner-Institute, Potsdam",
      "Key": "timfelgentreff",
      "Name": "Tim Felgentreff",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/timfelgentreff/1cdb8c05-2513-4508-ab46-dcae9a44d4c4/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Michael Van De Vanter is a researcher at Oracle Labs in Redwood Shores, CA. His current project is to ensure that the high-performance language implementations made possible by the Truffle/Graal platform are accompanied by tools, such as debuggers, profilers, and others, with minimal extra development effort. He was previously author of the Maxine Inspector, a combination debugger and visual heap inspector for the Maxine Research VM, and before that Principal Investigator of the Jackpot project at Sun Microsystems Labs.",
      "Key": "michaelvandevanter",
      "Name": "Michael Van De Vanter",
      "URL": "http://vandevanter.net/mlvdv",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michaelvandevanter/dc121b2b-14e8-4c60-bb30-a1cc7048a495/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "kerrychang",
      "Name": "Kerry Chang",
      "URL": "http://kerrychang.net",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/kerrychang/8e7d7a4b-155c-498a-820a-9dc40aa6185f/small.jpg"
    },
    {
      "Affiliation": "University of Lugano",
      "Key": "walterbinder",
      "Name": "Walter Binder",
      "URL": "http://www.inf.usi.ch/faculty/binder/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/walterbinder/55ff6d86-4a3f-4d23-9f3f-0a98aad01e44/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "florianmyter",
      "Name": "Florian Myter",
      "URL": "http://soft.vub.ac.be/soft/members/fmyter"
    },
    {
      "Affiliation": "Nokia Bell Labs",
      "Key": "tomvancutsem",
      "Name": "Tom Van Cutsem",
      "URL": "https://www.bell-labs.com/usr/tom.van_cutsem",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tomvancutsem/d758e20f-3414-45b2-a82f-af50d8a3b6b3/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "janbosch",
      "Name": "Jan Bosch"
    },
    {
      "Affiliation": "",
      "Key": "danielbrunner",
      "Name": "Daniel Brunner"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "michaelpradel",
      "Name": "Michael Pradel",
      "URL": "http://mp.binaervarianz.de/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michaelpradel/06ef7ed7-0982-404f-8261-5188acacd15f/small.jpg"
    },
    {
      "Affiliation": "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
      "Key": "alexanderlier",
      "Name": "Alexander Lier"
    },
    {
      "Affiliation": "",
      "Key": "dominikcharousset",
      "Name": "Dominik Charousset"
    },
    {
      "Affiliation": "Computer Science Dept., The Technion",
      "Bio": "Shmuel Katz is an Emeritus Professor in the Computer Science Department at the Technion\u2014Israel Institute of Technology. He joined the Technion in 1981, and helped develop and lead the Software Engineering degree track, and directed the Systems and Software Development Lab. His Sabbaticals and extended visits include UC Berkley, Carnegie-Mellon University, University of Lancaster, Technical Institute of Twente, Technical Institute of Tampere, and the University of Texas at Austin.\nHe has written over 100 journal and conference papers on using formal methods to improve software quality, modularity, and reliability. His early work focused on automatic generation of invariants, multiparty interactions for distributed programming, fault tolerance using self-stabilizing systems, and verifying properties such as database serializability using convenient execution sequences. Since 2000 his work has centered on specification and formal verification for aspect-oriented and event-driven programming. He was Editor-in-Chief of the Transactions on Aspect-Oriented Software Development from 2009-2011.",
      "Key": "shmuelkatz",
      "Name": "Shmuel Katz",
      "URL": "http://www.cs.technion.ac.il/~katz/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/shmuelkatz/9fea5e8a-d1c6-4d2b-819e-97617d4f8ffb/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "thomascottenier",
      "Name": "Thomas Cottenier"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Bio": "I\u2019m a postdoctoral research associate at The University of Edinburgh in the CArD group. I am a member of the Institute for Computing Systems Architecture (ICSA) which is part of the School of Informatics.\nI received my PhD from the University of M&uuml;nster.\nI\u2019m interested in all aspects of parallel programming. Particular research interests of mine include structured parallel programming, heterogeneous and GPU computing, and novel functional compilation techniques.",
      "Key": "michelsteuwer",
      "Name": "Michel Steuwer",
      "URL": "http://homepages.inf.ed.ac.uk/msteuwer/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michelsteuwer/5a465be6-d235-472c-8ace-4894a70bb742/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ© catholique de Louvain, Belgium",
      "Key": "benoitduhoux",
      "Name": "BenoÃ®t Duhoux",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/benoitduhoux/dd3a53b9-3d25-4bf1-9176-69e1049c9328/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Bio": "I am a programmer and Reader in Software Development in the Department of Informatics at King\u2019s College London where I lead the Software Development Team. I am an EPSRC Fellow. I co-founded Elbatrop.",
      "Key": "laurietratt",
      "Name": "Laurence Tratt",
      "URL": "http://tratt.net/laurie/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/laurietratt/f715fc31-2c46-4e48-9a13-d715343fdd4d/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology, Japan",
      "Key": "kensukesawada",
      "Name": "Kensuke Sawada"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "wolfgangdemeuter",
      "Name": "Wolfgang De Meuter",
      "URL": "https://soft.vub.ac.be/soft/members/wdmeuter",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/wolfgangdemeuter/61a20a3c-bffe-41ce-9f96-cd91fa312f72/small.jpg"
    },
    {
      "Affiliation": "Ghent University",
      "Bio": "I am a fourth year Ph.D. student in the Department of Electronics and Information Systems at Ghent University in Belgium. I am pursuing my degree under the supervision of Lieven Eeckhout. Before moving to Ghent in 2012, I spent two years as an Early Stage Researcher at the Foundation of Research and Technology (FORTH) in Heraklion, Greece. My research at FORTH was funded by an EU Marie Curie fellowship. I got my M.S. in Electrical and Computer Engineering at the University of Illinois at Urbana Champaign in 2009. I was a recipient of the J. William Fulbright scholarship from the U.S. Department of State. Before all the foreign travels, I got my B.Sc. in Electrical Engineering in 2006 from the University of Engineering and Technology in Lahore, Pakistan.",
      "Key": "shoaibakram",
      "Name": "Shoaib Akram",
      "URL": "http://users.elis.ugent.be/~sakram/index.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/shoaibakram/bada55c0-9459-41ea-810f-0fc85c660489/small.jpg"
    },
    {
      "Affiliation": "University of Tokyo",
      "Key": "shigeruchiba",
      "Name": "Shigeru Chiba",
      "URL": "http://www.csg.ci.i.u-tokyo.ac.jp/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/shigeruchiba/b57db719-4160-4e39-9f41-ef3facc9e449/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ¤t Stuttgart",
      "Key": "danielkulesz",
      "Name": "Daniel Kulesz"
    },
    {
      "Affiliation": "",
      "Key": "koenyskout",
      "Name": "Koen Yskout"
    },
    {
      "Affiliation": "",
      "Key": "ludovicmouline",
      "Name": "Ludovic Mouline"
    },
    {
      "Affiliation": "",
      "Key": "colinclark",
      "Name": "Colin Clark"
    },
    {
      "Affiliation": "National Institute of Advanced Industrial Science and Technology, Japan",
      "Key": "junkato",
      "Name": "Jun Kato",
      "URL": "http://junkato.jp",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/junkato/946564ad-0347-4e3c-8dbb-625e3449c713/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Dresden",
      "Key": "jeronimocastrillon",
      "Name": "Jeronimo Castrillon"
    },
    {
      "Affiliation": "",
      "Key": "nguonlytaing",
      "Name": "Nguonly Taing"
    },
    {
      "Affiliation": "UniversitÃ© Pierre et Marie Curie, France",
      "Key": "christianqueinnec",
      "Name": "Christian Queinnec",
      "URL": "http://lip6.fr/Christian.Queinnec/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christianqueinnec/976a029f-3f48-4c48-a7c4-c049a05b1f92/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dorinapetriu",
      "Name": "dorina Petriu"
    },
    {
      "Affiliation": "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
      "Key": "kaiselgrad",
      "Name": "Kai Selgrad"
    },
    {
      "Affiliation": "Huawei America Research Center",
      "Key": "adamwelc",
      "Name": "Adam Welc",
      "URL": "http://www.adamwelc.org/"
    },
    {
      "Affiliation": "University of Florida, USA",
      "Key": "albertoriva",
      "Name": "Alberto Riva",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/albertoriva/57874a4b-69d2-4edf-8989-4b71bcdd9526/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "tomokiimai",
      "Name": "Tomoki Imai"
    },
    {
      "Affiliation": "UniversitÃ© catholique de Louvain",
      "Bio": "Christopher Meiklejohn loves distributed systems and programming languages. Previously, Christopher worked at Basho Technologies, Inc. on the distributed key-value store, Riak. Christopher develops a programming language for distributed computation, called Lasp. Christopher is currently a Ph.D. student at the Universit&eacute; catholique de Louvain in Belgium.",
      "Key": "christophermeiklejohn",
      "Name": "Christopher Meiklejohn",
      "URL": "http://christophermeiklejohn.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christophermeiklejohn/534c2b02-1208-4a46-a66d-0ab8d3747cc3/small.jpg"
    },
    {
      "Affiliation": "Tokai University",
      "Key": "harumiwatanabe",
      "Name": "Harumi Watanabe",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/harumiwatanabe/e78378a6-8cd9-4ee9-ab16-c5f3ec7a3fb2/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "eliaspipping",
      "Name": "Elias Pipping"
    },
    {
      "Affiliation": "UniversitÃ© de MontrÃ©al",
      "Key": "marcfeeley",
      "Name": "Marc Feeley",
      "URL": "http://www.iro.umontreal.ca/~feeley",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/marcfeeley/2c882fdf-a3a8-4bbf-9e03-75b3d7d08909/small.jpg"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Key": "stevenltanimoto",
      "Name": "Steven L. Tanimoto",
      "URL": "http://www.cs.washington.edu/people/faculty/tanimoto"
    },
    {
      "Affiliation": "University of Alabama",
      "Key": "jeffgray",
      "Name": "Jeff Gray",
      "URL": "http://gray.cs.ua.edu/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jeffgray/1f2fd602-bac6-49dd-86e4-549b5dc88528/small.jpg"
    },
    {
      "Affiliation": " UniversitÃ  degli Studi di Milano",
      "Bio": "Walter Cazzola is currently an Associate Professor at the Department of Computer Science of the Universit&agrave; degli Studi di Milano, Italy and the Chair of the ADAPT laboratory. Previously, Cazzola was assistant professor at the same institution and researcher assistant at the Department of Informatics and Computer Science of the Universit&agrave; degli Studi di Genova. \nHe is the designer of the mChaRM framework, of the @Java/@AspectJ, [a]C#, Blueprint programming languages and he is currently involved in the designing and development of the Neverlang general purpose compiler generator. He is also actively involved in the software evolution and models@run-time research areas where he co-designed the JavAdaptor DSU, the ReverseÐ¯ model extractor tool. He pioneered the language product line research area with the Neverlang+AiDE framework.\nHis research interests straddle from programming languages to software engineering and they include (but are not limited to) computational reflection, aspect-oriented software development, programming techniques and languages, software product lines and software evolution. He has written more than 100 technical papers. He served on the program committees or editorial boards of the most important conferences and journals about his research topics.",
      "Key": "waltercazzola",
      "Name": "Walter Cazzola",
      "URL": "http://cazzola.di.unimi.it/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/waltercazzola/72dfcd0d-15b4-4f37-a74c-e77fc20730cb/small.jpg"
    },
    {
      "Affiliation": "FEUP, Universidade do Porto",
      "Key": "ademaraguiar",
      "Name": "Ademar Aguiar",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/ademaraguiar/178b6ef3-44b6-44e5-90ef-61fcc7b12ce8/small.jpg"
    },
    {
      "Affiliation": "Technical University of Dresden",
      "Key": "somayehmalakuti",
      "Name": "Somayeh Malakuti",
      "URL": "www.somayehmalakuti.com"
    },
    {
      "Affiliation": "",
      "Key": "tylerdenniston",
      "Name": "Tyler Denniston"
    },
    {
      "Affiliation": "Radboud University Nijmegen",
      "Key": "rinusplasmeijer",
      "Name": "Rinus Plasmeijer"
    },
    {
      "Affiliation": "Polish-Japanese Academy of Information Technology",
      "Key": "marekmarecki",
      "Name": "Marek Marecki"
    },
    {
      "Affiliation": "",
      "Key": "mireilleblayfornarino",
      "Name": "Mireille Blay-Fornarino"
    },
    {
      "Affiliation": "Ludwig-Maximilians-UniversitÃ¤t MÃ¼nchen",
      "Key": "annabelleklarl",
      "Name": "Annabelle Klarl",
      "URL": "https://www.pst.ifi.lmu.de/People/staff/klarl.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/annabelleklarl/b6ff3b40-2893-45f2-91d5-c9a5ea7d2943/small.jpg"
    },
    {
      "Affiliation": "Portland State University",
      "Bio": "My research interests are in the area of programming languages, operating systems, object-oriented systems and distributed computing, and more specifically in the region where they overlap (such as language design for distributed Object-oriented computing.) My favorite system for trying out ideas was for many years Squeak Smalltalk; I was an active worker on Traits, along with with the folks from SCG in Bern. I\u2019m a co-author of two books on Smalltalk programming, Squeak by Example, and Pharo By Example. For the last five years I\u2019ve been engaged in developing the Grace programming language, an object-oriented programing language designed for teaching novices. See gracelang.org for details.",
      "Key": "andrewblack",
      "Name": "Andrew Black",
      "URL": "http://www.cs.pdx.edu/~black",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/andrewblack/4d66ee54-d4e1-4343-bba8-e5c5eaed2427/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "takashiiba",
      "Name": "Takashi Iba"
    },
    {
      "Affiliation": "EPITA / LRDE",
      "Bio": "Dr. Didier Verna has a Ph.D. in Computer Science and is currently working as an assistant professor for EPITA, a private Computer Science university located in Paris. He gives lectures on Operating Systems, Computer Graphics, Functional Programming and Typesetting. His main research topic is on the use of Lisp, a multi-paradigm dynamic language, to reconcile genericity and performance.\nDidier Verna is also quite involved in free software: he has been one of the core maintainers of XEmacs for more than 15 years. He is also a committer to Gnus and BBDB, the author of several LaTeX packages and an occasional contributor to other Free Software projects (the GNU Autotools most notably; he was one of the technical reviewers for the \u201cGoat Book\u201d).\nDidier Verna is a member of the European Lisp Symposium steering committee and serves as a program committee member in various conferences (International Lisp Conference, European Lisp Symposium, Dynamic Languages Symposium, Context-Oriented Programming workshop, ACM Symposium on Applied Computing).\nAll of this is in fact half-true: two days a week, Didier Verna drops his scientific hat and wears the Jazz musician one instead. But that is another story\u2026",
      "Key": "didierverna",
      "Name": "Didier Verna",
      "URL": "https://www.lrde.epita.fr/~didier",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/didierverna/854d6aef-85b1-4d6e-a0e3-fa0dc86e3927/small.jpg"
    },
    {
      "Affiliation": "University of Zurich",
      "Bio": "PhD student at the University of Zurich, Research intern at IBM T.J. Watson Research Center interested in how we can make the software development process more data-driven by giving structure to runtime data and providing guidance to developers on how to use it",
      "Key": "jurgencito",
      "Name": "JÃ¼rgen Cito",
      "URL": "http://www.ifi.uzh.ch/seal/people/cito.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jurgencito/8f3b8480-88a3-4e18-a139-789c23a8ccb8/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Bio": "Eelco Visser is Antoni van Leeuwenhoek Professor of Computer Science at Delft University of Technology. He received a master\u2019s and doctorate in computer science from the University of Amsterdam in 1993 and 1997, respectively. Previously he served as postdoc at the Oregon Graduate Institute, as Assistant Professor at Utrecht University, and as Associate Professor at TU Delft.\nHis research interests include programming languages, software language engineering, domain-specific programming languages, program transformation, software security, and interaction design. With his students he has designed and implemented the Spoofax language workbench, as well as many domain-specific languages, including DSLs for syntax definition (SDF2, SDF3), program transformation (Stratego), name binding (NaBL), dynamic semantics (DynSem), software deployment (Nix), web application development (WebDSL), and mobile phone applications (mobl). In the language designer\u2019s workbench project he is pursuing high-level declarative language definition that serves for language implementation and verification.",
      "Key": "eelcovisser",
      "Name": "Eelco Visser",
      "URL": "http://eelcovisser.org",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/eelcovisser/7b37e5b6-1517-483d-8e05-0b5056b1fafd/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "michaelhomer",
      "Name": "Michael Homer",
      "URL": "http://ecs.vuw.ac.nz/~mwh",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michaelhomer/16fc38e2-021c-4b11-8ea6-752cf9b2c0a9/small.jpg"
    },
    {
      "Affiliation": "Philipps-UniversitÃ¤t Marburg",
      "Key": "christophbockisch",
      "Name": "Christoph Bockisch",
      "URL": "http://www.uni-marburg.de/fb12/arbeitsgruppen/psw/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christophbockisch/7a0fd10b-9e2d-4580-a1c6-5e747d163a53/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "matthewpickering",
      "Name": "Matthew Pickering"
    },
    {
      "Affiliation": "Inria",
      "Key": "nataliiabielova",
      "Name": "Nataliia Bielova",
      "URL": "http://www-sop.inria.fr/members/Nataliia.Bielova/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nataliiabielova/ce193320-7c3e-4cf5-bb66-05d719761b6d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "bugramehmetyildiz",
      "Name": "Bugra Mehmet Yildiz"
    },
    {
      "Affiliation": "",
      "Key": "alexanderwood",
      "Name": "Alexander Wood"
    },
    {
      "Affiliation": "NXP-semiconductors, Netherlands",
      "Key": "hermanhartmann",
      "Name": "Herman Hartmann",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/hermanhartmann/068ede73-2072-498d-9bfc-49221d5c2ca9/small.jpg"
    },
    {
      "Affiliation": "University of Amsterdam, Netherlands",
      "Key": "nicolevavrova",
      "Name": "Nicole VavrovÃ¡"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "theodhondt",
      "Name": "Theo D'Hondt",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/theodhondt/80d20dfd-cfc7-4c95-b5d6-3a326582febd/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "tonimattis",
      "Name": "Toni Mattis"
    },
    {
      "Affiliation": "",
      "Key": "thomashartmann",
      "Name": "Thomas Hartmann"
    },
    {
      "Affiliation": "",
      "Key": "laramennes",
      "Name": "Lara Mennes"
    },
    {
      "Affiliation": "Google",
      "Key": "marcelhlopko",
      "Name": "Marcel Hlopko"
    },
    {
      "Affiliation": "Software Improvement Group",
      "Key": "lodewijkbergmans",
      "Name": "Lodewijk Bergmans",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/lodewijkbergmans/3b087fbf-9c86-4b45-bd87-66c1e5a4a95d/small.jpg"
    },
    {
      "Affiliation": "Ãcole des Mines de Nantes, France",
      "Key": "mariosudholt",
      "Name": "Mario SÃ¼dholt",
      "URL": "http://www.emn.fr/z-info/sudholt/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/mariosudholt/82a5ec9b-b852-449f-bd62-260e38a62cf2/small.jpg"
    },
    {
      "Affiliation": "Inria Bordeaux",
      "Key": "ireneannedurand",
      "Name": "IrÃ¨ne Anne Durand",
      "URL": "http://dept-info.labri.fr/~idurand/"
    },
    {
      "Affiliation": "Cloudera",
      "Key": "arielrabkin",
      "Name": "Ariel Rabkin"
    },
    {
      "Affiliation": "Oracle Labs, Austria",
      "Key": "lukasstadler",
      "Name": "Lukas Stadler",
      "URL": "http://ssw.jku.at/General/Staff/LS/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/lukasstadler/879dca17-669b-4d6b-b982-d06c8144264b/small.jpg"
    },
    {
      "Affiliation": "Aarhus University",
      "Bio": "Professor at Department of Computer Science, Aarhus University, Denmark",
      "Key": "andersmoller",
      "Name": "Anders MÃ¸ller",
      "URL": "https://cs.au.dk/~amoeller/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/andersmoller/a6b971e9-27d8-44ed-84d2-5ce2d53ff5e4/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "hidehikomasuhara",
      "Name": "Hidehiko Masuhara",
      "URL": "http://prg.is.titech.ac.jp/people/masuhara/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/hidehikomasuhara/8833fff3-4497-405c-bc5a-1b06d1be5160/small.jpg"
    },
    {
      "Affiliation": "University of Leicester",
      "Key": "ruzannachitchyan",
      "Name": "Ruzanna Chitchyan"
    },
    {
      "Affiliation": "Universidad de los Andes",
      "Bio": "I have been working on adaptive systems for the last couple of years. Currently I am approaching adaptive systems from programming language perspective, working on development (programming language design), verification (partial, and incremental techniques), and application (smart environments, CPS, and IoT) of these systems.",
      "Key": "nicolascardozo",
      "Name": "NicolÃ¡s Cardozo",
      "URL": "https://profesores.virtual.uniandes.edu.co/ncardozo/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nicolascardozo/4bf0b997-c8f9-4d9f-ba4b-7379d19ab2a3/small.jpg"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Key": "juanfumero",
      "Name": "Juan Fumero",
      "URL": "http://homepages.inf.ed.ac.uk/s1369892/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/juanfumero/e76896d1-7e40-4e77-859f-dc51392013a2/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Dresden",
      "Bio": "I\u2019m currently a Post-Doc at Software Technology Group, Department of Computer Science, University of Technology Dresden.\nI finished my PhD thesis on Multi-Quality Auto-Tuning by Contract Negotiation (multi-objective self-optimizing software systems) graded summa cum laude in July 2013.\nI worked on the project CoolSoftware, in the junior research group QualiTune, part of the Resubic Lab Dresden and in the DFG collaborative research center 912: HAEC (Highly Adaptive Energy-efficient Computing). Currently, I\u2019m working as a lecturer at Technische Universit&auml;t Dresden. Additionally, I\u2019m on voluntary capacity head of the jExam Group, a student lifecycle management system.",
      "Key": "sebastiangotz",
      "Name": "Sebastian GÃ¶tz",
      "URL": "http://st.inf.tu-dresden.de/sgoetz",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sebastiangotz/6439c305-8929-4dec-9733-9c5d1973a9e4/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "humbertorodriguezavila",
      "Name": "Humberto Rodriguez Avila",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/humbertorodriguezavila/8d8cdbc1-b912-4f3b-8532-6f5e39459990/small.jpg"
    },
    {
      "Affiliation": "Cardiff Metropolitan University",
      "Bio": "Professor of Computer Science &amp; Public Policy at Cardiff Metropolitan University.",
      "Key": "tomcrick",
      "Name": "Tom Crick",
      "URL": "http://proftomcrick.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tomcrick/beac4bd3-080d-41f0-8501-4cba32466814/small.jpg"
    },
    {
      "Affiliation": "Open University and Technion IIT",
      "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion\u2014Israel Institute of Technology.\nHis research interests include language-oriented software engineering, modularity, and programming, particularly involving domain specific languages. He is a steering committee member and the former chair of the AOSA, a non-profit organization whose mission is to be the primary sponsor for the annual conferences: International Conference on Aspect-Oriented Software Development, International Conference on Modularity, and International Conference on the Art, Science, and Engineering of Programming.\nProf. Lorenz received his PhD in computer science from the Technion\u2014Israel Institute of Technology. He\u2019s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
      "Key": "davidlorenz",
      "Name": "David H. Lorenz",
      "URL": "http://www.openu.ac.il/home/lorenz",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/davidlorenz/d0a8d2b7-30ae-4cb7-8004-2ed968eedf38/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alainmarty",
      "Name": "Alain Marty"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "jeremysinger",
      "Name": "Jeremy Singer",
      "URL": "http://www.dcs.gla.ac.uk/~jsinger",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jeremysinger/14db1542-37ba-4e0e-b338-e3a952991f1a/small.jpg"
    },
    {
      "Affiliation": "Kyusyu University",
      "Key": "ikutatanigawa",
      "Name": "Ikuta Tanigawa"
    },
    {
      "Affiliation": "Colorado State University, USA",
      "Key": "sudiptoghosh",
      "Name": "Sudipto Ghosh",
      "URL": "http://www.cs.colostate.edu/~ghosh/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sudiptoghosh/915fce52-e676-4eec-a15d-1b127ac02fd0/small.jpg"
    },
    {
      "Affiliation": "University of Freiburg",
      "Key": "peterthiemann",
      "Name": "Peter Thiemann",
      "URL": "http://www2.informatik.uni-freiburg.de/~thiemann/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/peterthiemann/92a536b4-3777-4244-ba1f-41fa799909b1/small.jpg"
    },
    {
      "Affiliation": "Politecnico di Milano",
      "Key": "carloghezzi",
      "Name": "Carlo Ghezzi"
    },
    {
      "Affiliation": "Purdue University",
      "Bio": "Tiark Rompf is an assistant professor at Purdue University. His work focuses on runtime code generation, advanced compiler technology, and associated language support. From 2008 to 2014 he was a member of Martin Odersky\u2019s Scala team at EPFL where he developed the LMS compiler framework and made various contributions to the Scala language and toolchain (delimited continuations, efficient immutable data structures, compiler speedups, type system work).",
      "Key": "tiarkrompf",
      "Name": "Tiark Rompf",
      "URL": "http://tiarkrompf.github.io/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tiarkrompf/0262a01e-7fda-45b0-92d8-4ba269ad7997/small.jpg"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "manuelserrano",
      "Name": "Manuel Serrano",
      "URL": "http://www-sop.inria.fr/members/Manuel.Serrano/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/manuelserrano/084e3f7c-e031-4d91-ba23-b96148549086/small.jpg"
    },
    {
      "Affiliation": "Ritsumeikan University",
      "Key": "tetsuokamina",
      "Name": "Tetsuo Kamina",
      "URL": "http://www.fse.cs.ritsumei.ac.jp/~kamina/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tetsuokamina/6f2756c4-2d16-4c9c-baf5-d893d114a071/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ  Milano Bicocca, Italy",
      "Key": "marcoantoniotti",
      "Name": "Marco Antoniotti"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "jensnicolay",
      "Name": "Jens Nicolay",
      "URL": "https://soft.vub.ac.be/~jnicolay/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jensnicolay/307f2d75-b933-43f4-ae6c-1cb9a2db8e92/small.jpg"
    },
    {
      "Affiliation": "Raincode, Belgium",
      "Key": "vadimzaytsev",
      "Name": "Vadim Zaytsev",
      "URL": "http://grammarware.net",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/vadimzaytsev/fe6c221f-75d5-4fbc-ac41-be9c99349b5d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "nicolasneu",
      "Name": "Nicolas NeuÃ"
    },
    {
      "Affiliation": "",
      "Key": "carlfriedrichbolz",
      "Name": "Carl Friedrich Bolz",
      "URL": "http://cfbolz.de"
    },
    {
      "Affiliation": "UniversitÃ¤t Stuttgart",
      "Key": "verenakafer",
      "Name": "Verena KÃ¤fer",
      "URL": "http://www.iste.uni-stuttgart.de/en/se/people/verena-kaefer.html"
    },
    {
      "Affiliation": "Oracle Labs, Austria",
      "Key": "matthiasgrimmer",
      "Name": "Matthias Grimmer",
      "URL": "http://www.matthiasgrimmer.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/matthiasgrimmer/8c9a67ac-2ea5-4914-9110-3d4a80b16ff0/small.jpg"
    },
    {
      "Affiliation": "University of Brest",
      "Key": "stevencostiou",
      "Name": "Steven Costiou"
    },
    {
      "Affiliation": "University of Victoria",
      "Key": "yvonnecoady",
      "Name": "Yvonne Coady",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/yvonnecoady/7b532c8e-0c31-445d-b943-ad956a6f5722/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "joeridekoster",
      "Name": "Joeri De Koster",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/joeridekoster/2f5765d5-6ed1-4a75-acf1-99a86a994912/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "laurenssion",
      "Name": "Laurens Sion"
    },
    {
      "Affiliation": "Department of Information Science, Tokyo Institute of Technology",
      "Key": "akiooka",
      "Name": "Akio Oka"
    },
    {
      "Affiliation": "",
      "Key": "santoshviswanatham",
      "Name": "Santosh Viswanatham",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/santoshviswanatham/b4595c65-2a48-4476-8f28-e8c61c153169/small.jpg"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "marcelheinz",
      "Name": "Marcel Heinz"
    },
    {
      "Affiliation": "KTH Royal Institute of Technology",
      "Bio": "Assistant Professor in the School of Computer Science and Communication at KTH Royal Institute of Technology, Sweden.",
      "Key": "philipphaller",
      "Name": "Philipp Haller",
      "URL": "http://www.csc.kth.se/~phaller/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/philipphaller/99731905-9a83-4490-93c5-2f13d4420117/small.jpg"
    },
    {
      "Affiliation": "IT University of Copenhagen",
      "Key": "alexandruiosiflazar",
      "Name": "Alexandru Iosif-Lazar",
      "URL": "http://www.itu.dk/people/afla/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/alexandruiosiflazar/c1b1e051-cf4b-467a-8e11-5a686bbe6051/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Dresden",
      "Bio": "Thomas K&uuml;hn is a member of the Software Engineering group of the TU Dresden. His research interests include software engineering for continuous context-sensitive software systems, role-based design and programming, conceptual modeling of dynamic context-dependent domains, formal verification of software systems, feature oriented software and language product lines. Currently he has a position within the DFG research training school on \u201cRole-oriented Software Infrastructures\u201d (RoSI), where he is writing his PhD thesis about \u201cA Family of Role-based Modeling and Programming Languages\u201d.",
      "Key": "thomaskuhn",
      "Name": "Thomas KÃ¼hn",
      "URL": "http://wwwpub.zih.tu-dresden.de/~s4560758/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/thomaskuhn/4b635ea1-14d7-4dd0-be7e-7301396d35ce/small.jpg"
    },
    {
      "Affiliation": "KAIST",
      "Key": "sukyoungryu",
      "Name": "Sukyoung Ryu",
      "URL": "http://plrg.kaist.ac.kr/ryu",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sukyoungryu/3bdcd232-f3d4-4610-9953-30b513926e54/small.jpg"
    },
    {
      "Affiliation": "University of Michigan",
      "Key": "stephenoney",
      "Name": "Stephen Oney",
      "URL": "http://from.so",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/stephenoney/50337dd4-e50f-4ae1-bd53-e240734c4619/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "juliendeantoni",
      "Name": "Julien DeAntoni",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/juliendeantoni/8d996d69-181b-4952-ba94-51e370f02163/small.jpg"
    },
    {
      "Affiliation": "University of Bergen",
      "Key": "anyahelenebagge",
      "Name": "Anya Helene Bagge",
      "URL": "http://www.ii.uib.no/~anya/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/anyahelenebagge/0eb096cc-5dbd-4ca8-9b0a-37adff9365a1/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "patrickrein",
      "Name": "Patrick Rein",
      "URL": "https://www.patrickrein.de"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "stephenkell",
      "Name": "Stephen Kell",
      "URL": "http://www.cl.cam.ac.uk/~srk31/"
    },
    {
      "Affiliation": "Universidad de MÃ¡laga, Spain",
      "Key": "lidiafuentes",
      "Name": "Lidia Fuentes",
      "URL": "http://www.lcc.uma.es/~lff/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/lidiafuentes/a7d9382a-9aff-46d2-b2e2-2edede7e8507/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "samvandenvonder",
      "Name": "Sam Van den Vonder"
    },
    {
      "Affiliation": "",
      "Key": "maximiliencolange",
      "Name": "Maximilien Colange"
    },
    {
      "Affiliation": "Makerere University",
      "Key": "engineerbainomugisha",
      "Name": "Engineer Bainomugisha"
    },
    {
      "Affiliation": "Google",
      "Key": "ulandegenbaev",
      "Name": "Ulan Degenbaev"
    },
    {
      "Affiliation": "Google, Inc.",
      "Key": "stelianionescu",
      "Name": "Stelian Ionescu"
    },
    {
      "Affiliation": "Google",
      "Bio": "Gilad Bracha is the creator of the Newspeak programming language and a software engineer at Google where he works on Dart. Previously, he was a VP at SAP Labs, a Distinguished Engineer at Cadence, and a Computational Theologist and Distinguished Engineer at Sun. He is co-author of the Java Language Specification, and a researcher in the area of object-oriented programming languages. Prior to joining Sun, he worked on Strongtalk, the Animorphic Smalltalk System. He received his B.Sc in Mathematics and Computer Science from Ben Gurion University in Israel and a Ph.D. in Computer Science from the University of Utah.",
      "Key": "giladbracha",
      "Name": "Gilad Bracha",
      "URL": "bracha.org",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/giladbracha/1ddf0ae2-05c5-4eda-bfef-b6bb9e07f769/small.jpg"
    },
    {
      "Affiliation": "TU Delft",
      "Bio": "http://twitter.com/seba0_  http://erdweg.org",
      "Key": "sebastianerdweg",
      "Name": "Sebastian Erdweg",
      "URL": "http://erdweg.org",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sebastianerdweg/cc4515b1-cefa-4dee-a915-3242f337c8d8/small.jpg"
    },
    {
      "Affiliation": "Facebook",
      "Key": "avikchaudhuri",
      "Name": "Avik Chaudhuri",
      "URL": "http://www.cs.umd.edu/~avik/"
    },
    {
      "Affiliation": "",
      "Key": "feliennehermans",
      "Name": "Felienne Hermans",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/feliennehermans/f1233e68-176f-4ecc-a70f-932b9370f82e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "oscargonzalezrojas",
      "Name": "Oscar GonzÃ¡lez-Rojas"
    },
    {
      "Affiliation": "University of Twente",
      "Key": "mehmetaksit",
      "Name": "Mehmet Aksit"
    },
    {
      "Affiliation": "",
      "Key": "thomasspringer",
      "Name": "Thomas Springer"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "jorgkienzle",
      "Name": "JÃ¶rg Kienzle",
      "URL": "http:http://www.cs.mcgill.ca/~joerg/Home/Jorgs_Home.html",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jorgkienzle/b25a2a3e-a091-49ea-9c62-e6d49f6d1cfa/small.jpg"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Dresden",
      "Key": "markuswutzler",
      "Name": "Markus Wutzler",
      "URL": "http://www.markus-wutzler.de",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/markuswutzler/5d0cdb25-6484-42b2-aebb-e258a55a51b4/small.jpg"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "lukashartel",
      "Name": "Lukas HÃ¤rtel"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "elisagonzalezboix",
      "Name": "Elisa Gonzalez Boix",
      "URL": "http://soft.vub.ac.be/~egonzale",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/elisagonzalezboix/8e8a61c4-366e-49b5-a861-7dfbc98ee129/small.jpg"
    },
    {
      "Affiliation": "Fukuoka University",
      "Key": "vasilymoshnyaga",
      "Name": "Vasily Moshnyaga"
    },
    {
      "Affiliation": "University of Zagreb",
      "Key": "danijelmlinaric",
      "Name": "Danijel MlinariÄ",
      "URL": "http://www.fer.unizg.hr/en/danijel.mlinaric",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/danijelmlinaric/3da72436-61e7-4e56-b0df-d4f5e76b015f/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "michaelperscheid",
      "Name": "Michael Perscheid"
    },
    {
      "Affiliation": "",
      "Key": "lukechurch",
      "Name": "Luke Church"
    },
    {
      "Affiliation": "UniversitÃ© de Bordeaux / LaBRI",
      "Key": "michaelraskin",
      "Name": "Michael Raskin",
      "URL": "http://mccme.ru/~raskin"
    },
    {
      "Affiliation": "Google",
      "Key": "andreasrossberg",
      "Name": "Andreas Rossberg",
      "URL": "http://www.mpi-sws.org/~rossberg/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/andreasrossberg/c6329233-e420-4a58-9b0f-f6619c045332/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "johanbourcier",
      "Name": "Johan Bourcier"
    },
    {
      "Affiliation": "",
      "Key": "marliesaldewereld",
      "Name": "Marlies Aldewereld"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Bio": "Takuo Watanabe is a professor in the Department of Computer Science at Tokyo Institute of Technology. He received his Ph. D. from the Department of Information Science at the Tokyo Institute of Technology in 1991. He is working in the area of programming languages, programming methodologies, and formal methods. His research focuses on understanding the nature of reflective behaviors in concurrent systems, inventing new applications of computational reflection, and developing new abstraction mechanisms and programming models for safe/secure systems.",
      "Key": "takuowatanabe",
      "Name": "Takuo Watanabe",
      "URL": "http://www.psg.c.titech.ac.jp/~takuo/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/takuowatanabe/11ab75d4-f641-4534-b315-c5a38c8c9c31/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "wendymackay",
      "Name": "Wendy Mackay"
    },
    {
      "Affiliation": "HARC / Y Combinator Research",
      "Bio": "Yoshiki Ohshima has research interests in interactive and educational computer systems, software architectures and programming languages. Yoshiki graduated from the Tokyo Institute of Technology in 1994. He was awarded his PhD for the creation of \u201cKedama\u201d, a massively parallel particle programming system, from the Tokyo Institute of Technology in 2006. Yoshiki worked on theme park related research project at Walt Disney Imagineering R&amp;D from 2000 through 2002. In 2002, he joined Twin Sun, Inc. From 2007 he worked at the Viewpoints Research Institute. At VPRI, Yoshiki worked on projects include bringing the etoys environment to children via the \u201cXO\u201d and the One Laptop Per Child (olpc) initiative, multilingualization of software environments, and the STEPS project.",
      "Key": "yoshikiohshima1",
      "Name": "Yoshiki Ohshima",
      "URL": "http://harc.ycr.org/member/yoshiki_ohshima/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/yoshikiohshima1/924354bb-3690-4fde-b09c-8db646d6bf36/small.jpg"
    },
    {
      "Affiliation": "Aerospace Corporation",
      "Key": "kristiebellman",
      "Name": "Kristie Bellman"
    },
    {
      "Affiliation": "Technische UniversitÃ¤t Dresden",
      "Key": "larsschutze",
      "Name": "Lars SchÃ¼tze",
      "URL": "https://cfaed.tu-dresden.de/ccc-staff-schuetze",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/larsschutze/5c4b24fa-aac9-45d6-bbfb-e6483a995f9a/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "quentinstievenart",
      "Name": "Quentin StiÃ©venart"
    },
    {
      "Affiliation": "Google",
      "Key": "kentarohara",
      "Name": "Kentaro Hara"
    },
    {
      "Affiliation": "State University of New York (SUNY) Binghamton",
      "Bio": "I am an Associate Professor at State University of New York (SUNY) at Binghamton. I am interested in programming languages, software engineering, and systems, with current focuses on energy-aware programming languages, data-intensive software, and type systems. I received my Ph.D. in Computer Science from the Johns Hopkins University, in 2007.",
      "Key": "yudavidliu",
      "Name": "Yu David Liu",
      "URL": "http://www.cs.binghamton.edu/~davidl",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/yudavidliu/1da5367f-6c86-4df7-859d-ca63bc2a178b/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dominikaumayr",
      "Name": "Dominik Aumayr"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Bio": "I am a Professor of Computer Science at the Technical University of Darmstadt, Germany.\nMy research focuses on software development paradigms and tools.\nOn the paradigms side, I develop programming languages to enable the visions of \u201csoftware as a service (SaaS)\u201d and \u201csoftware product-lines\u201d by providing large-scale module concepts with built-in support for adaptability and extensibility.\nOn the tools side, I work on intelligent software-development environments that guide developers to increase the development productivity and the software quality. Such environment leverage web-based resources to automatically generate and recommend established programming rules and patterns; they also enable architects to explicitly specify such patterns to be enforced during development.\nI have (co)authored over 100 scientific publications in renowned publication venues in software engineering and programming languages. I regularly serve on steering committees, program committees, and editorial boards of top tier conferences and journals in software engineering and programming languages.",
      "Key": "miramezini",
      "Name": "Mira Mezini",
      "URL": "http://www.stg.tu-darmstadt.de/staff/mira_mezini/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/miramezini/8e9ce50d-5266-482f-8510-cf2da66e77ae/small.jpg"
    },
    {
      "Affiliation": "iMinds, Belgium",
      "Key": "frankpiessens",
      "Name": "Frank Piessens"
    },
    {
      "Affiliation": "Royal Holloway University of London",
      "Key": "elizabethscott",
      "Name": "Elizabeth Scott",
      "URL": "https://www.royalholloway.ac.uk/computerscience/research/CSLE/People/EScotthome.aspx"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "andreivaranovich",
      "Name": "Andrei Varanovich"
    },
    {
      "Affiliation": "",
      "Key": "jorgemarxgomez",
      "Name": "Jorge Marx GÃ³mez"
    },
    {
      "Affiliation": "Dream Songs, Inc. & IBM Research",
      "Bio": "I used to be Dick Gabriel. Those days are long gone. Now I\u2019m just Dick Gabriel.",
      "Key": "richardpgabriel",
      "Name": "Richard P. Gabriel",
      "URL": "http://dreamsongs.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/richardpgabriel/c784e030-9cba-474a-9ad4-6df96f5ddecf/small.jpg"
    },
    {
      "Affiliation": "Netherlands Defence Academy",
      "Key": "janmartinjansen",
      "Name": "Jan Martin Jansen",
      "URL": "http://www.nlda-tw.nl/janmartinjansen",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/janmartinjansen/c4b1139e-5b01-4811-8cff-278c8ba3b8fe/small.jpg"
    },
    {
      "Affiliation": "University of TÃ¼bingen, Germany",
      "Key": "klausostermann",
      "Name": "Klaus Ostermann",
      "URL": "http://ps.informatik.uni-tuebingen.de/team/ostermann/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/klausostermann/3b2188f0-6472-4a18-b97c-765414c990c8/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "taoyue",
      "Name": "Tao Yue"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "guntermussbacher",
      "Name": "Gunter Mussbacher"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "ralflammel",
      "Name": "Ralf LÃ¤mmel",
      "URL": "http://softlang.wikidot.com/rlaemmel:home",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/ralflammel/bc00aec2-e243-40e0-be65-bf9e5e21b0be/small.jpg"
    },
    {
      "Affiliation": "Kyushu University",
      "Key": "kenjihisazumi",
      "Name": "Kenji Hisazumi"
    },
    {
      "Affiliation": "",
      "Key": "javierburroni",
      "Name": "Javier Burroni",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/javierburroni/dc65c155-74c5-40ce-b81f-e638faeff433/small.jpg"
    },
    {
      "Affiliation": "EPITA / LRDE",
      "Bio": "PhD student at EPITA Research &amp; Development Laboratory (LRDE)",
      "Key": "jimnewton",
      "Name": "Jim Newton",
      "URL": "https://www.lrde.epita.fr/wiki/User:Jnewton",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jimnewton/f3a12841-8a20-4e1e-960b-a2d0b77d704d/small.jpg"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "uweamann",
      "Name": "Uwe AÃmann",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/uweamann/2b7ac8f7-db1b-4039-b5c8-2d54f07ca2c8/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "erikernst",
      "Name": "Erik Ernst",
      "URL": "http://cs.au.dk/~eernst/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/erikernst/cd2b2c5b-90ee-4e88-aa30-f3a477e8545f/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "simonthompson",
      "Name": "Simon Thompson",
      "URL": "http://www.cs.kent.ac.uk/people/staff/sjt/"
    },
    {
      "Affiliation": "Open University of the Netherlands, The Netherlands",
      "Key": "harriepassier",
      "Name": "Harrie Passier"
    },
    {
      "Affiliation": "",
      "Key": "clemensnylandstedklokmose",
      "Name": "Clemens Nylandsted Klokmose"
    },
    {
      "Affiliation": "LambdaWerk GmbH",
      "Bio": "Hans has three decades of experience as a programmer. Starting his career with Basic, Forth and Pascal, he followed the rise of object oriented software with C++. After ten years as a professional Common Lisp programmer, he is now heading a software company in Berlin, specializing in Clojure based communication systems for the healthcare industry.",
      "Key": "hanshubner",
      "Name": "Hans HÃ¼bner",
      "URL": "https://lambdawerk.com/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/hanshubner/9c679ed7-4427-43a2-9164-ddbcd8f142e9/small.jpg"
    },
    {
      "Affiliation": "RavenPack",
      "Key": "nicklevine",
      "Name": "Nick Levine"
    },
    {
      "Affiliation": "Hasso Plattner Institute, Potsdam",
      "Key": "stefanramson",
      "Name": "Stefan Ramson"
    },
    {
      "Affiliation": "Alan Turing Institute",
      "Bio": "Tomas is a Visiting Researcher at the Alan Turing institute, working on tools for open data-driven storytelling. He is building tools that integrate with modern data sources (open government data, data published by citizen initiatives) and let users easily create analyses and visualizations that are linked to the original data source, making the analyses more transparent, reproducible, but also easy to adapt. His early work on the project can be found at http://thegamma.net.\nTomas\u2019 many other interests include open-source and functional programming (he is an active contributor to the F# ecosystem), programming language theory (his PhD thesis on \u201ccoeffects\u201d develops a theory of context-aware programming language language), but also understanding programming through the perspective of philosophy of science.",
      "Key": "tomaspetricek",
      "Name": "Tomas Petricek",
      "URL": "http://tomasp.net",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tomaspetricek/405de991-6537-4d65-8499-fde0dcc8c5cd/small.jpg"
    },
    {
      "Affiliation": "PUC-Rio",
      "Bio": "Roberto Ierusalimschy is an Associate Professor of Informatics at PUC-Rio, where he works with programming-language design and implementation. Roberto is also the main designer of the Lua programming language. In 2013 he received the Scientific Merit Award from the Brazilian Computer Society (SBC). Roberto is a Senior Speaker from SBC, a Distinguished Speaker from ACM, and member of the IFIP Working Group on Language Design (IFIP WG 2.16).",
      "Key": "robertoierusalimschy",
      "Name": "Roberto Ierusalimschy",
      "URL": "http://www.inf.puc-rio.br/~roberto",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/robertoierusalimschy/17e6e2ea-2b5d-4989-b0ee-0a979ef23be2/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "olivierbarais",
      "Name": "Olivier Barais"
    },
    {
      "Affiliation": "The Refactory, Inc.",
      "Bio": "Joseph Yoder (agilist, computer scientist, and pattern author) is the founder and principle of The Refactory, a company focused on software architecture, design, implementation, consulting and mentoring on all facets of software development. Joe serves as president of the board of The Hillside Group, a group dedicated to improving the quality of life of everyone who uses, builds, and encounters software systems. He is best known as an author of the Big Ball of Mud pattern, which illuminates many fallacies in software architecture. Joe teaches and mentors developers on agile and lean practices, architecture, building flexible systems, clean design, patterns, refactoring, and testing. Joe thinks software is still too hard to change. He wants to do something about this and believes that you can start solving this problem through the use of best practices (patterns) and by putting the ability to change software into the hands of the people with the knowledge to change it.\nJoe has recently been innovating, collecting and writing on the best practices and patterns on Being Agile at Quality. During this time he has given presentations, workshops, and keynotes at various conferences and in industrial settings. He has published (and continues writing and collecting) over two dozen patterns on this topic. Joe have also been working with organizations on the best practices for Agile Quality Assurance, helping them apply these techniques, and has shepherded Agile Experience reports on the topic. Variations of this some of this material has been presented as talks and workshop/tutorials at various conferences (Agile, JDD in Poland, SugarLoaf PLoP, Agile Portugal, AgileBrazil, YOW! in Australia, Saturn, and Israel Conference on Software Architecture) and to some of Joe\u2019s clients. In 2015 Joe won the New Directions award with a colleague at Saturn 2015, given to the presentation that best describes innovative new approaches and thought leadership in the application of architecture-centric practices for his presentation QA to AQ: Shifting from Quality Assurance to Agile Quality (see here).",
      "Key": "joeyoder",
      "Name": "Joe Yoder",
      "URL": "http://www.joeyoder.com/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/joeyoder/ab562551-ee84-45a7-9297-d12243ce3930/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "johnmccutchan",
      "Name": "John McCutchan"
    },
    {
      "Affiliation": "",
      "Key": "alessiostalla",
      "Name": "Alessio Stalla"
    },
    {
      "Affiliation": "TU Delft",
      "Key": "vladvergu",
      "Name": "Vlad Vergu"
    },
    {
      "Affiliation": "Open University of the Netherlands, The Netherlands",
      "Key": "bernardvangastel",
      "Name": "Bernard van Gastel"
    },
    {
      "Affiliation": "MIT CSAIL, USA",
      "Key": "henrylieberman",
      "Name": "Henry Lieberman"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "thomasthm",
      "Name": "Thomas ThÃ¼m",
      "URL": "http://wwwiti.cs.uni-magdeburg.de/~tthuem/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/thomasthm/40265175-8542-41e0-99da-32c82ed8da97/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ© Catholique de Louvain, Belgium",
      "Bio": "Kim Mens is full Professor in Computer Science at UCL university in Belgium, where he leads the RELEASeD research laboratory on software evolution and software development technology. He holds the degrees of Licentiate in Mathematics, Licentiate in Computer Science, and PhD in Computer Science. His main research interests include software development, software maintenance, software evolution and context-oriented programming with a particular emphasis on programming languages and tool support.",
      "Key": "kimmens",
      "Name": "Kim Mens",
      "URL": "http://www.uclouvain.be/kim.mens",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/kimmens/a1ea9374-cbfe-4029-804e-1aa6fe424a70/small.jpg"
    },
    {
      "Affiliation": "University of Montreal",
      "Key": "eugenesyriani",
      "Name": "Eugene Syriani",
      "URL": "http://www.iro.umontreal.ca/~syriani",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/eugenesyriani/9ab60fb5-0bb0-4e75-8978-f14d7c10fc0e/small.jpg"
    },
    {
      "Affiliation": "FractalConcept",
      "Key": "marcbattyani",
      "Name": "Marc Battyani"
    },
    {
      "Affiliation": "Slovak University of Technology in Bratislava",
      "Key": "michalbystricky",
      "Name": "Michal BystrickÃ½",
      "URL": "http://michal.useion.com/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/michalbystricky/aa7ab10f-df63-4968-a2ff-212ef41c889b/small.jpg"
    },
    {
      "Affiliation": "ABB Corporate Research, Germany",
      "Key": "somayehmalakuti1",
      "Name": "Somayeh Malakuti"
    },
    {
      "Affiliation": "",
      "Key": "romanradle",
      "Name": "Roman RÃ¤dle"
    },
    {
      "Affiliation": "CWI",
      "Key": "tijsvanderstorm",
      "Name": "Tijs van der Storm",
      "URL": "http://www.cwi.nl/~storm/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tijsvanderstorm/1c2fdfb2-3ce0-4e75-91af-35d9a48f56c5/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "albertshaqiri",
      "Name": "Albert Shaqiri"
    },
    {
      "Affiliation": "TU Wien",
      "Key": "manuelwimmer",
      "Name": "Manuel Wimmer",
      "URL": "https://www.big.tuwien.ac.at/staff/mwimmer",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/manuelwimmer/debab079-8b78-46af-8f24-2ce08001b86f/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "stevelosh",
      "Name": "Steve Losh"
    },
    {
      "Affiliation": "",
      "Key": "jameseagan",
      "Name": "James Eagan"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "andrewko",
      "Name": "Andrew J. Ko",
      "URL": "https://faculty.washington.edu/ajko/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/andrewko/8ffc5c92-dd97-415a-a0a3-43d5347b12af/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "carmentorreslopez",
      "Name": "Carmen Torres Lopez"
    },
    {
      "Affiliation": "",
      "Key": "riccardoscandariato",
      "Name": "Riccardo Scandariato"
    },
    {
      "Affiliation": "",
      "Key": "christophedetroyer",
      "Name": "Christophe De Troyer"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "jamesnoble",
      "Name": "James Noble",
      "URL": "http://homepages.mcs.vuw.ac.nz/~kjx/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jamesnoble/397692f7-f014-4032-a93d-bc522e882d80/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "leoniedreschlerfischer",
      "Name": "Leonie Dreschler-Fischer"
    },
    {
      "Affiliation": "HPI, Germany",
      "Key": "tobiaspape",
      "Name": "Tobias Pape",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/tobiaspape/05e8b3b4-2c7d-4349-af8a-15fa517a0036/small.jpg"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Bio": "Crista Lopes is a Professor of Informatics in the School of Information and Computer Sciences at the University of California, Irvine. Her research focuses on software engineering for large-scale data and systems. Early in her career, she was a founding member of the team at Xerox PARC that developed Aspect-Oriented Programming. Along with her research program, she is also a prolific software developer. Her open source contributions include being one of the core developers of OpenSimulator, a virtual world server. She is also a founder and consultant of Encitra, a company specializing in online virtual reality for early-stage sustainable urban redevelopment projects. She has a PhD from Northeastern University, and MS and BS degrees from Instituto Superior Tecnico in Portugal. She is the recipient of several National Science Foundation grants, including a prestigious CAREER Award. She claims to be the only person in the world who is both an ACM Distinguished Scientist and Ohloh Kudos Rank 9.",
      "Key": "cristalopes",
      "Name": "Crista Lopes",
      "URL": "https://www.ics.uci.edu/~lopes/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/cristalopes/ed41da29-84b7-4d15-950e-786bb0c7fb51/small.jpg"
    },
    {
      "Affiliation": "Ludwig Maximilians University Munich, Germany",
      "Key": "rolfhennicker",
      "Name": "Rolf Hennicker",
      "URL": "https://www.pst.ifi.lmu.de/Personen/team/hennicker"
    },
    {
      "Affiliation": "University of Kent, UK",
      "Bio": "Dr Dominic Orchard is a Lecturer in the School of Computing at the University of Kent, UK and he is a fellow of the SSI. His research interests are programming language design and semantics, mathematically structured programming, effect and coeffect systems, embedded domain-specific languages (esp. for parallelisation), and applying programming language research to computational science.",
      "Key": "dominicorchard",
      "Name": "Dominic Orchard",
      "URL": "http://dorchard.co.uk",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/dominicorchard/f448aa26-a342-457c-91a6-3f9525a759a3/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "coenderoover",
      "Name": "Coen De Roover",
      "URL": "http://soft.vub.ac.be/~cderoove/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/coenderoover/ef3a26a6-56c3-420e-b1ce-b4a0e6cd653e/small.jpg"
    },
    {
      "Affiliation": "Ericsson AB",
      "Key": "andreasschumacher",
      "Name": "Andreas Schumacher"
    },
    {
      "Affiliation": "",
      "Key": "marcoheisig",
      "Name": "Marco Heisig"
    },
    {
      "Affiliation": "IRIF, UniversitÃ© Paris Diderot",
      "Key": "vincentbalat",
      "Name": "Vincent Balat",
      "URL": "https://www.irif.fr/users/balat/index"
    },
    {
      "Affiliation": "Open University",
      "Key": "arikhadas",
      "Name": "Arik Hadas"
    },
    {
      "Affiliation": "",
      "Key": "lucaswiener",
      "Name": "Lucas Wiener"
    },
    {
      "Affiliation": "Department of Computer Science, University of Oxford",
      "Bio": "I am Professor of Computing in the Department of Computer Science at the University of Oxford. I am currently Director of the Software Engineering Programme, which offers part-time professional Masters\u2019 degrees in Software Engineering and in Software and Systems Security. I also lead the Algebra of Programming research group. I am Editor-in-Chief of the Journal of Functional Programming, Past Vice Chair of ACM SIGPLAN, Past Chair of IFIP WG2.1. Before taking up this post in 1999, I held lectureships at Oxford Brookes University and the University of Auckland, New Zealand.",
      "Key": "jeremygibbons",
      "Name": "Jeremy Gibbons",
      "URL": "http://www.cs.ox.ac.uk/jeremy.gibbons/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/jeremygibbons/17403e55-a926-41cf-ae21-08abecea187c/small.jpg"
    },
    {
      "Affiliation": "UniversitÃ© CÃ´te d'Azur, France",
      "Key": "sebastienmosser",
      "Name": "SÃ©bastien Mosser",
      "URL": "http://www.i3s.unice.fr/~mosser",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/sebastienmosser/4819928e-7f17-4d30-b12a-75b5faa84de9/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tomasekholm",
      "Name": "Tomas Ekholm"
    },
    {
      "Affiliation": "Universiteit Gent, Belgium",
      "Key": "christophescholliers",
      "Name": "Christophe Scholliers",
      "URL": "http://soft.vub.ac.be/~cfscholl/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/christophescholliers/349aebe2-c428-4d19-8b70-9e1665dea5e6/small.jpg"
    },
    {
      "Affiliation": "Kyushu University",
      "Key": "akirafukuda",
      "Name": "Akira Fukuda"
    },
    {
      "Affiliation": "Carl von Ossietzky UniversitÃ¤t Oldenburg / University of Oldenburg",
      "Bio": "Ola Mustafa is a PhD student in the University of Oldenburg since 2014, in the department of Very Large Business Applications (VLBA). She is a scholarship holder and her research is funded by the European Union (EU) within phoenix project - action 2. She completed her Bachelor (2006) and Masters (2009) studies in Jordan, from Balqaa Applied University (BAU). She worked as a software architect and webmaster for Consolidated Consultants (CC) and University of Petra (UOP).",
      "Key": "olamustafa",
      "Name": "Ola Mustafa",
      "URL": "https://www.uni-oldenburg.de/en/computingscience/vlba/team/scholarship-holders/ola-mustafa/",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/olamustafa/e32495c3-9996-443f-88e4-9597fee69912/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "martinmonperrus",
      "Name": "Martin Monperrus"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "tomoyukiaotani",
      "Name": "Tomoyuki Aotani",
      "URL": "https://taotani.wordpress.com/"
    },
    {
      "Affiliation": "Friedrich-Alexander-UniversitÃ¤t Erlangen-NÃ¼rnberg",
      "Key": "tobiasdistler",
      "Name": "Tobias Distler",
      "URL": "http://www4.cs.fau.de/~distler/"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Bio": "Adminstrator + support for conf.researchr.org.",
      "Key": "elmervanchastelet",
      "Name": "Elmer van Chastelet",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/elmervanchastelet/55ccc9a8-327f-423a-ae20-01391b394a05/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "jonasdebleser",
      "Name": "Jonas De Bleser"
    },
    {
      "Affiliation": "Iowa State University, USA",
      "Bio": "Hridesh Rajan is a full professor of computer science at Iowa State University, where he has been since 2005. Professor Rajan earned his MS and Ph.D. from the University of Virginia in 2004 and 2005 respectively. Professor Rajan\u2019s recent research and educational activities are aimed at decreasing the barrier to entry to data-driven sciences to broaden participation. His work on the Boa project is aimed at invention and refinement of cyberinfrastructures that democratize data-driven science. His work on the Midwest Big Data Summer School is experimenting with broadly accessible data science curricula. Professor Rajan was the founding general chair of the Midwest Big Data Summer School. Professor Rajan\u2019s research interests also include programming language design and implementation, and software engineering. He leads two research projects: Panini, whose goals are to enable modular reasoning about concurrent programs, and Boa that was established in Summer 2012 as an end-to-end infrastructure for analyzing large-scale software repositories and other open data sets. Professor Rajan is the director of the Laboratory for Software Design at Iowa State University, director of graduate admissions and recruitment for the computer science department, chair of the curriculum committee for the data science educational programs at Iowa State University, and chair of the information technology committee for the university. Professor Rajan serves on the steering committee of the Midwest Big Data Hub, a consortium of universities in the Midwest region of the United States focussed on promoting data science activities. Professor Rajan is a recipient of the National Science Foundation CAREER award in 2009, LAS Award for Early Achievement in Research in 2010, and a Big-12 Fellowship in 2012. He is a senior member of ACM, and a member of IEEE, and AAAS.",
      "Key": "hrideshrajan",
      "Name": "Hridesh Rajan",
      "URL": "http://www.cs.iastate.edu/~hridesh",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/hrideshrajan/fc72188d-cb88-4cc3-b2d0-62ef2a1c25b7/small.jpg"
    },
    {
      "Affiliation": "University of Bristol",
      "Key": "nicolaswu",
      "Name": "Nicolas Wu",
      "URL": "http://zenzike.com",
      "URLphoto": "http://2017.programming-conference.org/getProfileImage/nicolaswu/16dfcd93-2531-4de2-baee-d5a8d1a95a47/small.jpg"
    },
    {
      "Affiliation": "University of Luxembourg",
      "Key": "jacquesklein",
      "Name": "Jacques Klein"
    }
  ],
  "Sessions": [
    {
      "Abstract": "The &lt;Programming&gt; Posters track will take place in two different formats: \n\n  \n  an ACM Student Research Competition, which includes a poster session \n  a regular poster session, which isn\u2019t part of a competition (submissions due March 3rd NOW March 10th) \n\n\nThe ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at &lt;Programming&gt; before a panel of judges and conference attendees. The SRC gives visibility to not only up-and-coming young researchers, but also exposes them to the field of computer science research and its community. This competition also gives students an opportunity to discuss their research with experts in their field, get feedback, and to help them sharpen their communication and networking skills.\nThe poster session gives students the chance to present their research in a poster format and get feedback from other conference attendees, also practicing their communication skills. \nUPDATE: The poster session will take place Monday 17:00-19:00, April 3rd, during a reception.",
      "Chairs": ["jennifersartor"],
      "ChairsString": "Jennifer Sartor",
      "Day": "2017-04-05",
      "Items": ["programming-posters-src-presentations"],
      "Key": "69b7d3d4-ca99-439d-8265-adf6f5f32c8c",
      "Location": "D2.14",
      "Time": "12:15 - 13:30",
      "Title": "Posters: SRC Presentations",
      "Type": "SRC and Posters"
    },
    {
      "Abstract": "The &lt;Programming&gt; Posters track will take place in two different formats: \n\n  \n  an ACM Student Research Competition, which includes a poster session \n  a regular poster session, which isn\u2019t part of a competition (submissions due March 3rd NOW March 10th) \n\n\nThe ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at &lt;Programming&gt; before a panel of judges and conference attendees. The SRC gives visibility to not only up-and-coming young researchers, but also exposes them to the field of computer science research and its community. This competition also gives students an opportunity to discuss their research with experts in their field, get feedback, and to help them sharpen their communication and networking skills.\nThe poster session gives students the chance to present their research in a poster format and get feedback from other conference attendees, also practicing their communication skills. \nUPDATE: The poster session will take place Monday 17:00-19:00, April 3rd, during a reception.",
      "Chairs": ["jennifersartor"],
      "ChairsString": "Jennifer Sartor",
      "Day": "2017-04-03",
      "Items": ["programming-posters-poster-session"],
      "Key": "e5b03264-73ec-45c9-986c-0e5e741d6907",
      "Location": "Poster Area",
      "Time": "17:00 - 19:00",
      "Title": "Posters: Posters & SRC",
      "Type": "SRC and Posters"
    },
    {
      "Abstract": "We are delighted to announce the following keynote speakers:\nGilad Bracha, GoogleMatthew Flatt, University of Utah",
      "Day": "2017-04-05",
      "Items": ["programming-2017-keynotes-live-literate-programming"],
      "Key": "e16c6607-efd4-4ffe-9f34-6044b976cadb",
      "Location": "D0.07",
      "Time": "09:00 - 10:15",
      "Title": "Keynotes: Keynotes I",
      "Type": "Keynote Talks"
    },
    {
      "Abstract": "We are delighted to announce the following keynote speakers:\nGilad Bracha, GoogleMatthew Flatt, University of Utah",
      "Day": "2017-04-06",
      "Items": ["programming-2017-keynotes-how-racket-went-meta"],
      "Key": "620f10b3-34f6-4036-b81f-998d2a4c82d3",
      "Location": "D0.07",
      "Time": "09:00 - 10:15",
      "Title": "Keynotes: Keynotes II",
      "Type": "Keynote Talks"
    },
    {
      "Abstract": "The MoreVMs\u201917 workshop aims bring together programmers from industry and academy to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, or design and compilation strategies to target existing runtimes.",
      "Day": "2017-04-03",
      "Items": [
        "morevms-2017-papers-when-a-mouse-eats-a-python-smalltalk-style-development-for-python-and-ruby",
        "morevms-2017-papers-debugging-await-in-dart",
        "morevms-2017-papers-building-reusable-low-overhead-tooling-support-into-a-high-performance-polyglot-vm",
        "morevms-2017-papers-debugging-with-back-in-time-evaluation"
      ],
      "Key": "f5ce5ac6-1987-49ce-8bb2-91b7f37180eb",
      "Location": "D2.10",
      "Time": "09:00 - 10:30",
      "Title": "MoreVMs 2017 - : Better Tools and Tooling Infrastructure",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "Welcome to the 2nd Edition of the Programming Experience Workshop \n   \n \n\nNote: If you intend to participate in the PX/17 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance.\nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they discover they need to explore the domain and the nature of potential solutions\u2014they need exploratory programming.\nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code, especially when it\u2019s exploratory programming. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience?\nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming.\nFlyer\nhttp://programming-experience.org/px17/media/PX17CfP.pdf\nhttp://programming-experience.org/px17/\nUpcoming\nPX/17.2 at SPLASH 2017",
      "Chairs": [
        "richardpgabriel",
        "roberthirschfeld",
        "hidehikomasuhara"
      ],
      "ChairsString": "Richard P. Gabriel, Robert Hirschfeld and Hidehiko Masuhara",
      "Day": "2017-04-04",
      "Items": [
        "px-2017-runtime-metric-meets-developer-augmenting-source-code-with-runtime-information-to-make-programs-live",
        "px-2017-squeak-makes-a-good-python-debugger"
      ],
      "Key": "90791bb1-877a-4591-b8a3-1698dbc3a907",
      "Location": "D2.14",
      "Time": "13:30 - 15:00",
      "Title": "PX 2017 - : Session III",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The MoreVMs\u201917 workshop aims bring together programmers from industry and academy to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, or design and compilation strategies to target existing runtimes.",
      "Day": "2017-04-03",
      "Items": [
        "morevms-2017-papers-garbage-collection-as-a-joint-venture",
        "morevms-2017-papers-opencl-jit-compilation-for-dynamic-programming-languages",
        "morevms-2017-papers-an-extensible-virtual-machine-design-for-the-execution-of-high-level-languages-on-tagged-token-dataflow-machines",
        "morevms-2017-papers-moving-beyond-single-threaded-concurrency"
      ],
      "Key": "cab0ea69-6734-41cf-8752-c4631a7e0bde",
      "Location": "D2.10",
      "Time": "15:30 - 17:00",
      "Title": "MoreVMs 2017 - : GC, and Concurrency",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "External Website\nInformations about &laquo; Salon des Refus&eacute;s &raquo; can be found onhttps://refuses.github.io/",
      "Day": "2017-04-04",
      "Items": [
        "refuses-2017-what-can-software-learn-from-hypermedia-",
        "refuses-2017-review-what-can-software-learn-from-hypermedia-",
        "refuses-2017-avatars-and-their-embodiments-midi-devices-their-past-and-future",
        "refuses-2017-review-avatars-and-their-embodiments-midi-devices-their-past-and-future"
      ],
      "Key": "89138791-3546-484f-8776-aa31bc191056",
      "Location": "D2.10",
      "Time": "15:30 - 17:00",
      "Title": "Salon des RefusÃ©s 2017 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the 2nd Edition of the Programming Experience Workshop \n   \n \n\nNote: If you intend to participate in the PX/17 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance.\nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they discover they need to explore the domain and the nature of potential solutions\u2014they need exploratory programming.\nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code, especially when it\u2019s exploratory programming. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience?\nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming.\nFlyer\nhttp://programming-experience.org/px17/media/PX17CfP.pdf\nhttp://programming-experience.org/px17/\nUpcoming\nPX/17.2 at SPLASH 2017",
      "Chairs": [
        "richardpgabriel",
        "roberthirschfeld",
        "hidehikomasuhara"
      ],
      "ChairsString": "Richard P. Gabriel, Robert Hirschfeld and Hidehiko Masuhara",
      "Day": "2017-04-04",
      "Items": [
        "px-2017-arrival-and-workshop-introduction",
        "px-2017-live-data-structure-programming"
      ],
      "Key": "186a0793-f06c-4f25-9bcb-cf4d8d88339f",
      "Location": "D2.14",
      "Time": "09:00 - 10:30",
      "Title": "PX 2017 - : Session I",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the 2nd Edition of the Programming Experience Workshop \n   \n \n\nNote: If you intend to participate in the PX/17 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance.\nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they discover they need to explore the domain and the nature of potential solutions\u2014they need exploratory programming.\nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code, especially when it\u2019s exploratory programming. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience?\nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming.\nFlyer\nhttp://programming-experience.org/px17/media/PX17CfP.pdf\nhttp://programming-experience.org/px17/\nUpcoming\nPX/17.2 at SPLASH 2017",
      "Chairs": [
        "hidehikomasuhara",
        "richardpgabriel",
        "roberthirschfeld"
      ],
      "ChairsString": "Hidehiko Masuhara, Richard P. Gabriel and Robert Hirschfeld",
      "Day": "2017-04-04",
      "Items": ["px-2017-exploratory-development-of-data-intensive-applications"],
      "Key": "1d44b75b-0c43-48ab-96ff-156715f8ab71",
      "Location": "D2.14",
      "Time": "11:00 - 12:00",
      "Title": "PX 2017 - : Session II",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Modularity in Modelling Workshop\nExtending the time-honored practice of separation of concerns, Model-Driven Engineering (MDE) promotes the use of separate models to address the various concerns in the development of complex software-intensive systems. The main objective is to choose the right level of abstraction to modularize a concern, specify its properties and reason about the system under development depending on stakeholder and development needs. While some of these models can be defined with a single modelling language, a variety of heterogeneous models and languages are typically used in the various phases of software development. Furthermore, Domain-Specific Modelling Languages designed to address particular concerns are also increasingly used.\nDespite the power of abstraction of modelling, models of real-world problems and systems quickly grow to such an extent that managing the complexity by using proper modularization techniques becomes necessary. As a result, many (standard) modelling notations have been extended with aspect-oriented mechanisms and advanced composition operators to support advanced separation of concerns, to combine (possibly heterogeneous) models modularizing different concerns, to execute an application based on modularized models, and to reason over global properties of modularized models.\nThe Second International Modularity in Modelling Workshop (MOMO) brings together researchers and practitioners interested in the theoretical and practical challenges resulting from applying modularity, advanced separation of concerns, and advanced composition at the modelling level. It is intended to provide a forum for presenting new ideas and discussing the impact of the use of modularization in the context of MDE at different levels of abstraction.\nExternal Website\nInformation about MOMO 2017 can be found on:http://www.momo2017.ece.mcgill.ca/",
      "Day": "2017-04-03",
      "Items": [
        "momo-2017-papers-welcome-introduction",
        "momo-2017-papers-an-mde-approach-for-modular-program-analyses",
        "momo-2017-papers-a-modular-meta-model-for-security-solutions",
        "momo-2017-papers-weaving-rules-into-models-run-time-for-embedded-smart-systems"
      ],
      "Key": "6f028e8a-74bf-4b97-8d4f-d920fa293e93",
      "Location": "D2.13",
      "Time": "09:00 - 10:30",
      "Title": "MOMO 2017 - : Paper Session ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software developers and those involved with programming have long observed that certain patterns recur and endure across different applications and systems. The growing interest in Design Patterns, Architectural Patterns, Analysis Patterns, Pedagogical Patterns, Agile Patterns, and so on, represents an effort to catalog and better communicate knowledge, providing handbooks of proven solutions to common problems.\nMiniPLoP brings together researchers, educators, and practitioners whose interests span a remarkably broad range of topics and who share an interest in exploring the power of the pattern form. MiniPLoP invites you to add your expertise to the growing corpus of patterns. MiniPLoP focuses on improving the expression of patterns. You will have the opportunity to refine and extend your patterns or pattern ideas with the help from knowledgeable and sympathetic fellow pattern enthusiasts. You will also be able to discuss applications of patterns in industry and academia. Techniques for Pattern Mining will also be presented.\nHighlights include group discussions on patterns, an introduction to pattern writing, an international keynote, and a writers\u2019 workshop. This MiniPLoP at \u2039Programming\u203a 2017 has the goal to help beginners learn more about the pattern community.\nMiniPLoP Format\nWe will use writers\u2019 workshops, adapted from the workshops of literary circles, to provide highly concentrated feedback to authors. This format has been extensively used in software pattern conferences (the so called PLoP conferences) to improve patterns, as well as other writings associated with patterns, such as research papers on application of patterns. A description of writers\u2019 workshops in pattern conferences can be found at: http://www.europlop.net/content/conference-elements#writersworkshops\nMiniPLoP will include the following: \n \n A keynote address by Takashi Iba \n Introduction to writers\u2019 workshops \n Writers\u2019 workshop \n Pattern mining techniques \n\nOrganizers: Ademar Aguiar, Richard Gabriel, and Joseph Yoder\nFor more information contact: miniplop2017@hillside.net\nSchedule: Monday April 3rd in Room D2.09 \n \n 09:00\u201310:30: Opening (Richard, Joe, and Ademar) \u2013 Keynote (Takashi Iba) \n 10:30\u201311:00: coffee break \n 11:00\u201312:00: Pattern Mining Workshop (Takashi and Joe) \n 12:00\u201313:30: lunch \n 13:30\u201315:00: Games and Writers\u2019 Workshop (Richard) \n 15:00\u201315:30: coffee break \n 15:30\u201317:00: Writers\u2019 Workshop and Closing (Richard, Joe, and Ademar)",
      "Chairs": [
        "richardpgabriel",
        "joeyoder",
        "ademaraguiar"
      ],
      "ChairsString": "Richard P. Gabriel, Joe Yoder and Ademar Aguiar",
      "Day": "2017-04-03",
      "Items": [
        "miniplop-2017-writers-workshop",
        "miniplop-2017-closing"
      ],
      "Key": "8c054932-5701-477c-87e0-f039f8614aff",
      "Location": "D2.09",
      "Time": "15:30 - 17:00",
      "Title": "MiniPLoP 2017 - : Writers' Workshop and Closing",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts.\nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.\nInformation about Raincode Labs Compiler Coding Dojo can be found on:https://cocodo.github.io/",
      "Day": "2017-04-04",
      "Items": ["cocodo-2017-late-phases-of-compilation-in-rascal"],
      "Key": "b8ff67a9-bf87-4e9f-8c15-4ddfdf332456",
      "Location": "D2.13",
      "Time": "11:00 - 12:00",
      "Title": "CoCoDo 2017 - : Second Session",
      "Type": "Coding Dojo"
    },
    {
      "Abstract": "The landscape of computation platforms has changed dramatically in recent years. Emerging systems - such as wearable devices, smartphones, unmanned aerial vehicles, Internet of things, cloud computing servers, heterogeneous clusters, and data centers - pose a distinct set of system-oriented challenges ranging from data throughput, energy efficiency, security, real-time guarantees, to high performance. In the meantime, code quality, such as modularity or extensibility, remains a cornerstone in modern software engineering, bringing in crucial benefits such as modular reasoning, program understanding, and collaborative software development. Current methodologies and software development technologies should be revised in order to produce software to meet system-oriented goals, while preserving high internal code quality. The role of the Software Engineer is essential, having to be aware of the implications that each design, architecture and implementation decision has on the application system ecosystem.\nThis workshop is driven by one fundamental question: How does internal code quality interact with system-oriented goals? We welcome both positive and negative responses to this question. An example of the former would be modular reasoning systems specifically designed to promote system-oriented goals, whereas an example of the latter would be anti-patterns against system-oriented goals during software development.\nA preliminary program is available under the tab \u201cProgram\u201d.",
      "Chairs": ["christophbockisch"],
      "ChairsString": "Christoph Bockisch",
      "Day": "2017-04-04",
      "Items": [
        "pass-2017-discussion-ii",
        "pass-2017-wrap-up"
      ],
      "Key": "6440cb9b-7eeb-4df0-81df-bd9a8f1882cf",
      "Location": "D2.15",
      "Time": "15:30 - 17:00",
      "Title": "PASS 2017 - : Discussion",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts.\nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.\nInformation about Raincode Labs Compiler Coding Dojo can be found on:https://cocodo.github.io/",
      "Chairs": ["vadimzaytsev"],
      "ChairsString": "Vadim Zaytsev",
      "Day": "2017-04-04",
      "Items": [
        "cocodo-2017-live-programming-in-the-21st-century",
        "cocodo-2017-from-compilers-to-software-language-engineering",
        "cocodo-2017-funcons-as-the-future-of-compiler-compilers",
        "cocodo-2017-final-discussion-and-framework-pitches"
      ],
      "Key": "68dad6c4-6bcd-465b-b77c-f2ce3fa4dc8d",
      "Location": "D2.13",
      "Time": "15:30 - 17:00",
      "Title": "CoCoDo 2017 - : Fourth Session",
      "Type": "Coding Dojo"
    },
    {
      "Abstract": "Software developers and those involved with programming have long observed that certain patterns recur and endure across different applications and systems. The growing interest in Design Patterns, Architectural Patterns, Analysis Patterns, Pedagogical Patterns, Agile Patterns, and so on, represents an effort to catalog and better communicate knowledge, providing handbooks of proven solutions to common problems.\nMiniPLoP brings together researchers, educators, and practitioners whose interests span a remarkably broad range of topics and who share an interest in exploring the power of the pattern form. MiniPLoP invites you to add your expertise to the growing corpus of patterns. MiniPLoP focuses on improving the expression of patterns. You will have the opportunity to refine and extend your patterns or pattern ideas with the help from knowledgeable and sympathetic fellow pattern enthusiasts. You will also be able to discuss applications of patterns in industry and academia. Techniques for Pattern Mining will also be presented.\nHighlights include group discussions on patterns, an introduction to pattern writing, an international keynote, and a writers\u2019 workshop. This MiniPLoP at \u2039Programming\u203a 2017 has the goal to help beginners learn more about the pattern community.\nMiniPLoP Format\nWe will use writers\u2019 workshops, adapted from the workshops of literary circles, to provide highly concentrated feedback to authors. This format has been extensively used in software pattern conferences (the so called PLoP conferences) to improve patterns, as well as other writings associated with patterns, such as research papers on application of patterns. A description of writers\u2019 workshops in pattern conferences can be found at: http://www.europlop.net/content/conference-elements#writersworkshops\nMiniPLoP will include the following: \n \n A keynote address by Takashi Iba \n Introduction to writers\u2019 workshops \n Writers\u2019 workshop \n Pattern mining techniques \n\nOrganizers: Ademar Aguiar, Richard Gabriel, and Joseph Yoder\nFor more information contact: miniplop2017@hillside.net\nSchedule: Monday April 3rd in Room D2.09 \n \n 09:00\u201310:30: Opening (Richard, Joe, and Ademar) \u2013 Keynote (Takashi Iba) \n 10:30\u201311:00: coffee break \n 11:00\u201312:00: Pattern Mining Workshop (Takashi and Joe) \n 12:00\u201313:30: lunch \n 13:30\u201315:00: Games and Writers\u2019 Workshop (Richard) \n 15:00\u201315:30: coffee break \n 15:30\u201317:00: Writers\u2019 Workshop and Closing (Richard, Joe, and Ademar)",
      "Chairs": [
        "joeyoder",
        "takashiiba1"
      ],
      "ChairsString": "Joe Yoder and Takashi Iba",
      "Day": "2017-04-03",
      "Items": ["miniplop-2017-pattern-mining-workshop"],
      "Key": "60508cdc-a408-46ac-975a-d1dabf8f558d",
      "Location": "D2.09",
      "Time": "11:00 - 12:00",
      "Title": "MiniPLoP 2017 - : Pattern Mining Workshop",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Modularity in Modelling Workshop\nExtending the time-honored practice of separation of concerns, Model-Driven Engineering (MDE) promotes the use of separate models to address the various concerns in the development of complex software-intensive systems. The main objective is to choose the right level of abstraction to modularize a concern, specify its properties and reason about the system under development depending on stakeholder and development needs. While some of these models can be defined with a single modelling language, a variety of heterogeneous models and languages are typically used in the various phases of software development. Furthermore, Domain-Specific Modelling Languages designed to address particular concerns are also increasingly used.\nDespite the power of abstraction of modelling, models of real-world problems and systems quickly grow to such an extent that managing the complexity by using proper modularization techniques becomes necessary. As a result, many (standard) modelling notations have been extended with aspect-oriented mechanisms and advanced composition operators to support advanced separation of concerns, to combine (possibly heterogeneous) models modularizing different concerns, to execute an application based on modularized models, and to reason over global properties of modularized models.\nThe Second International Modularity in Modelling Workshop (MOMO) brings together researchers and practitioners interested in the theoretical and practical challenges resulting from applying modularity, advanced separation of concerns, and advanced composition at the modelling level. It is intended to provide a forum for presenting new ideas and discussing the impact of the use of modularization in the context of MDE at different levels of abstraction.\nExternal Website\nInformation about MOMO 2017 can be found on:http://www.momo2017.ece.mcgill.ca/",
      "Day": "2017-04-03",
      "Items": [
        "momo-2017-papers-from-use-case-driven-to-test-driven-modularization",
        "momo-2017-papers-discussions-morning-"
      ],
      "Key": "5fe5341a-1002-4102-a3a9-d783c87cae11",
      "Location": "D2.13",
      "Time": "11:00 - 12:00",
      "Title": "MOMO 2017 - : Presentation & Discussions",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts.\nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.\nInformation about Raincode Labs Compiler Coding Dojo can be found on:https://cocodo.github.io/",
      "Day": "2017-04-04",
      "Items": [
        "cocodo-2017-welcome-and-introductions",
        "cocodo-2017-attribute-grammars-for-dsls-for-music-and-3d-graphics"
      ],
      "Key": "bdf32583-1468-4543-bf60-7b599732edde",
      "Location": "D2.13",
      "Time": "09:00 - 10:30",
      "Title": "CoCoDo 2017 - : First Session",
      "Type": "Coding Dojo"
    },
    {
      "Abstract": "Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2017-04-04",
      "Items": [
        "proweb-2017-papers-immediate-mode-with-immutable-data",
        "proweb-2017-papers-modular-responsive-web-design-an-experience-report",
        "proweb-2017-papers-webstrates-for-the-future-web-",
        "proweb-2017-papers-group-discussion-on-collaboration-and-responsiveness-on-the-future-web"
      ],
      "Key": "453b0a1d-f91f-4524-9438-fcbbfb09cdf0",
      "Location": "D2.09",
      "Time": "13:30 - 15:00",
      "Title": "ProWeb 2017 - : Collaboration and responsiveness on the future web",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "The MoreVMs\u201917 workshop aims bring together programmers from industry and academy to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, or design and compilation strategies to target existing runtimes.",
      "Day": "2017-04-03",
      "Items": [
        "morevms-2017-papers-ocaml-java-running-ml-programs-on-a-jvm",
        "morevms-2017-papers-on-the-need-of-compilepretation-for-legacy-languages",
        "morevms-2017-papers-horizontal-profiling-for-virtual-machine-optimization-transplants",
        "morevms-2017-papers-processor-tracing-for-virtual-machines"
      ],
      "Key": "57e19e4d-e446-4443-bf21-de1f135c6c9f",
      "Location": "D2.10",
      "Time": "13:30 - 15:00",
      "Title": "MoreVMs 2017 - : Compilation and Optimization",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "OPTIMAL MODULARITY AND COMPOSITION:\nFROM THE PERSPECTIVE OF EMERGING TECHNOLOGIES AND ARCHITECTURES\n \nThe area of software technology is very dynamic\nMany new techniques and architectures have been introduced in the past decade: self-aware systems (adaptive, learning, optimizing, etc.), cyber-physical systems, event-based systems, emergent systems, hybrid-control systems, systems of systems, eco-systems, big-data management systems, cloud architectures, software-defined networks, distributed sensor systems, ubiquitous systems, secure and safe systems, fault-tolerant systems, high-performance systems are some examples. \nSoftware intensive systems are becoming extremely complex\nWith the emergence of new techniques and architectures, the complexity of software intensive systems continue to grow. To maximally profit from the recent advancements of technologies, however, software intensive systems must be designed, implemented, verified and maintained in a cost-effective way. Complexity is the major obstacle in accomplishing these objectives. As such, many \u201cgood ideas\u201d may never be realized in practice, unless complexity is managed.\nEffective modularity and composition\nEffective decomposition of systems into modules and/or composition of modules into systems are two major ways of reducing complexity. However, variations of the concepts in the application domains and increased dynamicity in runtime environments make traditional module-based abstractions less suitable. New ways of defining modules and composition mechanisms are necessary. Moreover, effective decomposition and composition require expressive quality models and efficient trade-off analysis techniques. To this aim, it is crucial to understand the modularity and composition needs of the emerging techniques and architectures. \nMuch has been accomplished in modularization and composition\nDuring the last two decades, extensive research work has been carried out to modularize and compose complex systems. For example, object-oriented programming, component-oriented programming, reflective-programming, aspect-oriented programming, context-oriented programming, model-driven engineering, feature-oriented programming, event-based programming and their variations have been introduced. Furthermore, incremental verification and testing techniques have been developed to assure correctly functioning systems. Obviously, to be able to address the problems of the future, we need to understand very well the techniques introduced in the past, in particular in terms of their potential benefits and their limitations.\nThis symposium aims to address the challenges of optimal decomposition and effective composition for emergent software techniques and architectures from two perspectives: (1) Assessment of the state-of-the-art techniques and methods, and (2) modularization and composition challenges in designing today\u2019s and tomorrow\u2019s software intensive systems.\nAbout Modularity \n \n Modularity website: http://modularity.info/ \n Modularity conference past editions: http://modularity.info/conference/",
      "Day": "2017-04-04",
      "Items": [
        "modularity-2017-talks-soc-spaces-indexes-for-composition",
        "modularity-2017-talks-formal-verification-for-cross-cutting-modularity"
      ],
      "Key": "9518f1b1-6171-47f4-a105-bc1d82c97f69",
      "Location": "D0.08",
      "Time": "13:30 - 15:00",
      "Title": "Modularity 2017 - Modularity Invited Talks: Session III",
      "Type": "Invited Talks"
    },
    {
      "Abstract": "Software developers and those involved with programming have long observed that certain patterns recur and endure across different applications and systems. The growing interest in Design Patterns, Architectural Patterns, Analysis Patterns, Pedagogical Patterns, Agile Patterns, and so on, represents an effort to catalog and better communicate knowledge, providing handbooks of proven solutions to common problems.\nMiniPLoP brings together researchers, educators, and practitioners whose interests span a remarkably broad range of topics and who share an interest in exploring the power of the pattern form. MiniPLoP invites you to add your expertise to the growing corpus of patterns. MiniPLoP focuses on improving the expression of patterns. You will have the opportunity to refine and extend your patterns or pattern ideas with the help from knowledgeable and sympathetic fellow pattern enthusiasts. You will also be able to discuss applications of patterns in industry and academia. Techniques for Pattern Mining will also be presented.\nHighlights include group discussions on patterns, an introduction to pattern writing, an international keynote, and a writers\u2019 workshop. This MiniPLoP at \u2039Programming\u203a 2017 has the goal to help beginners learn more about the pattern community.\nMiniPLoP Format\nWe will use writers\u2019 workshops, adapted from the workshops of literary circles, to provide highly concentrated feedback to authors. This format has been extensively used in software pattern conferences (the so called PLoP conferences) to improve patterns, as well as other writings associated with patterns, such as research papers on application of patterns. A description of writers\u2019 workshops in pattern conferences can be found at: http://www.europlop.net/content/conference-elements#writersworkshops\nMiniPLoP will include the following: \n \n A keynote address by Takashi Iba \n Introduction to writers\u2019 workshops \n Writers\u2019 workshop \n Pattern mining techniques \n\nOrganizers: Ademar Aguiar, Richard Gabriel, and Joseph Yoder\nFor more information contact: miniplop2017@hillside.net\nSchedule: Monday April 3rd in Room D2.09 \n \n 09:00\u201310:30: Opening (Richard, Joe, and Ademar) \u2013 Keynote (Takashi Iba) \n 10:30\u201311:00: coffee break \n 11:00\u201312:00: Pattern Mining Workshop (Takashi and Joe) \n 12:00\u201313:30: lunch \n 13:30\u201315:00: Games and Writers\u2019 Workshop (Richard) \n 15:00\u201315:30: coffee break \n 15:30\u201317:00: Writers\u2019 Workshop and Closing (Richard, Joe, and Ademar)",
      "Chairs": ["richardpgabriel"],
      "ChairsString": "Richard P. Gabriel",
      "Day": "2017-04-03",
      "Items": ["miniplop-2017-writers-workshop-and-games"],
      "Key": "bd7f4fcb-5d5e-48c5-84a3-34ebcfe5b092",
      "Location": "D2.09",
      "Time": "13:30 - 15:00",
      "Title": "MiniPLoP 2017 - : Writers' Workshop and Games",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "External Website\nInformations about &laquo; Salon des Refus&eacute;s &raquo; can be found onhttps://refuses.github.io/",
      "Day": "2017-04-04",
      "Items": [
        "refuses-2017-welcome-and-workshop-introduction",
        "refuses-2017-programming-is-writing-is-programming",
        "refuses-2017-review-programming-is-writing-is-programming",
        "refuses-2017-code-is-not-just-text-current-code-editors-are-inadequate-tools",
        "refuses-2017-review-code-is-not-just-text-current-code-editors-are-inadequate-tools"
      ],
      "Key": "78a77e37-7288-40e4-8f52-c93fd6452b96",
      "Location": "D2.10",
      "Time": "09:00 - 10:30",
      "Title": "Salon des RefusÃ©s 2017 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OPTIMAL MODULARITY AND COMPOSITION:\nFROM THE PERSPECTIVE OF EMERGING TECHNOLOGIES AND ARCHITECTURES\n \nThe area of software technology is very dynamic\nMany new techniques and architectures have been introduced in the past decade: self-aware systems (adaptive, learning, optimizing, etc.), cyber-physical systems, event-based systems, emergent systems, hybrid-control systems, systems of systems, eco-systems, big-data management systems, cloud architectures, software-defined networks, distributed sensor systems, ubiquitous systems, secure and safe systems, fault-tolerant systems, high-performance systems are some examples. \nSoftware intensive systems are becoming extremely complex\nWith the emergence of new techniques and architectures, the complexity of software intensive systems continue to grow. To maximally profit from the recent advancements of technologies, however, software intensive systems must be designed, implemented, verified and maintained in a cost-effective way. Complexity is the major obstacle in accomplishing these objectives. As such, many \u201cgood ideas\u201d may never be realized in practice, unless complexity is managed.\nEffective modularity and composition\nEffective decomposition of systems into modules and/or composition of modules into systems are two major ways of reducing complexity. However, variations of the concepts in the application domains and increased dynamicity in runtime environments make traditional module-based abstractions less suitable. New ways of defining modules and composition mechanisms are necessary. Moreover, effective decomposition and composition require expressive quality models and efficient trade-off analysis techniques. To this aim, it is crucial to understand the modularity and composition needs of the emerging techniques and architectures. \nMuch has been accomplished in modularization and composition\nDuring the last two decades, extensive research work has been carried out to modularize and compose complex systems. For example, object-oriented programming, component-oriented programming, reflective-programming, aspect-oriented programming, context-oriented programming, model-driven engineering, feature-oriented programming, event-based programming and their variations have been introduced. Furthermore, incremental verification and testing techniques have been developed to assure correctly functioning systems. Obviously, to be able to address the problems of the future, we need to understand very well the techniques introduced in the past, in particular in terms of their potential benefits and their limitations.\nThis symposium aims to address the challenges of optimal decomposition and effective composition for emergent software techniques and architectures from two perspectives: (1) Assessment of the state-of-the-art techniques and methods, and (2) modularization and composition challenges in designing today\u2019s and tomorrow\u2019s software intensive systems.\nAbout Modularity \n \n Modularity website: http://modularity.info/ \n Modularity conference past editions: http://modularity.info/conference/",
      "Day": "2017-04-04",
      "Items": [
        "modularity-2017-talks-to-be-announced-1-",
        "modularity-2017-talks-some-history-and-future-perspectives-on-the-modularity-challenges-for-large-and-complex-software-systems"
      ],
      "Key": "4ece0478-dbad-424d-a3cd-da5535bf5b7d",
      "Location": "D0.08",
      "Time": "09:00 - 10:30",
      "Title": "Modularity 2017 - Modularity Invited Talks: Session I",
      "Type": "Invited Talks"
    },
    {
      "Abstract": "Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2017-04-04",
      "Items": [
        "proweb-2017-papers-experience-report-functional-reactive-programming-and-the-dom",
        "proweb-2017-papers-enriching-the-internet-by-acting-and-reacting",
        "proweb-2017-papers-group-discussion-on-the-future-of-reactivity"
      ],
      "Key": "a535e744-acf3-4089-83d0-37bd6c8d141d",
      "Location": "D2.09",
      "Time": "11:00 - 12:00",
      "Title": "ProWeb 2017 - : Reactivity on the future web",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "Modularity in Modelling Workshop\nExtending the time-honored practice of separation of concerns, Model-Driven Engineering (MDE) promotes the use of separate models to address the various concerns in the development of complex software-intensive systems. The main objective is to choose the right level of abstraction to modularize a concern, specify its properties and reason about the system under development depending on stakeholder and development needs. While some of these models can be defined with a single modelling language, a variety of heterogeneous models and languages are typically used in the various phases of software development. Furthermore, Domain-Specific Modelling Languages designed to address particular concerns are also increasingly used.\nDespite the power of abstraction of modelling, models of real-world problems and systems quickly grow to such an extent that managing the complexity by using proper modularization techniques becomes necessary. As a result, many (standard) modelling notations have been extended with aspect-oriented mechanisms and advanced composition operators to support advanced separation of concerns, to combine (possibly heterogeneous) models modularizing different concerns, to execute an application based on modularized models, and to reason over global properties of modularized models.\nThe Second International Modularity in Modelling Workshop (MOMO) brings together researchers and practitioners interested in the theoretical and practical challenges resulting from applying modularity, advanced separation of concerns, and advanced composition at the modelling level. It is intended to provide a forum for presenting new ideas and discussing the impact of the use of modularization in the context of MDE at different levels of abstraction.\nExternal Website\nInformation about MOMO 2017 can be found on:http://www.momo2017.ece.mcgill.ca/",
      "Day": "2017-04-03",
      "Items": ["momo-2017-papers-discussion-afternoon-"],
      "Key": "ae03df51-a3fd-4485-9f82-50be2d0db745",
      "Location": "D2.13",
      "Time": "15:30 - 17:00",
      "Title": "MOMO 2017 - : Discussion Session",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2017-04-04",
      "Items": [
        "proweb-2017-papers-welcome-to-proweb",
        "proweb-2017-papers-keynote",
        "proweb-2017-papers-group-discussion-on-common-goals"
      ],
      "Key": "dfd5f92e-895a-48c1-8f05-e163dc0df76e",
      "Location": "D2.09",
      "Time": "09:00 - 10:30",
      "Title": "ProWeb 2017 - : Opening and Keynote",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts.\nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.\nInformation about Raincode Labs Compiler Coding Dojo can be found on:https://cocodo.github.io/",
      "Day": "2017-04-04",
      "Items": ["cocodo-2017-fractals-in-racket"],
      "Key": "dd25897c-b30d-47ff-8514-4bcba8ad76dc",
      "Location": "D2.13",
      "Time": "13:30 - 15:00",
      "Title": "CoCoDo 2017 - : Third Session",
      "Type": "Coding Dojo"
    },
    {
      "Abstract": "The landscape of computation platforms has changed dramatically in recent years. Emerging systems - such as wearable devices, smartphones, unmanned aerial vehicles, Internet of things, cloud computing servers, heterogeneous clusters, and data centers - pose a distinct set of system-oriented challenges ranging from data throughput, energy efficiency, security, real-time guarantees, to high performance. In the meantime, code quality, such as modularity or extensibility, remains a cornerstone in modern software engineering, bringing in crucial benefits such as modular reasoning, program understanding, and collaborative software development. Current methodologies and software development technologies should be revised in order to produce software to meet system-oriented goals, while preserving high internal code quality. The role of the Software Engineer is essential, having to be aware of the implications that each design, architecture and implementation decision has on the application system ecosystem.\nThis workshop is driven by one fundamental question: How does internal code quality interact with system-oriented goals? We welcome both positive and negative responses to this question. An example of the former would be modular reasoning systems specifically designed to promote system-oriented goals, whereas an example of the latter would be anti-patterns against system-oriented goals during software development.\nA preliminary program is available under the tab \u201cProgram\u201d.",
      "Chairs": ["christophbockisch"],
      "ChairsString": "Christoph Bockisch",
      "Day": "2017-04-04",
      "Items": ["pass-2017-invited-talk-iii"],
      "Key": "d9ee66ba-47a7-4054-b9b2-945d46590caf",
      "Location": "D2.15",
      "Time": "11:00 - 12:00",
      "Title": "PASS 2017 - : Invited Talk",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OPTIMAL MODULARITY AND COMPOSITION:\nFROM THE PERSPECTIVE OF EMERGING TECHNOLOGIES AND ARCHITECTURES\n \nThe area of software technology is very dynamic\nMany new techniques and architectures have been introduced in the past decade: self-aware systems (adaptive, learning, optimizing, etc.), cyber-physical systems, event-based systems, emergent systems, hybrid-control systems, systems of systems, eco-systems, big-data management systems, cloud architectures, software-defined networks, distributed sensor systems, ubiquitous systems, secure and safe systems, fault-tolerant systems, high-performance systems are some examples. \nSoftware intensive systems are becoming extremely complex\nWith the emergence of new techniques and architectures, the complexity of software intensive systems continue to grow. To maximally profit from the recent advancements of technologies, however, software intensive systems must be designed, implemented, verified and maintained in a cost-effective way. Complexity is the major obstacle in accomplishing these objectives. As such, many \u201cgood ideas\u201d may never be realized in practice, unless complexity is managed.\nEffective modularity and composition\nEffective decomposition of systems into modules and/or composition of modules into systems are two major ways of reducing complexity. However, variations of the concepts in the application domains and increased dynamicity in runtime environments make traditional module-based abstractions less suitable. New ways of defining modules and composition mechanisms are necessary. Moreover, effective decomposition and composition require expressive quality models and efficient trade-off analysis techniques. To this aim, it is crucial to understand the modularity and composition needs of the emerging techniques and architectures. \nMuch has been accomplished in modularization and composition\nDuring the last two decades, extensive research work has been carried out to modularize and compose complex systems. For example, object-oriented programming, component-oriented programming, reflective-programming, aspect-oriented programming, context-oriented programming, model-driven engineering, feature-oriented programming, event-based programming and their variations have been introduced. Furthermore, incremental verification and testing techniques have been developed to assure correctly functioning systems. Obviously, to be able to address the problems of the future, we need to understand very well the techniques introduced in the past, in particular in terms of their potential benefits and their limitations.\nThis symposium aims to address the challenges of optimal decomposition and effective composition for emergent software techniques and architectures from two perspectives: (1) Assessment of the state-of-the-art techniques and methods, and (2) modularization and composition challenges in designing today\u2019s and tomorrow\u2019s software intensive systems.\nAbout Modularity \n \n Modularity website: http://modularity.info/ \n Modularity conference past editions: http://modularity.info/conference/",
      "Day": "2017-04-04",
      "Items": [
        "modularity-2017-talks-to-be-announced-2-",
        "modularity-2017-talks-modularity-for-system-of-systems"
      ],
      "Key": "5dd9612b-fdc8-4cb1-8933-54dbcef53157",
      "Location": "D0.08",
      "Time": "11:00 - 12:00",
      "Title": "Modularity 2017 - Modularity Invited Talks: Session II",
      "Type": "Invited Talks"
    },
    {
      "Abstract": "Welcome to the 2nd Edition of the Programming Experience Workshop \n   \n \n\nNote: If you intend to participate in the PX/17 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance.\nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they discover they need to explore the domain and the nature of potential solutions\u2014they need exploratory programming.\nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code, especially when it\u2019s exploratory programming. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience?\nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming.\nFlyer\nhttp://programming-experience.org/px17/media/PX17CfP.pdf\nhttp://programming-experience.org/px17/\nUpcoming\nPX/17.2 at SPLASH 2017",
      "Chairs": [
        "richardpgabriel",
        "roberthirschfeld",
        "hidehikomasuhara"
      ],
      "ChairsString": "Richard P. Gabriel, Robert Hirschfeld and Hidehiko Masuhara",
      "Day": "2017-04-04",
      "Items": [
        "px-2017-user-generated-variables-streamlined-interaction-design-for-feature-requests-and-implementations",
        "px-2017-open-discussion-and-feedback"
      ],
      "Key": "30e96f6d-c465-4879-9556-899ae8b9491b",
      "Location": "D2.14",
      "Time": "15:30 - 17:00",
      "Title": "PX 2017 - : Session IV",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "External Website\nInformations about &laquo; Salon des Refus&eacute;s &raquo; can be found onhttps://refuses.github.io/",
      "Day": "2017-04-04",
      "Items": [
        "refuses-2017-principles-of-antifragile-software",
        "refuses-2017-review-principles-of-antifragile-software",
        "refuses-2017-a-certain-tendency-of-the-database-community",
        "refuses-2017-review-a-certain-tendency-of-the-database-community"
      ],
      "Key": "c4b5b9f7-988e-443b-a4a7-0b301cfee010",
      "Location": "D2.10",
      "Time": "11:00 - 12:00",
      "Title": "Salon des RefusÃ©s 2017 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2017-04-04",
      "Items": [
        "proweb-2017-papers-towards-the-web-for-virtual-being",
        "proweb-2017-papers-optimizing-economics-of-microservices-by-planning-for-granularity-level",
        "proweb-2017-papers-group-discussion-on-the-future-of-tooling-and-virtuality"
      ],
      "Key": "4a42e742-8365-44b8-a0ed-e8738c330122",
      "Location": "D2.09",
      "Time": "15:30 - 17:00",
      "Title": "ProWeb 2017 - : Tooling for and virtuality of the future web",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "Software developers and those involved with programming have long observed that certain patterns recur and endure across different applications and systems. The growing interest in Design Patterns, Architectural Patterns, Analysis Patterns, Pedagogical Patterns, Agile Patterns, and so on, represents an effort to catalog and better communicate knowledge, providing handbooks of proven solutions to common problems.\nMiniPLoP brings together researchers, educators, and practitioners whose interests span a remarkably broad range of topics and who share an interest in exploring the power of the pattern form. MiniPLoP invites you to add your expertise to the growing corpus of patterns. MiniPLoP focuses on improving the expression of patterns. You will have the opportunity to refine and extend your patterns or pattern ideas with the help from knowledgeable and sympathetic fellow pattern enthusiasts. You will also be able to discuss applications of patterns in industry and academia. Techniques for Pattern Mining will also be presented.\nHighlights include group discussions on patterns, an introduction to pattern writing, an international keynote, and a writers\u2019 workshop. This MiniPLoP at \u2039Programming\u203a 2017 has the goal to help beginners learn more about the pattern community.\nMiniPLoP Format\nWe will use writers\u2019 workshops, adapted from the workshops of literary circles, to provide highly concentrated feedback to authors. This format has been extensively used in software pattern conferences (the so called PLoP conferences) to improve patterns, as well as other writings associated with patterns, such as research papers on application of patterns. A description of writers\u2019 workshops in pattern conferences can be found at: http://www.europlop.net/content/conference-elements#writersworkshops\nMiniPLoP will include the following: \n \n A keynote address by Takashi Iba \n Introduction to writers\u2019 workshops \n Writers\u2019 workshop \n Pattern mining techniques \n\nOrganizers: Ademar Aguiar, Richard Gabriel, and Joseph Yoder\nFor more information contact: miniplop2017@hillside.net\nSchedule: Monday April 3rd in Room D2.09 \n \n 09:00\u201310:30: Opening (Richard, Joe, and Ademar) \u2013 Keynote (Takashi Iba) \n 10:30\u201311:00: coffee break \n 11:00\u201312:00: Pattern Mining Workshop (Takashi and Joe) \n 12:00\u201313:30: lunch \n 13:30\u201315:00: Games and Writers\u2019 Workshop (Richard) \n 15:00\u201315:30: coffee break \n 15:30\u201317:00: Writers\u2019 Workshop and Closing (Richard, Joe, and Ademar)",
      "Chairs": [
        "richardpgabriel",
        "ademaraguiar",
        "joeyoder"
      ],
      "ChairsString": "Richard P. Gabriel, Ademar Aguiar and Joe Yoder",
      "Day": "2017-04-03",
      "Items": [
        "miniplop-2017-opening",
        "miniplop-2017-keynote"
      ],
      "Key": "4a3a02c9-fa95-4dba-b7d6-2ebabd660aef",
      "Location": "D2.09",
      "Time": "09:00 - 10:30",
      "Title": "MiniPLoP 2017 - : Opening and Keynote",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OPTIMAL MODULARITY AND COMPOSITION:\nFROM THE PERSPECTIVE OF EMERGING TECHNOLOGIES AND ARCHITECTURES\n \nThe area of software technology is very dynamic\nMany new techniques and architectures have been introduced in the past decade: self-aware systems (adaptive, learning, optimizing, etc.), cyber-physical systems, event-based systems, emergent systems, hybrid-control systems, systems of systems, eco-systems, big-data management systems, cloud architectures, software-defined networks, distributed sensor systems, ubiquitous systems, secure and safe systems, fault-tolerant systems, high-performance systems are some examples. \nSoftware intensive systems are becoming extremely complex\nWith the emergence of new techniques and architectures, the complexity of software intensive systems continue to grow. To maximally profit from the recent advancements of technologies, however, software intensive systems must be designed, implemented, verified and maintained in a cost-effective way. Complexity is the major obstacle in accomplishing these objectives. As such, many \u201cgood ideas\u201d may never be realized in practice, unless complexity is managed.\nEffective modularity and composition\nEffective decomposition of systems into modules and/or composition of modules into systems are two major ways of reducing complexity. However, variations of the concepts in the application domains and increased dynamicity in runtime environments make traditional module-based abstractions less suitable. New ways of defining modules and composition mechanisms are necessary. Moreover, effective decomposition and composition require expressive quality models and efficient trade-off analysis techniques. To this aim, it is crucial to understand the modularity and composition needs of the emerging techniques and architectures. \nMuch has been accomplished in modularization and composition\nDuring the last two decades, extensive research work has been carried out to modularize and compose complex systems. For example, object-oriented programming, component-oriented programming, reflective-programming, aspect-oriented programming, context-oriented programming, model-driven engineering, feature-oriented programming, event-based programming and their variations have been introduced. Furthermore, incremental verification and testing techniques have been developed to assure correctly functioning systems. Obviously, to be able to address the problems of the future, we need to understand very well the techniques introduced in the past, in particular in terms of their potential benefits and their limitations.\nThis symposium aims to address the challenges of optimal decomposition and effective composition for emergent software techniques and architectures from two perspectives: (1) Assessment of the state-of-the-art techniques and methods, and (2) modularization and composition challenges in designing today\u2019s and tomorrow\u2019s software intensive systems.\nAbout Modularity \n \n Modularity website: http://modularity.info/ \n Modularity conference past editions: http://modularity.info/conference/",
      "Day": "2017-04-04",
      "Items": [
        "modularity-2017-talks-modularity-from-the-trenches",
        "modularity-2017-talks-concern-oriented-reuse-combine-mde-aspect-orientation-and-software-product-lines-to-create-generic-crosscutting-yet-modular-units-of-reuse"
      ],
      "Key": "19acb908-9c86-45d2-bb80-b63f2f09f07b",
      "Location": "D0.08",
      "Time": "15:30 - 17:00",
      "Title": "Modularity 2017 - Modularity Invited Talks: Session IV",
      "Type": "Invited Talks"
    },
    {
      "Abstract": "The landscape of computation platforms has changed dramatically in recent years. Emerging systems - such as wearable devices, smartphones, unmanned aerial vehicles, Internet of things, cloud computing servers, heterogeneous clusters, and data centers - pose a distinct set of system-oriented challenges ranging from data throughput, energy efficiency, security, real-time guarantees, to high performance. In the meantime, code quality, such as modularity or extensibility, remains a cornerstone in modern software engineering, bringing in crucial benefits such as modular reasoning, program understanding, and collaborative software development. Current methodologies and software development technologies should be revised in order to produce software to meet system-oriented goals, while preserving high internal code quality. The role of the Software Engineer is essential, having to be aware of the implications that each design, architecture and implementation decision has on the application system ecosystem.\nThis workshop is driven by one fundamental question: How does internal code quality interact with system-oriented goals? We welcome both positive and negative responses to this question. An example of the former would be modular reasoning systems specifically designed to promote system-oriented goals, whereas an example of the latter would be anti-patterns against system-oriented goals during software development.\nA preliminary program is available under the tab \u201cProgram\u201d.",
      "Chairs": ["hidehikomasuhara"],
      "ChairsString": "Hidehiko Masuhara",
      "Day": "2017-04-04",
      "Items": [
        "pass-2017-invited-talk-2",
        "pass-2017-discussion"
      ],
      "Key": "2d22a7e4-57ca-4c41-9f95-d75f6b169da0",
      "Location": "D2.15",
      "Time": "13:30 - 15:00",
      "Title": "PASS 2017 - : Invited Talk & Discussion",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "External Website\nInformations about &laquo; Salon des Refus&eacute;s &raquo; can be found onhttps://refuses.github.io/",
      "Day": "2017-04-04",
      "Items": [
        "refuses-2017-the-act-of-computer-programming-in-science",
        "refuses-2017-review-the-act-of-computer-programming-in-science",
        "refuses-2017-from-software-creationism-to-software-evolutionism",
        "refuses-2017-review-from-software-creationism-to-software-evolutionism"
      ],
      "Key": "3b88e2fb-9f0b-4f40-913d-fd6f0a67cdb6",
      "Location": "D2.10",
      "Time": "13:30 - 15:00",
      "Title": "Salon des RefusÃ©s 2017 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Modularity in Modelling Workshop\nExtending the time-honored practice of separation of concerns, Model-Driven Engineering (MDE) promotes the use of separate models to address the various concerns in the development of complex software-intensive systems. The main objective is to choose the right level of abstraction to modularize a concern, specify its properties and reason about the system under development depending on stakeholder and development needs. While some of these models can be defined with a single modelling language, a variety of heterogeneous models and languages are typically used in the various phases of software development. Furthermore, Domain-Specific Modelling Languages designed to address particular concerns are also increasingly used.\nDespite the power of abstraction of modelling, models of real-world problems and systems quickly grow to such an extent that managing the complexity by using proper modularization techniques becomes necessary. As a result, many (standard) modelling notations have been extended with aspect-oriented mechanisms and advanced composition operators to support advanced separation of concerns, to combine (possibly heterogeneous) models modularizing different concerns, to execute an application based on modularized models, and to reason over global properties of modularized models.\nThe Second International Modularity in Modelling Workshop (MOMO) brings together researchers and practitioners interested in the theoretical and practical challenges resulting from applying modularity, advanced separation of concerns, and advanced composition at the modelling level. It is intended to provide a forum for presenting new ideas and discussing the impact of the use of modularization in the context of MDE at different levels of abstraction.\nExternal Website\nInformation about MOMO 2017 can be found on:http://www.momo2017.ece.mcgill.ca/",
      "Day": "2017-04-03",
      "Items": ["momo-2017-papers-invited-talk"],
      "Key": "478cffdc-52fd-4627-9ea0-5ff6631de527",
      "Location": "D2.13",
      "Time": "13:30 - 15:00",
      "Title": "MOMO 2017 - : Invited Talk",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The MoreVMs\u201917 workshop aims bring together programmers from industry and academy to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, or design and compilation strategies to target existing runtimes.",
      "Day": "2017-04-03",
      "Items": [
        "morevms-2017-papers-toward-virtual-machine-adaption-rather-than-reimplementation",
        "morevms-2017-papers-a-readable-and-executable-semantics-of-grace"
      ],
      "Key": "3e93bb1e-9821-491d-8434-391b1483dd60",
      "Location": "D2.10",
      "Time": "11:00 - 12:00",
      "Title": "MoreVMs 2017 - : New Ways to Language Implementation",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "The landscape of computation platforms has changed dramatically in recent years. Emerging systems - such as wearable devices, smartphones, unmanned aerial vehicles, Internet of things, cloud computing servers, heterogeneous clusters, and data centers - pose a distinct set of system-oriented challenges ranging from data throughput, energy efficiency, security, real-time guarantees, to high performance. In the meantime, code quality, such as modularity or extensibility, remains a cornerstone in modern software engineering, bringing in crucial benefits such as modular reasoning, program understanding, and collaborative software development. Current methodologies and software development technologies should be revised in order to produce software to meet system-oriented goals, while preserving high internal code quality. The role of the Software Engineer is essential, having to be aware of the implications that each design, architecture and implementation decision has on the application system ecosystem.\nThis workshop is driven by one fundamental question: How does internal code quality interact with system-oriented goals? We welcome both positive and negative responses to this question. An example of the former would be modular reasoning systems specifically designed to promote system-oriented goals, whereas an example of the latter would be anti-patterns against system-oriented goals during software development.\nA preliminary program is available under the tab \u201cProgram\u201d.",
      "Chairs": ["sasamisailovic"],
      "ChairsString": "Sasa Misailovic",
      "Day": "2017-04-04",
      "Items": [
        "pass-2017-invited-talk",
        "pass-2017-abstractions-for-distributed-event-driven-systems"
      ],
      "Key": "265876c3-c356-4ef9-beb3-a0778d35ea82",
      "Location": "D2.15",
      "Time": "09:00 - 10:30",
      "Title": "PASS 2017 - : Invited Talk & Paper Presentation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We have four exciting social events planned out for you; be sure to take a look: \n \n Monday: Belgian beer reception \n Tuesday: Reception at the Musical Instruments Museum \n Wednesday: Banquet at the Museum of Natural Sciences \n Thursday: Brussels waffle social",
      "Day": "2017-04-06",
      "Items": ["programming-2017-social-events-brussels-waffle-social"],
      "Key": "6f46570d-1468-4ca5-8d39-9671647c5d2e",
      "Location": "ï»¿D - 2nd floor",
      "Time": "17:00 - 18:00",
      "Title": "Social Events: Brussels waffle social",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We have four exciting social events planned out for you; be sure to take a look: \n \n Monday: Belgian beer reception \n Tuesday: Reception at the Musical Instruments Museum \n Wednesday: Banquet at the Museum of Natural Sciences \n Thursday: Brussels waffle social",
      "Day": "2017-04-04",
      "Items": ["programming-2017-social-events-reception"],
      "Key": "cd4e94ff-1a55-4be2-9e00-402fd9f9e2c7",
      "Location": "Musical Instruments Museum",
      "Time": "17:30 - 20:00",
      "Title": "Social Events: Reception",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We have four exciting social events planned out for you; be sure to take a look: \n \n Monday: Belgian beer reception \n Tuesday: Reception at the Musical Instruments Museum \n Wednesday: Banquet at the Museum of Natural Sciences \n Thursday: Brussels waffle social",
      "Day": "2017-04-05",
      "Items": ["programming-2017-social-events-banquet"],
      "Key": "a41bb385-b8b3-4594-839c-8286abe31c50",
      "Location": "Museum of Natural Sciences",
      "Time": "18:10 - 22:00",
      "Title": "Social Events: Banquet",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We have four exciting social events planned out for you; be sure to take a look: \n \n Monday: Belgian beer reception \n Tuesday: Reception at the Musical Instruments Museum \n Wednesday: Banquet at the Museum of Natural Sciences \n Thursday: Brussels waffle social",
      "Day": "2017-04-03",
      "Items": ["programming-2017-social-events-belgian-beer-reception"],
      "Key": "b4da506a-b90a-4ae6-8a1d-32a40b88698e",
      "Location": "ï»¿D - 2nd floor",
      "Time": "17:00 - 19:00",
      "Title": "Social Events: Belgian beer reception",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "When developing current-day software systems, their deployment and usage environments should be considered carefully, in order to understand the adaptations those systems might need to undergo to interact with other systems and with their environment. Moreover, due to the portability, mobility and increasingly evolutionary nature of software systems, such adaptations should be enacted even while the system is running. Developing such software systems can prove challenging, and many seemingly different techniques to address this concern have been proposed over the last couple of years.\nThe intention of the LASSY workshop is to congregate all topics relevant to dynamic adaptation and run-time evolution of software systems, ranging from a computer science perspective covering the domains of programming languages, model-driven software development, software and service composition, context-aware databases, software variability, requirements engineering, UI adaptation and other domains, to a human perspective covering sociological or ethical implications of dynamic software systems. The workshop provides a space for discussion and collaboration between researchers working on the problem of enabling live adaptations to software systems, across the development stack.",
      "Day": "2017-04-03",
      "Items": [
        "lassy-2017-papers-iot-robot-simulator-for-context-sensitive-and-live-adaptive-software-developments",
        "lassy-2017-papers-discussion-and-closing-remarks"
      ],
      "Key": "56679c91-d9ba-4980-95f3-3b76bf172ebf",
      "Location": "D2.14",
      "Time": "15:30 - 17:00",
      "Title": "LASSY 2017 - : Discussion and Closing",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "When developing current-day software systems, their deployment and usage environments should be considered carefully, in order to understand the adaptations those systems might need to undergo to interact with other systems and with their environment. Moreover, due to the portability, mobility and increasingly evolutionary nature of software systems, such adaptations should be enacted even while the system is running. Developing such software systems can prove challenging, and many seemingly different techniques to address this concern have been proposed over the last couple of years.\nThe intention of the LASSY workshop is to congregate all topics relevant to dynamic adaptation and run-time evolution of software systems, ranging from a computer science perspective covering the domains of programming languages, model-driven software development, software and service composition, context-aware databases, software variability, requirements engineering, UI adaptation and other domains, to a human perspective covering sociological or ethical implications of dynamic software systems. The workshop provides a space for discussion and collaboration between researchers working on the problem of enabling live adaptations to software systems, across the development stack.",
      "Day": "2017-04-03",
      "Items": [
        "lassy-2017-papers-a-rollback-mechanism-to-recover-from-software-bugs-in-role-based-adaptive-software-systems",
        "lassy-2017-papers-analyzing-state-of-the-art-role-based-programming-languages",
        "lassy-2017-papers-utilizing-role-based-models-for-distributed-on-demand-service-composition"
      ],
      "Key": "0f0af933-cde9-4468-8e05-a84e5237f3d5",
      "Location": "D2.14",
      "Time": "13:30 - 15:00",
      "Title": "LASSY 2017 - : Role-based software development",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "When developing current-day software systems, their deployment and usage environments should be considered carefully, in order to understand the adaptations those systems might need to undergo to interact with other systems and with their environment. Moreover, due to the portability, mobility and increasingly evolutionary nature of software systems, such adaptations should be enacted even while the system is running. Developing such software systems can prove challenging, and many seemingly different techniques to address this concern have been proposed over the last couple of years.\nThe intention of the LASSY workshop is to congregate all topics relevant to dynamic adaptation and run-time evolution of software systems, ranging from a computer science perspective covering the domains of programming languages, model-driven software development, software and service composition, context-aware databases, software variability, requirements engineering, UI adaptation and other domains, to a human perspective covering sociological or ethical implications of dynamic software systems. The workshop provides a space for discussion and collaboration between researchers working on the problem of enabling live adaptations to software systems, across the development stack.",
      "Day": "2017-04-03",
      "Items": [
        "lassy-2017-papers-welcome",
        "lassy-2017-papers-dynamic-software-updating-in-java-comparing-concepts-and-resource-demands",
        "lassy-2017-papers-managing-the-context-interaction-problem-a-classification-of-conflict-resolution-techniques-in-dynamically-adaptive-software-systems"
      ],
      "Key": "0211c181-72de-430e-a1ac-2362fb2f8681",
      "Location": "D2.14",
      "Time": "09:00 - 10:30",
      "Title": "LASSY 2017 - : Literature reviews for Live Adaptation of Software Systems",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "When developing current-day software systems, their deployment and usage environments should be considered carefully, in order to understand the adaptations those systems might need to undergo to interact with other systems and with their environment. Moreover, due to the portability, mobility and increasingly evolutionary nature of software systems, such adaptations should be enacted even while the system is running. Developing such software systems can prove challenging, and many seemingly different techniques to address this concern have been proposed over the last couple of years.\nThe intention of the LASSY workshop is to congregate all topics relevant to dynamic adaptation and run-time evolution of software systems, ranging from a computer science perspective covering the domains of programming languages, model-driven software development, software and service composition, context-aware databases, software variability, requirements engineering, UI adaptation and other domains, to a human perspective covering sociological or ethical implications of dynamic software systems. The workshop provides a space for discussion and collaboration between researchers working on the problem of enabling live adaptations to software systems, across the development stack.",
      "Day": "2017-04-03",
      "Items": [
        "lassy-2017-papers-towards-reflection-in-an-frp-language-for-small-scale-embedded-systems",
        "lassy-2017-papers-dynamic-layers-for-extreme-debugging"
      ],
      "Key": "60594453-3aaf-4c3b-a4c7-95f06929c4aa",
      "Location": "D2.14",
      "Time": "11:00 - 12:00",
      "Title": "LASSY 2017 - : Tools and Applications of Live adaptations",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2017-04-04",
      "Items": ["programming-2017-organizational-registration"],
      "Key": "8e43e308-caee-4070-bb00-afa4afc767be",
      "Location": "ï»¿ï»¿D - Main entrance",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "",
      "Chairs": ["roberthirschfeld"],
      "ChairsString": "Robert Hirschfeld",
      "Day": "2017-04-04",
      "Items": ["programming-2017-organizational-steering-committee-meeting"],
      "Key": "8c280dae-63d8-444d-ae55-302c49fa304d",
      "Location": "SC Meeting Room",
      "Time": "18:00 - 20:00",
      "Title": "Organizational: Steering Committee Meeting",
      "Type": "Meetings"
    },
    {
      "Abstract": "",
      "Day": "2017-04-05",
      "Items": ["programming-2017-organizational-registration"],
      "Key": "56ec5dca-076b-463a-9e91-39078e082563",
      "Location": "ï»¿ï»¿D - Main entrance",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "",
      "Day": "2017-04-03",
      "Items": ["programming-2017-organizational-registration"],
      "Key": "75210869-67be-4acd-b272-9c175a322ad3",
      "Location": "ï»¿ï»¿D - Main entrance",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "",
      "Day": "2017-04-06",
      "Items": ["programming-2017-organizational-registration"],
      "Key": "259fb12d-49dc-46d2-a30a-c823706ada9e",
      "Location": "ï»¿ï»¿D - Main entrance",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Chairs": ["cristalopes"],
      "ChairsString": "Crista Lopes",
      "Day": "2017-04-06",
      "Items": [
        "programming-2017-papers-tbd-10",
        "programming-2017-papers-tbd-11",
        "programming-2017-papers-tbd-12"
      ],
      "Key": "14c9b442-a5fe-45f6-89e7-1e2605a56549",
      "Location": "D0.07",
      "Time": "10:45 - 12:15",
      "Title": "Research Papers: Research Papers 4",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Chairs": ["elisagonzalezboix"],
      "ChairsString": "Elisa Gonzalez Boix",
      "Day": "2017-04-06",
      "Items": [
        "programming-2017-papers-tbd-13",
        "programming-2017-papers-tbd-14",
        "programming-2017-papers-tbd-15"
      ],
      "Key": "a2c755c9-3d28-4f01-9beb-de21ae025e62",
      "Location": "D0.07",
      "Time": "13:30 - 15:00",
      "Title": "Research Papers: Research Papers 5",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Chairs": ["mariosudholt"],
      "ChairsString": "Mario SÃ¼dholt",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-papers-tdb-2",
        "programming-2017-papers-tbd-7",
        "programming-2017-papers-tbd-9"
      ],
      "Key": "d46b8d68-9ab7-4834-9f9a-66193b948e9a",
      "Location": "D0.07",
      "Time": "15:30 - 17:00",
      "Title": "Research Papers: Research Papers 3",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Day": "2017-04-06",
      "Items": [
        "programming-2017-papers-tbd-16",
        "programming-2017-papers-tbd-17",
        "programming-2017-papers-tdd-18"
      ],
      "Key": "4d4bcc65-8fcc-4898-a4a9-aac82488d185",
      "Location": "D0.07",
      "Time": "15:30 - 17:00",
      "Title": "Research Papers: Research Papers 6",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Chairs": ["guidosalvaneschi"],
      "ChairsString": "Guido Salvaneschi",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-papers-tbd-1",
        "programming-2017-papers-tbd-8",
        "programming-2017-papers-tbd-3"
      ],
      "Key": "afe63453-ba0e-47fa-bfba-905436dc5b40",
      "Location": "D0.07",
      "Time": "10:45 - 12:15",
      "Title": "Research Papers: Research Papers 1",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Crista Lopes) as the handling editor for their papers.\nIn order to present at \u2039Programming\u203a 2017, papers must be submitted to either one of the first two issues of that journal. See Important Dates.",
      "Chairs": ["shigeruchiba"],
      "ChairsString": "Shigeru Chiba",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-papers-tbd-5",
        "programming-2017-papers-tbd-4",
        "programming-2017-papers-tbd-6"
      ],
      "Key": "907d19b6-6fb7-4a8f-9915-23a64f28557b",
      "Location": "D0.07",
      "Time": "13:30 - 15:00",
      "Title": "Research Papers: Research Papers 2",
      "Type": "Presentations"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-03",
      "Items": ["els-2017-lightning-talks"],
      "Key": "9ac71851-9b55-425e-a3ac-78a6af2f966a",
      "Location": "D0.07",
      "Time": "17:00 - 17:30",
      "Title": "ELS 2017 - : Lightning Talks",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": ["els-2017-general-game-playing-in-common-lisp"],
      "Key": "1f476c88-d337-4675-bca3-bff2c6f64b36",
      "Location": "D0.07",
      "Time": "11:00 - 12:00",
      "Title": "ELS 2017 - : Tutorial",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": [
        "els-2017-on-the-lambda-way-",
        "els-2017-writing-a-portable-code-walker-in-common-lisp",
        "els-2017-removing-redundant-tests-by-replicating-control-paths"
      ],
      "Key": "00548731-3f74-4c61-8a8a-b2bfc1b063c6",
      "Location": "D0.07",
      "Time": "15:30 - 17:00",
      "Title": "ELS 2017 - : Session V: Going Beyond",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": ["els-2017-how-the-strengths-of-lisp-family-languages-facilitate-building-complex-and-flexible-bioinformatics-applications"],
      "Key": "1483af00-6692-435e-b67f-320933b6afcf",
      "Location": "D0.07",
      "Time": "09:00 - 10:00",
      "Title": "ELS 2017 - : Keynotes II",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": [
        "els-2017-lightning-talks",
        "els-2017-announcements-wrapup-goodbye"
      ],
      "Key": "fe9bf219-cea1-4923-b22d-4471eeed66d5",
      "Location": "D0.07",
      "Time": "17:00 - 17:45",
      "Title": "ELS 2017 - : Lightning Talks",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-03",
      "Items": [
        "els-2017-a-lisp-way-to-type-theory-and-formal-proofs",
        "els-2017-programmatic-manipulation-of-common-lisp-type-specifiers",
        "els-2017-type-inference-in-cleavi"
      ],
      "Key": "53e014b5-875c-44b3-9542-c35376c656cf",
      "Location": "D0.07",
      "Time": "13:30 - 15:00",
      "Title": "ELS 2017 - : Session II: Types",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-03",
      "Items": [
        "els-2017-common-lisp-ultraspec-a-project-for-modern-common-lisp-documentation",
        "els-2017-loading-multiple-versions-of-an-asdf-system-in-the-same-lisp-image"
      ],
      "Key": "86bfd051-38f4-47d7-939a-af51cfe19972",
      "Location": "D0.07",
      "Time": "11:00 - 12:00",
      "Title": "ELS 2017 - : Session I: Tools",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": [
        "els-2017-fast-maintainable-and-portable-sequence-functions",
        "els-2017-diy-meta-languages-with-common-lisp",
        "els-2017-static-taint-analysis-of-event-driven-scheme-programs"
      ],
      "Key": "852db361-201b-4bd6-b683-b6f85dd49353",
      "Location": "D0.07",
      "Time": "13:30 - 15:00",
      "Title": "ELS 2017 - : Session IV: Going Meta",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-03",
      "Items": [
        "els-2017-welcome-messages-and-announcements",
        "els-2017-identity-in-a-world-of-values"
      ],
      "Key": "9e9ec13b-4ef5-49dc-b63a-c2b835ecb2bc",
      "Location": "D0.07",
      "Time": "09:00 - 10:30",
      "Title": "ELS 2017 - : Welcome and Keynotes I",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-04",
      "Items": ["els-2017-parallelizing-femlisp"],
      "Key": "157a1724-085d-45e5-aa97-049ab433e3f4",
      "Location": "D0.07",
      "Time": "10:00 - 10:30",
      "Title": "ELS 2017 - : Session III: Applications",
      "Type": "Talks"
    },
    {
      "Abstract": "External Website\nInformation about the 10th European Lisp Symposium, ELS 2017 can be found on:http://www.european-lisp-symposium.org/ \n\n10th European Lisp Symposium Invited talks:\nHans H&uuml;bner, LambdaWerk GmbH, Berlin, Germany:Identity in a World of Values\nBohdan B. Khomtchouk, University of Miami Miller School of Medicine, Miami:How the strengths of Lisp-family languages facilitate building complex and flexible bioinformatics applications",
      "Day": "2017-04-03",
      "Items": [
        "els-2017-delivering-common-lisp-applications-with-asdf-3-3",
        "els-2017-radiance-a-web-application-environment",
        "els-2017-teaching-students-of-engineering-some-insights-of-the-internet-of-things-using-racket-and-the-raspberrypi",
        "els-2017-interactive-functional-medical-image-analysis"
      ],
      "Key": "d704434a-f090-477f-8b90-16190b588177",
      "Location": "D0.07",
      "Time": "15:30 - 17:00",
      "Title": "ELS 2017 - : Demonstrations",
      "Type": "Talks"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-06",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "873609eb-64d7-48a7-bb14-23db1a610237",
      "Location": "ï»¿D - 2nd floor",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-04",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "7d611cd8-62d5-47d8-be1d-d8c46c329bef",
      "Location": "ï»¿D - 2nd floor",
      "Time": "10:30 - 11:00",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-03",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "9b6af6d7-8e86-470d-b918-0096cf6fbafa",
      "Location": "ï»¿D - 2nd floor",
      "Time": "10:30 - 11:00",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-06",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "e0cf3e30-0639-4f36-b89a-9cc7a6239cc7",
      "Location": "ï»¿D - 2nd floor",
      "Time": "10:15 - 10:45",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-05",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "7a12b049-7618-4c7f-a24f-fbff39b613ca",
      "Location": "ï»¿D - 2nd floor",
      "Time": "10:15 - 10:45",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-03",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "bf7d11b9-6cbf-4182-b516-33e9a58682ce",
      "Location": "ï»¿D - 2nd floor",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-05",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "af93f28f-45f2-4ffe-b67b-9ad05ac8a6c5",
      "Location": "ï»¿D - 2nd floor",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-04",
      "Items": ["programming-2017-catering-afternoon-coffee-break-i"],
      "Key": "f5298e7b-f525-476b-bc41-0d609cf8d5e9",
      "Location": "ï»¿D - 2nd floor",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee break",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-04",
      "Items": ["programming-2017-catering-lunch-i"],
      "Key": "26acc62c-8e71-4092-8cf9-1cbc89df0467",
      "Location": "ï»¿VUB Restaurant",
      "Time": "12:00 - 13:30",
      "Title": "Catering: Lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-06",
      "Items": ["programming-2017-catering-lunch-i"],
      "Key": "f22ffcdc-3526-45d8-904e-001cb331058c",
      "Location": "ï»¿VUB Restaurant",
      "Time": "12:15 - 13:30",
      "Title": "Catering: Lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-05",
      "Items": ["programming-2017-catering-lunch-i"],
      "Key": "c89c505f-c2ae-4685-aa1f-c086dfa137f6",
      "Location": "ï»¿VUB Restaurant",
      "Time": "12:15 - 13:30",
      "Title": "Catering: Lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Coffee breaks are served throughout the day on the second floor of the conference venue, building D. \n Lunches are provided in the on-campus restaurant (building R), close to the conference venue. (Lunch menu + allergen information)",
      "Day": "2017-04-03",
      "Items": ["programming-2017-catering-lunch-i"],
      "Key": "9dd611ce-5c7d-4834-af01-7d989fb512ed",
      "Location": "ï»¿VUB Restaurant",
      "Time": "12:00 - 13:30",
      "Title": "Catering: Lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-demos-redshell-online-back-in-time-debugging",
        "programming-2017-demos-a-platform-for-debugging-complex-concurrent-applications"
      ],
      "Key": "dacf09b4-4a2e-4add-aa7b-f87e1ece8135",
      "Location": "D2.06",
      "Time": "10:45 - 12:15",
      "Title": "Demos: Demo 1",
      "Type": "Demos"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-demos-modularizing-code-by-use-cases-and-tests-for-better-maintainability",
        "programming-2017-demos-application-embedding-from-fishtank-to-axiom"
      ],
      "Key": "f14eeb9a-1704-4017-90c0-663747b97839",
      "Location": "D2.06",
      "Time": "13:30 - 15:00",
      "Title": "Demos: Demo 2",
      "Type": "Demos"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-05",
      "Items": [
        "programming-2017-demos-live-development-in-dart",
        "programming-2017-demos-tools-for-open-transparent-and-engaging-storytelling"
      ],
      "Key": "64384675-1150-4a13-a082-9c3fd6ff0902",
      "Location": "D2.06",
      "Time": "15:30 - 17:00",
      "Title": "Demos: Demo 3",
      "Type": "Demos"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-06",
      "Items": [
        "programming-2017-demos-an-elixir-library-for-programming-concurrent-and-distributed-embedded-systems",
        "programming-2017-demos-reactive-programming-with-rescala"
      ],
      "Key": "d729a85b-0da9-46b5-a30f-4e60912f0189",
      "Location": "D2.06",
      "Time": "10:45 - 12:15",
      "Title": "Demos: Demo 4",
      "Type": "Demos"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-06",
      "Key": "1a5f0f74-bc3d-48a2-8fa2-57ecd5d03f67",
      "Location": "D2.06",
      "Time": "13:30 - 15:00",
      "Title": "Demos: Demo 5",
      "Type": "Demos"
    },
    {
      "Abstract": "List of accepted demos \n \n An Elixir Library for Programming Concurrent and Distributed Embedded Systems (Humberto Rodriguez Avila, Elisa Gonzalez Boix, Wolfgang De Meuter) \n Modularizing Code by Use Cases and Tests for Better Maintainability (Michal Bystrick&yacute;, Valentino VraniÄ) \n Application Embedding: From FishTank to Axiom (David H. Lorenz, Boaz Rosenan\u200b) \n ÎÏÎ¼ÏÎ¿Ï: A Platform for Debugging Complex Concurrent Applications (Stefan Marr, Carmen Torres Lopez, Dominik Aumayr, Elisa Gonzalez Boix, Hanspeter M&ouml;ssenb&ouml;ck) \n Live Development in Dart (John McCutchan, Todd Turnidge, Gilad Bracha) \n Reactive Programming with REScala (Ragnar Mogk, Joscha Drechsler) \n Tools for Open, Transparent and Engaging Storytelling (Tomas Petricek) \n RedShell: Online Back-In-Time Debugging (Stefan Schulz, Christoph Bockisch) \n\nSchedule\nThe program for the demonstrations will be announced shortly. All demonstrations will be scheduled on Wednesday 5 and Thursday 6 of April in parallel with Research Papers Tracks 1-6. Each demo will have one 45 minutes slot, including discussion.",
      "Day": "2017-04-06",
      "Key": "45df5461-388a-4f44-af8f-8af54e8dd40f",
      "Location": "D2.06",
      "Time": "15:30 - 17:00",
      "Title": "Demos: Demo 6",
      "Type": "Demos"
    }
  ],
  "Sponsors": "ACM, SIGPLAN, SIGSOFT, Delaware Consulting, Nokia Bell Labs, MediaGeniX, Vrije Universiteit Brussel, AOSA",
  "URL": "http://2017.programming-conference.org/home",
  "VenueInfo": {"Name": "Vrije Universiteit Brussel - building D"}
}