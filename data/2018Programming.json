{
  "DataRevision": -1339876872,
  "Description": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We\u2019ve named it \u2039Programming\u203a for short. \u2039Programming\u203a 2018 is the second edition of the conference. The first edition took place in Brussels in April 2017 Papers are welcome from any part of the programming research lifecycle, as are papers on programming practice and experience.",
  "Event": "programming-2018",
  "Location": "Nice, France",
  "MultiTrack": true,
  "SocialFeeds": [
    {
      "Name": "Twitter",
      "Keywords": ["prog18", "programming", "programming2018"],
      "URL": "https://twitter.com/programmingconf"
    },
    {
      "Name": "Facebook",
      "URL": "https://www.facebook.com/programmingconf"
    }
  ],
  "Items": [
    {
      "Abstract": "",
      "Affiliations": ["Raincode Labs, Belgium"],
      "AffiliationsString": "Raincode Labs, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "cocodo-2018-dojo-cocodo-opening-and-introductions",
      "PersonsString": "Vadim Zaytsev",
      "Title": "CoCoDo opening and introductions",
      "Type": "Day opening",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-cocodo-opening-and-introductions"
    },
    {
      "Abstract": "JastAdd is a metacompiler based on attribute grammars. By using attribute grammars and static aspect-oriented programming, JastAdd enables designing modular compilers that are easy to extend with new language and analysis features. JastAdd has been used to build industrial strength compilers for languages like Java and Modelica. \nIn the JastAdd workshop we will give you hands-on experience with a small compiler for a minimal C-like language. We will demonstrate how to extend the language with new operators and other features.",
      "Affiliations": ["Lund University"],
      "AffiliationsString": "Lund University",
      "Authors": ["jesperoqvist"],
      "Key": "cocodo-2018-dojo-jastadd",
      "PersonsString": "Jesper Oqvist",
      "Title": "JastAdd",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-jastadd"
    },
    {
      "Abstract": "",
      "Affiliations": ["Fernuniversität"],
      "AffiliationsString": "Fernuniversität",
      "Authors": ["friedrichsteimann"],
      "Key": "cocodo-2018-dojo-the-game-of-programmer-vs-ide",
      "PersonsString": "Friedrich Steimann",
      "Title": "The Game of Programmer vs. IDE",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-the-game-of-programmer-vs-ide"
    },
    {
      "Abstract": "The FunCons session at CoCoDo 2018 gives participants the opportunity to try compiling programs to so-called \u2018funcons\u2019 (fundamental programming constructs). \nA collection of funcons is essentially a very high level intermediate language. The operational definitions of funcons are reusable components of language specifications, and can be interpreted to run funcon terms. Compilation of a language to funcons supports agile rapid prototyping during its development. A formal definition of the compilation also provides a formal semantics for the language. \nAt this dojo, participants will use the beta-release of the current collection of funcons, and specify compilation of a simple demonstration language (SL) to funcons using the CBS meta-language for component-based semantics developed by the PLanCompS project. Browsing, editing, and running the specifications are supported by editors generated using Spoofax.",
      "Affiliations": ["Swansea University"],
      "AffiliationsString": "Swansea University",
      "Authors": ["peterdmosses"],
      "Key": "cocodo-2018-dojo-funcons",
      "PersonsString": "Peter D. Mosses",
      "Title": "FunCons",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-funcons"
    },
    {
      "Abstract": "",
      "Affiliations": ["Raincode Labs, Belgium"],
      "AffiliationsString": "Raincode Labs, Belgium",
      "Authors": ["johanfabry"],
      "Key": "cocodo-2018-dojo-how-to-double-embed-the-general-purpose-language-of-your-embedded-dsl-for-expressivity-performance-and-profit",
      "PersonsString": "Johan Fabry",
      "Title": "How to double embed the general-purpose language of your embedded DSL for expressivity, performance and profit",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-how-to-double-embed-the-general-purpose-language-of-your-embedded-dsl-for-expressivity-performance-and-profit"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Bergen"],
      "AffiliationsString": "University of Bergen",
      "Authors": ["anyahelenebagge"],
      "Key": "cocodo-2018-dojo-rascal",
      "PersonsString": "Anya Helene Bagge",
      "Title": "Rascal",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/cocodo-2018-dojo-rascal"
    },
    {
      "Abstract": "regenwasserberechnung abwasserberechnung \nManaging Hybrid Memories by Predicting Object Write Intensity \nEmerging Non-Volatile Memory (NVM) technologies offer more capacity and energy efficiency than DRAM, but their write endurance is lower and latency is higher. Hybrid memories seek the best of both worlds \u2014 scalability, ef ciency, and performance \u2014 by combining DRAM and NVM. Our work proposes modifying a standard managed-language runtime to allocate objects either in DRAM or NVM to maximize the use of NVM capacity without wearing it out. The key to our approach is correctly predicting highly mutated objects and allocating them in DRAM and allocating rarely mutated objects in NVM. We explore write-intensity prediction based on object (1) size, (2) class type, and (3) allocation site. We find predictions using allocation site are the most accurate. \nOur memory manager for hybrid memories consists of (1) an of ine pro ling phase that produces placement advice on a per allocation-site basis, and (2) a garbage collector that allocates mature objects in DRAM or NVM based on this advice and that allocates highly mutated nursery objects in DRAM. We explore two heuristics for classifying sites as write-intensive (DRAM) or rarely written (NVM). Write-Frequency (FREQ) uses the number of writes to objects allocated by each site. Although it can limit writes to NVM up to 1 and 3%, it allocates just 50% to 20% of mature objects in DRAM. Write-Density (DENS) computes number of writes to objects relative to object size. Write-Density is a better predictor. When it limits NVM writes to 2%, it can allocate 88% of mature objects to NVM. Pareto optimal con gurations may increase writes to 10% and store 99% of mature objects in NVM. Using write-intensity predictors to proactively place objects in hybrid DRAM and NVM memory systems prolongs NVM\u2019s lifetime while exploiting its capacity.",
      "Affiliations": [
        "Ghent University",
        "Google",
        "Vrije Universiteit Brussel",
        "Ghent University, Belgium"
      ],
      "AffiliationsString": "Ghent University, Google, Vrije Universiteit Brussel, Ghent University, Belgium",
      "Authors": [
        "shoaibakram",
        "kathrynsmckinley",
        "jennifersartor",
        "lieveneeckhout"
      ],
      "Key": "pass-2018-papers-managing-hybrid-memories-by-predicting-object-write-intensity",
      "PersonsString": "Shoaib Akram, Kathryn S McKinley, Jennifer B. Sartor and Lieven Eeckhout",
      "Title": "Managing Hybrid Memories by Predicting Object Write Intensity",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-managing-hybrid-memories-by-predicting-object-write-intensity"
    },
    {
      "Abstract": "Hop.js is a multitier programming environment for JavaScript. It allows a single JavaScript program to describe the client-side and the server-side components of a web application. Its runtime environment ensures consistent executions of the application on the server and on the client. In this presentation we will overview the language design and its implementation. We will show that the concept of \u201cprograms generating programs\u201d is ubiquitous in the system and we will show how it makes it possible to conceive web applications globally.",
      "Affiliations": ["Inria, France"],
      "AffiliationsString": "Inria, France",
      "Authors": ["manuelserrano"],
      "Key": "proweb-2018-papers-hop-js-javascript-multitier-programming",
      "PersonsString": "Manuel Serrano",
      "Title": "Hop.js: JavaScript Multitier Programming",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-hop-js-javascript-multitier-programming"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2018-papers-group-discussion-on-common-workshop-goals",
      "PersonsString": "",
      "Title": "Group discussion 2",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-group-discussion-on-common-workshop-goals"
    },
    {
      "Abstract": "In an Infrastructure As A Service (IaaS) cloud, the scheduler deploys VMs to servers according to service level objectives (SLOs). Clients and service providers must both trust the infrastructure. In particular they must be sure that the VM scheduler takes decisions that are consistent with its advertised behaviour. The difficulties to master every theoretical and practical aspects of a VM scheduler implementation leads however to faulty behaviours that break SLOs and reduce the provider revenues. \nBtrPlace is a VM scheduler written in Java. It computes VM placements satisfying constraints, and the action schedule that lead to this target configuration. BtrPlace uses constraint programming to model the VM placement and the action schedule. \nI will present SafePlace, a specification and testing framework that exhibits inconsistencies in VM schedulers. SafePlace mixes a DSL to formally specify constraint specifications with fuzz testing to generate a large spectrum of test cases and automatically report implementation faults. \nWe evaluate SafePlace on the VM scheduler BtrPlace. Without any code modification, SafePlace makes the writing of tests smaller, the testing more exhaustive, and naturally targets a wider range of configurations than the existing unit tests. We will show the performance of the testing framework as well as a few future research directions.",
      "Affiliations": ["INRIA"],
      "AffiliationsString": "INRIA",
      "Authors": ["ludovichenrio"],
      "Key": "pass-2018-papers-invited-talk-ludovic-henrio",
      "PersonsString": "Ludovic Henrio",
      "Title": "SafePlace: Trustable Virtual Machine Scheduling (invited talk)",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-invited-talk-ludovic-henrio"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "State University of New York (SUNY) Binghamton",
        "SUNY Buffalo, USA",
        "Philipps-Universität Marburg",
        "Tokyo Institute of Technology"
      ],
      "AffiliationsString": "State University of New York (SUNY) Binghamton, SUNY Buffalo, USA, Philipps-Universität Marburg, Tokyo Institute of Technology",
      "Authors": [
        "yudavidliu",
        "lukaszziarek",
        "christophbockisch",
        "hidehikomasuhara"
      ],
      "Key": "pass-2018-papers-welcome",
      "PersonsString": "Yu David Liu, Lukasz Ziarek, Christoph Bockisch and Hidehiko Masuhara",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-welcome"
    },
    {
      "Abstract": "Network Function Virtualization (NFV) aims to overcome the limitations of hardware middleboxes moving network functions to software. Ultimately, this approach enables deployment into virtualized environments with higher flexibility, reducing deployment time and costs. In common industrial practice, multiple smaller network functions are often chained together into service function chains. Yet, service function chains are extremely fragile, lacking basic guarantees on correct composition and dependency reasoning. \nIn this position paper, we propose a roadmap towards language abstractions that address this issue. We introduce the problems with current service function chaining technology and present the research program we envision.",
      "Affiliations": [
        "",
        "TU Darmstadt",
        "TU Darmstadt"
      ],
      "AffiliationsString": ", TU Darmstadt",
      "Authors": [
        "matthiaseichholz",
        "guidosalvaneschi",
        "miramezini"
      ],
      "Key": "pass-2018-papers-towards-safe-modular-composition-of-network-functions",
      "PersonsString": "Matthias Eichholz, Guido Salvaneschi and Mira Mezini",
      "Title": "Towards Safe Modular Composition of Network Functions",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-towards-safe-modular-composition-of-network-functions"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "State University of New York (SUNY) Binghamton",
        "SUNY Buffalo, USA",
        "Philipps-Universität Marburg",
        "Tokyo Institute of Technology"
      ],
      "AffiliationsString": "State University of New York (SUNY) Binghamton, SUNY Buffalo, USA, Philipps-Universität Marburg, Tokyo Institute of Technology",
      "Authors": [
        "yudavidliu",
        "lukaszziarek",
        "christophbockisch",
        "hidehikomasuhara"
      ],
      "Key": "pass-2018-papers-discussion-closing",
      "PersonsString": "Yu David Liu, Lukasz Ziarek, Christoph Bockisch and Hidehiko Masuhara",
      "Title": "Discussion & closing",
      "Type": "Day closing",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-discussion-closing"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Avans University of Applied Sciences",
        "Open University of the Netherlands, The Netherlands",
        "Open University of the Netherlands"
      ],
      "AffiliationsString": "Avans University of Applied Sciences, Open University of the Netherlands, The Netherlands, Open University of the Netherlands",
      "Authors": [
        "pascalvangastel",
        "bernardvangastel",
        "markovaneekelen"
      ],
      "Key": "pass-2018-papers-detecting-energy-bugs-and-hotspots-in-control-software-using-model-checking",
      "PersonsString": "Pascal van Gastel, Bernard van Gastel and Marko van Eekelen",
      "Title": "Detecting energy bugs and hotspots in control software using model checking",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-detecting-energy-bugs-and-hotspots-in-control-software-using-model-checking"
    },
    {
      "Abstract": "The Internet of Things (IoT) allows various things like mobile devices and electronic appliances to communicate over network. Inter-device apps can share data between devices and dispatch specific tasks to other devices to utilize their resources. The prevalence of JavaScript web apps that can run anywhere providing any browsers opens the gate to unanticipated interactions between devices. However, the current techniques require developers construct tasks to dispatch statically with strong consistency, and they do not provide any disciplined way to develop inter-device apps. In this paper, we propose an innovative framework, IDTD (Inter-Device Task Dispatch), that supports developers to construct and dispatch tasks into multiple devices dynamically with eventual consistency in a systematic manner. We provide a high-level architecture of IDTD, formally prove that the framework guarantees soundness and eventual consistency, and present preliminary results showing its practical usability.",
      "Affiliations": [
        "KAIST, South Korea",
        "",
        "",
        "",
        "",
        "KAIST"
      ],
      "AffiliationsString": "KAIST, South Korea, , KAIST",
      "Authors": [
        "jihyeokpark",
        "joonyoungpark",
        "yoonkyonglee",
        "chuljookim",
        "byoungohkim",
        "sukyoungryu"
      ],
      "Key": "proweb-2018-papers-a-framework-for-dynamic-inter-device-task-dispatch-with-eventual-consistency",
      "PersonsString": "Jihyeok Park, Joonyoung Park, Yoonkyong Lee, Chul-Joo Kim, Byoungoh Kim and Sukyoung Ryu",
      "Title": "A Framework for Dynamic Inter-Device Task Dispatch with Eventual Consistency",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-a-framework-for-dynamic-inter-device-task-dispatch-with-eventual-consistency"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "proweb-2018-papers-group-discussion-1",
      "PersonsString": "",
      "Title": "Group discussion 1",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-group-discussion-1"
    },
    {
      "Abstract": "In the state-of-practice, developing web applications requires dealing with multiple programming languages or codebases. To address this issue, researchers have proposed multi-tier languages such as Hop or Eliom that support client and server development in a single language and in one codebase. Even if such multi-tier languages are often strongly based on an existing language - for instance Hop is based on Scheme and Eliom on OCaml - they are new languages, and require a new compiler. \nThe objective of this paper is to define a multi-tier language as a library-based Scala DSL. Scala already supports compilation to both the Java VM and to JavaScript. The multi-tier language we propose in this paper, Scalagna, combines the existing Scala JVM and JavaScript ecosystems into a single programming model without requiring changes to, or rewrites of the existing Scala compilers. We discuss how this is possible using Scala\u2019s excellent support for definining DSLs, and the experimental Scala macro system. We show that Scalagna has reasonable performance, and by porting an existing Eliom application, we provide evidence that Scalagna is as expressive as other established and existing multi-tier languages.",
      "Affiliations": [
        "imec-DistriNet, KU Leuven, Belgium",
        "",
        "KU Leuven",
        "KU Leuven"
      ],
      "AffiliationsString": "imec-DistriNet, KU Leuven, Belgium, , KU Leuven",
      "Authors": [
        "bobreynders",
        "michaelgreefs",
        "dominiquedevriese",
        "frankpiessens"
      ],
      "Key": "proweb-2018-papers-scalagna-0-1-towards-multi-tier-programming-with-scala-and-scala-js",
      "PersonsString": "Bob Reynders, Michael Greefs, Dominique Devriese and Frank Piessens",
      "Title": "Scalagna 0.1: Towards Multi-tier Programming with Scala and Scala.js",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-scalagna-0-1-towards-multi-tier-programming-with-scala-and-scala-js"
    },
    {
      "Abstract": "Handlers for algebraic effects provide a compelling and modular basis for effectful programming by separating the use of an effectful operation from its meaning. \nPrevious work studies implementation strategies, although, most often focusing on a particular compilation strategy or a particular embedding technique. We compare a range of implementation strategies specifically for handlers on the web.",
      "Affiliations": [
        "The University of Edinburgh",
        "University of Edinburgh, UK",
        "University of Strathclyde",
        "University of Cambridge",
        "University of Cambridge, UK"
      ],
      "AffiliationsString": "The University of Edinburgh, University of Edinburgh, UK, University of Strathclyde, University of Cambridge, University of Cambridge, UK",
      "Authors": [
        "danielhillerstrom",
        "samlindley",
        "robertatkey",
        "kcsivaramakrishnan",
        "jeremyyallop"
      ],
      "Key": "proweb-2018-papers-handlers-js",
      "PersonsString": "Daniel Hillerström, Sam Lindley, Robert Atkey, KC Sivaramakrishnan and Jeremy Yallop",
      "Title": "Handlers.Js ",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-handlers-js"
    },
    {
      "Abstract": "Aspect-oriented programming makes possible to express changes in a modular way directly at the level of programming language constructs. This is particularly useful in situations that require explicit change manipulation, such as change reapplication to another version branch in application customization. However, it may be tricky to employ appropriate aspect-oriented constructs in a correct way that accommodates well the change to be implemented. This has been successfully addressed by an approach to aspect-oriented change realization based on a two-level change type model, which features a catalog of speci cation and implementation change types and their relationships, primarily targeting the web application domain. In this paper, we explore the applicability of the change types gathered in this catalog for the mobile application domain. For this, we performed a study that involved a set of hypothetical scenarios and two real mobile applications for Android. The study revealed that the change types known from the web application domain are in their essence applicable to the mobile application domain. It also lead to the discovery of four new specification change types in the mobile application domain and the corresponding speci cation\u2013implementation change type relationships along with further relationships between known change types.",
      "Affiliations": [
        "Slovak University of Technology in Bratislava, Slovakia",
        "Slovak University of Technology in Bratislava"
      ],
      "AffiliationsString": "Slovak University of Technology in Bratislava, Slovakia, Slovak University of Technology in Bratislava",
      "Authors": [
        "sandrakostova",
        "valentinovranic"
      ],
      "Key": "pass-2018-papers-applying-aspect-oriented-change-realization-in-the-mobile-application-domain",
      "PersonsString": "Sandra Kostova and Valentino Vranić",
      "Title": "Applying Aspect-Oriented Change Realization in the Mobile Application Domain",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/pass-2018-papers-applying-aspect-oriented-change-realization-in-the-mobile-application-domain"
    },
    {
      "Abstract": "With the introduction of technologies such as WebSockets and WebRTC, web applications have evolved beyond the simple request-response model. Tierless web languages such as Links and Ur/Web are uniform languages for writing code to be run across all tiers, instead of using different languages for client, server, and database code. \nArmed with recent innovations such as WebSockets, which allow web applications to deviate from the classic request-response model, we provide the first full integration of session types and web programming. To handle the inevitable case of a user going offline during a session, we introduce the first implementation of exceptions in the presence of session types. Our implementation is grounded in a formal calculus with strong correctness properties.",
      "Affiliations": [
        "The University of Edinburgh",
        "University of Edinburgh, UK",
        "University of Kansas, USA",
        ""
      ],
      "AffiliationsString": "The University of Edinburgh, University of Edinburgh, UK, University of Kansas, USA, ",
      "Authors": [
        "simonfowler",
        "samlindley",
        "jgarrettmorris",
        "saradecova"
      ],
      "Key": "proweb-2018-papers-session-types-for-tierless-web-applications",
      "PersonsString": "Simon Fowler, Sam Lindley, J. Garrett Morris and Sara Décova",
      "Title": "Session Types for Tierless Web Applications",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/proweb-2018-papers-session-types-for-tierless-web-applications"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "morevms-2018-day-closing",
      "PersonsString": "",
      "Title": "Day closing",
      "Type": "Day closing",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-day-closing"
    },
    {
      "Abstract": "The conception of language virtual machines, as we know it, has given us many things: high performance for even highly dynamic languages or intermediate representations (IRs); convenient and fast garbage collection; and reliable high-level tooling. All are enabled by the internal uniformity of a virtual machine. But virtual machines also take from us: through removing access to certain abstractions offered by the host system, supporting only one or a subset of the languages of interest, and providing only prescriptive tool interfaces, they create barriers and external needs which must be worked around in ways that are different for each VM (e.g. different FFIs) and often reinvented by each end programmer unfortunate enough to need them (e.g. the relative familiarity of custom tooling via bytecode manipulation).",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["stephenkell"],
      "Key": "morevms-2018-the-inevitable-death-of-vms-a-progress-report",
      "PersonsString": "Stephen Kell",
      "Title": "The inevitable death of VMs: a progress report",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-the-inevitable-death-of-vms-a-progress-report"
    },
    {
      "Abstract": "Discussion: Why do we need research VMs and what are our requirements?",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "morevms-2018-discussion-why-do-we-need-research-vms-and-what-are-our-requirements-",
      "PersonsString": "",
      "Title": "Discussion: Why do we need research VMs and what are our requirements?",
      "Type": "Meeting",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-discussion-why-do-we-need-research-vms-and-what-are-our-requirements-"
    },
    {
      "Abstract": "Compiled languages like C++ generally don\u2019t have access to Just-in-Time facilities, which limits the range of possible optimizations. This paper introduces an hybrid approach that combines classical ahead of time compilation with user-specified dynamic recompilation of some functions, using runtime information to improve compiled code.",
      "Affiliations": [
        "Quarkslab",
        "Quarkslab"
      ],
      "AffiliationsString": "Quarkslab",
      "Authors": [
        "juanmanuelmartinezcaamano",
        "sergeguelton"
      ],
      "Key": "morevms-2018-easy-jit-compiler-assisted-library-to-enable-just-in-time-compilation-in-c-codes",
      "PersonsString": "Juan Manuel Martinez Caamaño and Serge Guelton",
      "Title": "Easy::Jit: Compiler assisted library to enable Just-In-Time compilation in C++ codes",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-easy-jit-compiler-assisted-library-to-enable-just-in-time-compilation-in-c-codes"
    },
    {
      "Abstract": "Guile is a language implementation that grew out of the scripting movement in the 90s. Its initial implementation was entirely written in C. To increase the speed and expres- sive power of user programs written in Scheme, about 10 years ago Guile started to move to be a self-hosted compiler. Guile managed to keep the interactive, source-focussed, fast- starting aspects of scripting even while adding a sizeable Scheme compiler by making use of object file formats from the static compilation world: DWARF and ELF.",
      "Affiliations": ["Igalia, S.L."],
      "AffiliationsString": "Igalia, S.L.",
      "Authors": ["andywingo"],
      "Key": "morevms-2018-self-hosted-scripting-in-guile",
      "PersonsString": "Andy Wingo",
      "Title": "Self-hosted scripting in Guile",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-self-hosted-scripting-in-guile"
    },
    {
      "Abstract": "Task granularity, i.e., the amount of work performed by parallel tasks, is a key performance attribute of parallel applications. On the one hand, fine-grained tasks (i.e., small tasks carrying out few computations) may introduce considerable parallelization overheads. On the other hand, coarse-grained tasks (i.e., large tasks performing substantial computations) may not fully utilize the available CPU cores, resulting in missed parallelization opportunities. We focus on task-parallel applications running in a single Java Virtual Machine on a shared-memory multicore. Despite their performance may considerably depend on the granularity of their tasks, related analyses and optimizations have received little attention in the literature. In this paper, we advocate the need for providing a better understanding of task granularity for such applications. We discuss the importance of improving our knowledge on this topic, and highlight the related challenges. We present new approaches to profile, analyze and optimize task granularity, and discuss the results obtained so far.",
      "Affiliations": [
        "University of Lugano, Switzerland",
        "University of Lugano, Switzerland",
        "Università della Svizzera italiana",
        "University of Lugano, Switzerland"
      ],
      "AffiliationsString": "University of Lugano, Switzerland, Università della Svizzera italiana",
      "Authors": [
        "andrearosa",
        "eduardorosales",
        "filipposchiavio",
        "walterbinder"
      ],
      "Key": "morevms-2018-understanding-task-granularity-on-the-jvm-profiling-analysis-and-optimization",
      "PersonsString": "Andrea Rosà, Eduardo Rosales, Filippo Schiavio and Walter Binder",
      "Title": "Understanding Task Granularity on the JVM: Profiling, Analysis, and Optimization",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-understanding-task-granularity-on-the-jvm-profiling-analysis-and-optimization"
    },
    {
      "Abstract": "Selfie is a self-contained 64-bit implementation of (1) a self-compiling compiler written in a tiny subset of C called C* targeting a tiny subset of 64-bit RISC-V called RISC-U, (2) a self-executing RISC-U emulator, and (3) a self-hosting hypervisor that virtualizes the emulated RISC-U machine. Selfie is implemented in a single 8k-line file and can compile, execute, and virtualize itself any number of times in a single invocation of the system given adequate resources. There is also a simple linker, disassembler, debugger, and profiler. Selfie has originally been developed just for educational purposes but has recently become a research platform as well. C* supports only two data types, uint64_t and uint64_t*, and RISC-U features just 14 instructions, in particular for unsigned arithmetic only, which significantly simplifies reasoning about correctness. In this paper, we report on an ongoing effort in designing and implementing a symbolic execution engine for RISC-U within selfie that is supposed to explore non-trivial parts of the system including itself. The idea is to identify the set of ingredients that are necessary to do this such as the data structures for representing traces, path conditions, and symbolic states as well as algorithms for SAT and SMT solving. The key difference to other more advanced projects is that we are interested in reasoning just about selfie, for now, and are able to change selfie if necessary, as reasoning target but also as integrated platform for compilation, (symbolic) execution, and virtualization. Since selfie generates unoptimized code we are also exploring ways to leverage our symbolic execution engine in code optimization.",
      "Affiliations": [
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg",
        "University of Salzburg"
      ],
      "AffiliationsString": "University of Salzburg",
      "Authors": [
        "alirezasabyaneh",
        "simonbauer",
        "christophkirsch",
        "philippmayer",
        "christianmosl",
        "clementponcelet",
        "saraseidl",
        "anasokolova",
        "manuelwidmoser"
      ],
      "Key": "morevms-2018-selfie-towards-minimal-symbolic-execution",
      "PersonsString": "Alireza S. Abyaneh, Simon Bauer, Christoph Kirsch, Philipp Mayer, Christian Mösl, Clément Poncelet, Sara Seidl, Ana Sokolova and Manuel Widmoser",
      "Title": "Selfie: Towards Minimal Symbolic Execution",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-selfie-towards-minimal-symbolic-execution"
    },
    {
      "Abstract": "Dynamic languages rely on native extensions written in languages such as C/C++ or Fortran. To efficiently support the execution of native extensions in the multi-lingual GraalVM, we have implemented Sulong, which executes LLVM IR to support all languages that have a LLVM back end. It supports configurations with respect to memory-allocation and memory-access strategies that have different tradeoffs concerning safety and interoperability with native libraries. Sulong supports the execution of inline assembly for the most commonly used x86 instructions and GCC compiler builtins; it is complete enough to execute a complete libc.",
      "Affiliations": [
        "Johannes Kepler University Linz",
        "Johannes Kepler University Linz",
        "Johannes Kepler University Linz",
        "Oracle Labs",
        "JKU Linz, Austria"
      ],
      "AffiliationsString": "Johannes Kepler University Linz, Oracle Labs, JKU Linz, Austria",
      "Authors": [
        "manuelrigger",
        "rolandschatz",
        "jacobkreindl",
        "christianhaubl",
        "hanspetermossenbock"
      ],
      "Key": "morevms-2018-sulong-and-thanks-for-all-the-fish",
      "PersonsString": "Manuel Rigger, Roland Schatz, Jacob Kreindl, Christian Häubl and Hanspeter Mössenböck",
      "Title": "Sulong, and Thanks for All the Fish",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-sulong-and-thanks-for-all-the-fish"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "University of Manchester",
        "The University of Manchester"
      ],
      "AffiliationsString": ", The University of Manchester, University of Manchester",
      "Authors": [
        "foivosszakkak",
        "andynisbet",
        "johnmawer",
        "timhartley",
        "nikosfoutris",
        "orionpapadakis",
        "andreasandronikakis",
        "iainapreotesei",
        "mikellujan1",
        "christoskotselidis"
      ],
      "Key": "morevms-2018-on-the-future-of-research-vms-a-hardware-software-perspective",
      "PersonsString": "Foivos S. Zakkak, Andy Nisbet, John Mawer, Tim Hartley, Nikos Foutris, Orion Papadakis, Andreas Andronikakis, Iain Apreotesei, Mikel Luján and Christos Kotselidis",
      "Title": "On the Future of Research VMs: A Hardware/Software Perspective",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-on-the-future-of-research-vms-a-hardware-software-perspective"
    },
    {
      "Abstract": "Heterogeneous computing emerged as a means to achieve higher performance and energy efficiency. However, this trend has been accompanied by changes in software development norms that do not necessarily favour programmers. A prime example is the two most popular heterogeneous programming languages, CUDA and OpenCL, which expose several low-level features to the API making them difficult to use by non-expert users. \nInstead of using low-level programming languages, developers tend to prefer more high-level, object-oriented languages typically executed on managed runtime environments. Although many programmers might expect that such languages would have already been adapted for execution on heterogeneous hardware, the reality is that their support is either very limited or totally absent. This paper highlights the main reasons and complexities of enabling heterogeneous managed runtime systems and proposes a number of directions to address those challenges.",
      "Affiliations": [
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester",
        "The University of Manchester"
      ],
      "AffiliationsString": "The University of Manchester",
      "Authors": [
        "jamesclarkson",
        "juanfumero",
        "michalispapadimitriou",
        "mariaxekalaki",
        "christoskotselidis"
      ],
      "Key": "morevms-2018-towards-practical-heterogeneous-virtual-machines",
      "PersonsString": "James Clarkson, Juan Fumero, Michalis Papadimitriou, Maria Xekalaki and Christos Kotselidis",
      "Title": "Towards Practical Heterogeneous Virtual Machines",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-towards-practical-heterogeneous-virtual-machines"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "morevms-2018-day-opening",
      "PersonsString": "",
      "Title": "Day opening",
      "Type": "Day opening",
      "URL": "https://2018.programming-conference.org/event/morevms-2018-day-opening"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "refuses-2018-papers-discussion-what-next-for-salon-des-refus-s",
      "PersonsString": "",
      "Title": "Discussion - Evaluating novel programming research ideas",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-discussion-what-next-for-salon-des-refus-s"
    },
    {
      "Abstract": "",
      "Affiliations": ["Ex Situ | Université Paris-Sud"],
      "AffiliationsString": "Ex Situ | Université Paris-Sud",
      "Authors": ["philiptchernavskij"],
      "Key": "refuses-2018-papers-critique-2-files-as-directories-some-thoughts-on-accessing-structured-data-within-files",
      "PersonsString": "Philip Tchernavskij",
      "Title": "Critique (1) - Files as Directories: Some Thoughts on Accessing Structured Data Within Files",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-critique-2-files-as-directories-some-thoughts-on-accessing-structured-data-within-files"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Alan Turing Institute",
        ""
      ],
      "AffiliationsString": "Alan Turing Institute, ",
      "Authors": [
        "tomaspetricek",
        "lukechurch"
      ],
      "Key": "refuses-2018-papers-welcome-to-salon-des-refus-s",
      "PersonsString": "Tomas Petricek and Luke Church",
      "Title": "Welcome to Salon des Refusés",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-welcome-to-salon-des-refus-s"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["lukechurch"],
      "Key": "refuses-2018-papers-critique-lector-in-codigo-or-the-role-of-the-reader",
      "PersonsString": "Luke Church",
      "Title": "Critique - Lector in Codigo or The Role of the Reader",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-critique-lector-in-codigo-or-the-role-of-the-reader"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "refuses-2018-papers-discussion-evaluating-novel-programming-research-ideas",
      "PersonsString": "",
      "Title": "Discussion - What next for Salon des Refusés",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-discussion-evaluating-novel-programming-research-ideas"
    },
    {
      "Abstract": "This paper explores the concept of file as directory (FAD) as a unified interface to structured data within a file by representing such a file as (virtual) directory and the structured data as subdirectories and subfiles. Transparent conversion of files an their structured data into directory trees is to be handled by virtual filesystem providers. This allows for arbitrary applications and programming languages to read and write data within supported file types without the need to understand the file format - e.g., in order to modify pixel values within an image file, paragraphs in a text document, or settings in a configuration file. Advantages of this approach compared to API-mediated file access might include better learnability, modularity, explorability, synchronous access, better integration of proprietary applications, and a few other nice features. While technical issues of the FAD concept have been discussed by developers in the past, no major operating system allows FAD at the moment. In this paper I present concept, advantages, limitations, and use cases of FAD.",
      "Affiliations": ["University of Regensburg"],
      "AffiliationsString": "University of Regensburg",
      "Authors": ["raphaelwimmer"],
      "Key": "refuses-2018-papers-files-as-directories-some-thoughts-on-accessing-structured-data-within-files",
      "PersonsString": "Raphael Wimmer",
      "Title": "Files as Directories: Some Thoughts on Accessing Structured Data Within Files",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-files-as-directories-some-thoughts-on-accessing-structured-data-within-files"
    },
    {
      "Abstract": "Most people interested in developing new programming languages or programming environments are looking at how to improve the syntax and semantics of the program text or at tools that help make programmers more productive at crafting the program text. What we need is a more fundamental change to the conception of what a program is. This paper introduces a new, semiotic programming environment in which we program with signs in a context, rather than with symbols in a text file and where we treat dialogue rather than functions as the dominant organising principle of our code. All of the information held in this environment is managed in a distributed, semiotic graph that is organized into multiple ontological spaces. Taken together these enable our programs and data to have greater semantic depth. Finally the paper gives a brief introduction to \u2018Semprola\u2019, a Semiotic Programming Language that can be used in this semiotic programming environment. The workshop will involve a short demo of the developing implementation of Semprola",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olisharpe"],
      "Key": "refuses-2018-papers-semprola-a-semiotic-programming-language",
      "PersonsString": "Oli Sharpe",
      "Title": "Semprola: A Semiotic Programming Language",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-semprola-a-semiotic-programming-language"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["antranigbasman"],
      "Key": "refuses-2018-papers-critique-semprola-a-semiotic-programming-language",
      "PersonsString": "Antranig Basman",
      "Title": "Critique - Semprola: A Semiotic Programming Language",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-critique-semprola-a-semiotic-programming-language"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["stephenkell"],
      "Key": "refuses-2018-papers-critique-files-as-directories-some-thoughts-on-accessing-structured-data-within-files",
      "PersonsString": "Stephen Kell",
      "Title": "Critique (2) - Files as Directories: Some Thoughts on Accessing Structured Data Within Files",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-critique-files-as-directories-some-thoughts-on-accessing-structured-data-within-files"
    },
    {
      "Abstract": "In this article I want to explore the relation between the process of writing computer programs with that of writing literary works of fiction. In particular I want to see what parallels can we trace from the literary theories presented by Umberto Eco in Lector in Fabula and Six Walks in the Fictional Woods, with the way we write programs today. The goal of this article is to ask the following questions: what can we learn as programmers from literary theory? What ideas can we incorporate from that discipline into our day to day programming activities, so we write code that\u2019s easier to understand for other humans (or our future selves)? In this article first I will introduce some literary concepts that are key to these discussions, like those of Model Reader and the Encyclopedia, while trying to relate them to programming. Without further ado, let\u2019s enter the woods and lets try to navigate the garden of the forking paths.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alvarovidela"],
      "Key": "refuses-2018-papers-lector-in-codigo-or-the-role-of-the-reader",
      "PersonsString": "Alvaro Videla",
      "Title": "Lector in Codigo or The Role of the Reader",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-lector-in-codigo-or-the-role-of-the-reader"
    },
    {
      "Abstract": "",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "refuses-2018-papers-critique-externalizing-co-occurence-potentializing-and-reifying-interactions",
      "PersonsString": "Tomas Petricek",
      "Title": "Critique - An Anatomy of Interaction: Co-Occurrences and Entanglements",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-critique-externalizing-co-occurence-potentializing-and-reifying-interactions"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Ex Situ | Université Paris-Sud",
        "",
        ""
      ],
      "AffiliationsString": ", Ex Situ | Université Paris-Sud",
      "Authors": [
        "antranigbasman",
        "philiptchernavskij",
        "simonbates",
        "michelbeaudouinlafon"
      ],
      "Key": "refuses-2018-papers-externalizing-co-occurence-potentializing-and-reifying-interactions",
      "PersonsString": "Antranig Basman, Philip Tchernavskij, Simon Bates and Michel Beaudouin-Lafon",
      "Title": "An Anatomy of Interaction: Co-Occurrences and Entanglements",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/refuses-2018-papers-externalizing-co-occurence-potentializing-and-reifying-interactions"
    },
    {
      "Abstract": "While an integral part of all programming languages, the design of collection libraries is rarely studied. This work brie y reviews the collection libraries of 14 languages to identify possible design dimensions. Some languages have surprisingly few but versatile collections, while others have large libraries with many specialized collections. Based on the identified design dimensions, we argue that a small collection library with only a sequence, a map, and a set type are a suitable choice to facilitate exploratory programming. Such a design minimizes the number of decisions programmers have to make when dealing with collections, and it improves discoverability of collection operations. We further discuss techniques that make their implementation practical from a performance perspective. Based on these arguments, we conclude that languages which aim to support exploratory programming should strive for small and versatile collection libraries.",
      "Affiliations": [
        "University of Kent",
        "JKU Linz, Austria"
      ],
      "AffiliationsString": "University of Kent, JKU Linz, Austria",
      "Authors": [
        "stefanmarr",
        "benoitdaloze"
      ],
      "Key": "px-2018-papers-few-versatile-vs-many-specialized-collections",
      "PersonsString": "Stefan Marr and Benoit Daloze",
      "Title": "Few Versatile vs. Many Specialized Collections",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-few-versatile-vs-many-specialized-collections"
    },
    {
      "Abstract": "The POSIX shell is the standard tool to deploy, control, and maintain systems of all kinds; the shell is used on a sliding scale from one-o commands in an interactive mode all the way to complex scripts managing, e.g., system boot sequences. For all of its utility, the POSIX shell is feared and maligned as a programming language: the shell is feared because of its incredible power, where a single command can destroy not just local but also remote systems; the shell is maligned because its semantics are non-standard, using word expansion where other languages would use evaluation. \nI conjecture that word expansion is in fact an essential piece of the POSIX shell\u2019s interactivity; word expansion is well adapted to the shell\u2019s use cases and contributes critically to the shell\u2019s interactive feel.",
      "Affiliations": ["Pomona College"],
      "AffiliationsString": "Pomona College",
      "Authors": ["michaelgreenberg"],
      "Key": "px-2018-papers-word-expansion-supports-posix-shell-interactivity",
      "PersonsString": "Michael Greenberg",
      "Title": "Word expansion supports POSIX shell interactivity",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-word-expansion-supports-posix-shell-interactivity"
    },
    {
      "Abstract": "Contemporary IDEs know a whole lot about the programming languages they are intended for. They know their syntax and static semantics (including type and name binding rules); they know how to fix malformedness (both syntactic and static semantic), how to complete programs, and sometimes also how to refactor them (even though this is the hardest, as the necessary behaviour preservation usually requires static regard of the dynamic semantics of a programming language). In fact, it seems fair to say that the IDE knows more about a programming language than the average programmer using it. The one thing it does not know is the program the programmer wants to write. \nIn his 2016 SPLASH keynote \u201cHow to Tell a Compiler What We Think We Know?\u201d, Guy Steele suggested that programming should be like a conversation with the compiler. To some extent, this is already the case: the IDE checks the input of the programmer and reports errors in a problems view; it also makes suggestions how to x the errors, and how to complete an incomplete program. While this may not be quite what Steele had in mind, the current static checking implemented by an IDE can readily be extended by additional checks (see, e.g., [3]) and, assuming the programmer is ready to spell out formal specifications to the IDE, ultimately also with theorem proving that decides whether an entered program fulfills this specification (and, if not, aids the programmer with making it do so). \nHowever, even if reduced to basic static checking, the current situation is a far cry from this vision. Instead, IDEs make suggestions that seem surprisingly ignorant of even the simplest well-formedness rules \u2014 for instance, error fixes and code completions regularly suggest changes that introduce (new) errors (refactoring tools are notorious for doing so anyhow). Also, as a conversation partner, the IDE is rather passive \u2014 except for issuing error reports, it remains silent unless prompted for help. \nTechnically, there is no need for this ignorance or passiveness: given its perfect knowledge of syntax and static semantics, an IDE could at all times engage the programmer in a dialogue in which the programmer expresses intended changes and the IDE responds immediately with complementing changes necessary to maintain well-formedness. This would stop the problems view from folling and, particularly compelling, save the programmer from having to undo long chains of changes because at some point it turns out that an earlier decision was wrong (as evidenced by the fact that a current malformedness is impossible to x without undoing). Such dialogues are possible (see, e.g., our prior work [9\u201311]) and can even be automatically derived from a program and a formal specification of a programming language [6\u20138, 10, 12]; yet, it is unclear whether programmers really want to program in such a way and, what is more important for the long term programmer experience, whether such a more dialogue-style programming will ultimately lead to better results.",
      "Affiliations": ["Fernuniversität"],
      "AffiliationsString": "Fernuniversität",
      "Authors": ["friedrichsteimann"],
      "Key": "px-2018-papers-the-fun-of-being-wrong-or-the-game-of-programmer-vs-ide",
      "PersonsString": "Friedrich Steimann",
      "Title": "The Fun of Being Wrong, or: The Game of Programmer vs. IDE",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-the-fun-of-being-wrong-or-the-game-of-programmer-vs-ide"
    },
    {
      "Abstract": "PalCom is a middleware toolkit for pervasive computing and internet-of-things. We discuss how PalCom supports exploration and live programming, giving an example of constructing a simple photo booth application.",
      "Affiliations": [
        "Lund University, Sweden",
        "Lund University, Sweden",
        "",
        "Lund University, Sweden"
      ],
      "AffiliationsString": "Lund University, Sweden, ",
      "Authors": [
        "alfredakesson",
        "mattiasnordahl",
        "gorelhedin1",
        "borismagnusson"
      ],
      "Key": "px-2018-papers-live-programming-of-internet-of-things-in-palcom",
      "PersonsString": "Alfred Åkesson, Mattias Nordahl, Görel Hedin and Boris Magnusson",
      "Title": "Live Programming of Internet of Things in PalCom",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-live-programming-of-internet-of-things-in-palcom"
    },
    {
      "Abstract": "We present Nezt \u2013 a live programming environment inspired by spreadsheets, but with a more expressive computational model. In contrast to traditional spreadsheets, cells can contain other cells in a hierarchical fashion, and one can define custom functions and use them in formulas. Our goal is to match the accessibility, immediacy and ease of use of spreadsheets, while achieving broader applicability, especially in the areas of application prototyping and scientific computing. Design influences include Excel, Lisp, JetBrains MPS and Boxer. We are developing a prototype in Typescript. Features like collaborative real-time editing, version control, static analysis and automated testing will be gradually implemented. The ultimate goal is a powerful end-user programming environment without the accidental complexities of mainstream professional programming.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "pavelbazant",
        "michaelamarsalkova"
      ],
      "Key": "px-2018-papers-a-non-tabular-spreadsheet-with-broad-applicability",
      "PersonsString": "Pavel Bažant and Michaela Maršálková",
      "Title": "A Non-Tabular Spreadsheet with Broad Applicability",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-a-non-tabular-spreadsheet-with-broad-applicability"
    },
    {
      "Abstract": "A new way to code up social apps emerges from studying how people use ordinary speech to set up social roles and obligations. Sentences like \u201cwhoever hosts the potluck has to contact the guests\u201d and \u201conce two people swipe right on each other, they can exchange messages\u201d are made machine interpretable with a little extra punctuation. This approach\u2013combined with a shared database of these social rules\u2013leads to social software that works more like social conventions: it can be defied, expressively reinterpreted, and remodeled by the user. It also leads to much more flexible style of coordination, with greater support for individual leadership, individual discretion, and more open-ended collaborations. This can address a number of modern social ills.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["joeedelman"],
      "Key": "px-2018-papers-social-programming-considered-as-a-habitat-for-groups",
      "PersonsString": "Joe Edelman",
      "Title": "Social Programming Considered as a Habitat for Groups",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-social-programming-considered-as-a-habitat-for-groups"
    },
    {
      "Abstract": "When engaging in exploratory programming, the activities of exploring, understanding, implementing, and using objects of a particular domain should ideally be tightly interwoven to allow for short feedback cycles and continuous progress toward desired levels of comprehension and knowledge. However, when working with plain data objects using state-of-the-art development tools, programmers often have to resort to a more sequential work ow in which they first need to understand the model, then implement it, and only afterwards can start using and exploring it. \nIn this proposal, we want to illustrate how our exploration workspace tool allows for interleaving these activities to better support the exploration of objects programmers are not fully acquainted with. We achieve this by trying to tolerate deviations of the protocol assumed from the one actually provided by the objects the programmers wish to interact with. For that, we strive for non-intrusive tool support that helps to semi-automatically build up the vocabulary preferred in interactions. We also suggest to consolidate both domain object implementations and exploration scripts once learning progressed. \nIn a demonstration, we will illustrate various resolution strategies applied during the implementation of a geographical map showing social media posts and photos.",
      "Affiliations": [
        "Hasso Plattner Institute",
        "HPI"
      ],
      "AffiliationsString": "Hasso Plattner Institute, HPI",
      "Authors": [
        "patrickrein",
        "roberthirschfeld"
      ],
      "Key": "px-2018-papers-the-exploration-workspace-interleaving-the-implementation-and-usage-of-plain-objects",
      "PersonsString": "Patrick Rein and Robert Hirschfeld",
      "Title": "The Exploration Workspace: Interleaving the Implementation and Usage of Plain Objects",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-the-exploration-workspace-interleaving-the-implementation-and-usage-of-plain-objects"
    },
    {
      "Abstract": "\u201cImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they design and code \u2014 and sometimes they discover they need to explore the domain and the nature of potential solutions.\" (from the call for papers) \nOK, the group of developers head into that vast workroom. Requirements and specification are complex, the programmers are more than a handful, and work division is all but self-evident. In particular, even though they can agree on an initial work distribution, there is no clear module structure, and stable interfaces yet need to emerge. \nSo, what do they do? After an initial stand-up, they open their laptops and start their editors. Of course, they use ver- sion control, and yes, version control is file-based, so they edit files, even if they fancy their projectional editor. They use a build tool, too, so from time to time, they integrate their work. As always, integration uncovers inconsistency, and requires changes in various places. That\u2019s when the initial excitement starts fading, and the sobering pains of collaboration take over. \n\u201cHey, Ada, I need to change the signature of this method C.m() you have been working on. Any problem with that?\u201d asks Ben. \u201cNo\u201d replies Ada, \u201cbut let me finish my working on method C.n first. I\u2019ll let you know when I\u2019m done!\u201d Of course, Ben could have just changed the current version in the repository, and let Ada discover and merge the change after her (vain) attempt of checking in her own changes (a strategy referred to as optimistic locking), but Ben knows the pain of merging himself, and considers it impolite to rush in his changes and leave the cleaning up to others. Ada on the other hand knows that she has the habit of working on many files simultaneously, and acquiring a write lock on each of these les (a strategy known as pessimistic locking) will stall the progress of others, and will make her appear uneasy to work with. So, Ben and Ada, like the rest of the team, coordinate their edits using informal conversation on Slack, improvising, for most parts, pessimistic locking (\u201cAnyone working on file C? If not, let me have the lock and I will let you know when I\u2019m finished.\u201d), using optimistic locking mostly as an indicator that collaboration went wrong (\u201cWho changed file C I\u2019ve been working on for the past three days? OK, I\u2019ll send you my copy so that you can do the merging!\u201d). Although this informal conversation may be good for the team (if only to keep everyone updated about progress and responsibilities), it seems to be primarily a consequence of inappropriate tooling; specifically, of a technical dependency on les and thus on an artifact of operating systems that is foreign \u2014 at least as a language construct \u2014 to literally all modern programming languages.",
      "Affiliations": ["Fernuniversität"],
      "AffiliationsString": "Fernuniversität",
      "Authors": ["friedrichsteimann"],
      "Key": "px-2018-papers-acid-for-programmers-",
      "PersonsString": "Friedrich Steimann",
      "Title": "ACID for Programmers!",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-acid-for-programmers-"
    },
    {
      "Abstract": "Reactive programming is a recent programming paradigm that specifically targets reactive applications. Over the years, a number of reactive languages has been proposed, with different combinations of features, and various target domains. \nUnfortunately, there is a lack of knowledge about the experience of developing software applications with reactive languages. As a result, a number of design choices in reactive programming languages remain disconnected from experience and the applicability of reactive programming to various domains remains unclear. \nTo bridge this gap, we report on our experience of developing reactive applications as well teaching reactive programming in REScala, which we collected over several years of research and practice.",
      "Affiliations": [
        "Technische Universität Darmstadt",
        "TU Darmstadt",
        "TU Darmstadt"
      ],
      "AffiliationsString": "Technische Universität Darmstadt, TU Darmstadt",
      "Authors": [
        "ragnarmogk",
        "guidosalvaneschi",
        "miramezini"
      ],
      "Key": "px-2018-papers-reactive-programming-experience-with-rescala",
      "PersonsString": "Ragnar Mogk, Guido Salvaneschi and Mira Mezini",
      "Title": "Reactive Programming Experience with REScala",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-reactive-programming-experience-with-rescala"
    },
    {
      "Abstract": "There are style guides and best practices for many programming languages. Their goal is to promote uniformity and readability of code, consequentially reducing the chance of errors. \nWhile programmers who are frequently using the same programming language tend to internalize most of its best practices eventually, little is known about what happens when they casually switch languages and write code in a less familiar language. Insights into the factors that lead to coding convention violations could help to improve tutorials for programmers switching languages, make teachers aware of mistakes they might expect depending on what language students have been using before, or influence the order in which programming languages are taught. \nTo approach this question, we make use of a large-scale data set representing a major part of the open source development activity happening on GitHub. In this data set, we search for Java and C++ programmers that occasionally program Python and study their Python code quality using a lint tool. \nComparing their defect rates to those from Python programmers reveals significant effects in both directions: We observe that some of Python\u2019s best practices have more widespread adoption among Java and C++ programmers than Python experts. At the same time, python-specific coding conventions, especially indentation, scoping, and the use of semicolons, are violated more frequently. \nWe conclude that programming off-language is not generally associated with better or worse code quality, but individual coding conventions are violated more or less frequently depending on whether they are more universal or language-specific. We intend to motivate a discussion and more research on what causes these effects, how we can mitigate or use them for good, and which related effects can be studied using the presented data set.",
      "Affiliations": [
        "",
        "Hasso Plattner Institute",
        "HPI"
      ],
      "AffiliationsString": ", Hasso Plattner Institute, HPI",
      "Authors": [
        "siegfriedhorschig",
        "tonimattis",
        "roberthirschfeld"
      ],
      "Key": "px-2018-papers-do-java-programmers-write-be-er-python-studying-off-language-code-quality-on-github",
      "PersonsString": "Siegfried Horschig, Toni Mattis and Robert Hirschfeld",
      "Title": "Do Java Programmers Write Better Python? \u2013 Studying Off-Language Code Quality on GitHub",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-do-java-programmers-write-be-er-python-studying-off-language-code-quality-on-github"
    },
    {
      "Abstract": "Observing and modifying object-oriented programs often means interacting with objects. At runtime, it can be a complex task to identify those objects due to the live state of the program. Some objects may exist for only a very limited period of time, others can be hardly reachable because they are never stored in variables. To address this problem we present the Collectors. They are dedicated objects which can collect objects of interest at runtime and present them to the developer. Collectors are non-intrusive, removable code instrumentations. They can be dynamically specified and injected at runtime. They expose an API to allow their specification and the access to the collected objects. In this paper, we present an implementation of Collectors in Pharo, a Smalltalk dialect. We enrich the Pharo programming and debugging environment with tools that support the Collectors API. We illustrate the use of these API and tools through the collection and the logging of specific objects in a running IOT application.",
      "Affiliations": [
        "University of Brest",
        "University of Brest",
        "University of Occidental  Brittary, France",
        " INRIA Lille"
      ],
      "AffiliationsString": "University of Brest, University of Occidental  Brittary, France,  INRIA Lille",
      "Authors": [
        "stevencostiou",
        "mickaelkerboeuf",
        "alainplantec",
        "marcusdenker"
      ],
      "Key": "px-2018-papers-collectors",
      "PersonsString": "Steven Costiou, Mickael Kerboeuf, Alain Plantec and Marcus Denker",
      "Title": "Collectors",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-collectors"
    },
    {
      "Abstract": "Neural networks are gaining popularity in software engineering. This paper presents a dedicated API and visual environment to train and use a neural networks on software source code related data. This short paper illustrates the API using two examples involving prediction of source code properties.",
      "Affiliations": [
        "University of Chile",
        "Université de Yaoundé",
        "UPMC & INRIA"
      ],
      "AffiliationsString": "University of Chile, Université de Yaoundé, UPMC & INRIA",
      "Authors": [
        "alexandrebergel",
        "paulinmelatagia",
        "sergestinckwich"
      ],
      "Key": "px-2018-papers-an-api-and-visual-environment-to-use-neural-network-to-reason-about-source-code",
      "PersonsString": "Alexandre Bergel, Paulin Melatagia and Serge Stinckwich ",
      "Title": "An API and Visual Environment to use Neural Network To Reason About Source Code",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-an-api-and-visual-environment-to-use-neural-network-to-reason-about-source-code"
    },
    {
      "Abstract": "Programming instructors seek new ways to present code to novice programmers. It is important to understand how these new presentation methods affect students. We prototyped three different ways to animate the presentation of code. We used eye-tracking technology to observe participants as they were presented with animations and completed three activities: code summarization, syntax error correction, and logic error correction. The prototypes, our method for observation, and our analysis methods were each informed by previous research. We observed variation in how participants consumed animations. Our initial results indicate that viewing animations of a single textual representation of source code may affect the attentional processes of novice programmers during subsequent tasks.",
      "Affiliations": [
        "University of Washington, USA",
        "University of Michigan",
        "University of Michigan"
      ],
      "AffiliationsString": "University of Washington, USA, University of Michigan",
      "Authors": [
        "louisspinelli",
        "maulishreepandey",
        "stephenoney"
      ],
      "Key": "px-2018-papers-attention-patterns-for-code-animations",
      "PersonsString": "Louis Spinelli, Maulishree Pandey and Stephen Oney",
      "Title": "Attention Patterns for Code Animations: Using Eye Trackers to Evaluate Dynamic Code Presentation Techniques",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/px-2018-papers-attention-patterns-for-code-animations"
    },
    {
      "Abstract": "Profunctor optics are composable building blocks used to define bidirectional data accessors. They form a powerful language to describe transformations of data. Unfortunately, contrary to more familiar optics like put-get lenses, profunctor optics have a complex type that makes them difficult to reason about. Moreover, linking usual optics with an equivalent profunctor representation has so far been done on a case-by-case basis, with definitions that sometimes feel very ad hoc. This makes it hard both to analyse properties of existing profunctor optics and to define new ones. This extended abstract proposes a general form for profunctor optics, and presents an equivalent representation called existential optics that is closer to intuition. This representation enables easier understanding of how profunctor optics function and are combined, as well as easier definition of useful new such optics.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["guillaumebouisseau"],
      "Key": "bx-2018-papers-understanding-profunctor-optics-a-representation-theorem",
      "PersonsString": "Guillaume Bouisseau",
      "Title": "Understanding Profunctor Optics: a representation theorem",
      "Type": "Short-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-understanding-profunctor-optics-a-representation-theorem"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "bx-2018-papers-closing",
      "PersonsString": "",
      "Title": "Closing",
      "Type": "Day closing",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-closing"
    },
    {
      "Abstract": "Bidirectional transformation systems usually have a more declarative design, but it has long been realised that declarative approaches are hardly enough for practical bidirectional applications. The BX community currently concentrates on the exploration of more forms of well-behavedness laws, but we should not be satisfied with only well-behavedness guarantees. Instead, we should also start aiming to precisely reason about the behaviour of bidirectional programs like what we have been doing for general-purpose languages, and only then can we think about more complex bidirectional applications and the verification of their consistency restoration behaviour. We will talk about the Hoare-style logic recently presented at POPL 2018 for our putback-based bidirectional language BiGUL (for programming state-based asymmetric lenses), and discuss this direction with the community.",
      "Affiliations": [
        "National Institute of Informatics, Japan",
        "National Institute of Informatics"
      ],
      "AffiliationsString": "National Institute of Informatics, Japan, National Institute of Informatics",
      "Authors": [
        "hsiangshangko",
        "zhenjianghu"
      ],
      "Key": "bx-2018-papers-an-axiomatic-basis-for-bidirectional-programming",
      "PersonsString": "Hsiang-Shang \u2018Josh\u2019 Ko and Zhenjiang Hu",
      "Title": "An Axiomatic Basis for Bidirectional Programming",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-an-axiomatic-basis-for-bidirectional-programming"
    },
    {
      "Abstract": "Model-driven development aims to enable the separation of concerns in software development, by allowing different people to work with different models which are automatically reconciled, eventually all contributing to running software. A key motivator for studying bidirectional transformation is the recognition that these models may not naturally fall into a strict hierarchy: rather, the information in them typically overlaps. Recently, the Bx community has started to pay more attention to situations involving more than two models that must be bidirectionally related. A megamodel can specify what models exist and the relationships between them. Among the MDD problems that are not yet fully solved is how to manage the process of reconciling the models, and ultimately building software, especially given that inconsistencies between models may need to be resolved by different means under different circumstances; for example, a bidirectional transformation may need to be applied in one direction or the other. A distinct but related problem is how to build software from a collection of artefacts such as source code files. Here a key challenge is to marry correctness (a successful build always incorporates the latest versions of relevant artefacts) with efficiency (no unnecessary rebuild steps or checks). \nThis talk describes ongoing work bringing recent advances in provably correct and optimal build systems to bear on the problem of building software from a collection of many bidirectionally-related models described by a megamodel.",
      "Affiliations": ["University of Edinburgh"],
      "AffiliationsString": "University of Edinburgh",
      "Authors": ["perditastevens"],
      "Key": "bx-2018-papers-towards-sound-flexible-and-optimal-build-for-megamodels",
      "PersonsString": "Perdita Stevens",
      "Title": "Towards sound, flexible and optimal build for megamodels",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-towards-sound-flexible-and-optimal-build-for-megamodels"
    },
    {
      "Abstract": "The synchronisation of n≥ 2 heterogenously typed models requires a thorough understanding of global consistency rules. After having related these models by determining identical entities in them, we express the global rules in terms of diagrammatic predicates imposed on a comprehensive metamodel, which integrates the structural properties of all involved model spaces. If the global rules are violated, a possible subsequent consistency restoration can make use of formal descriptions for the verification of these rules. The comprehensive metamodel is constructed in the category of directed graphs. If there is an arbitrary number of related models, comprehensive artefacts can formally be represented by colimits, i.e. by universal categorical constructions. The goal of the paper is to establish a practical algorithm for this construction. The main example, a web service integration scenario from the health care domain, also shows that relating graph morphisms may be non-injective, which is incorporated into the algorithm.",
      "Affiliations": [
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "patrickstunkel",
        "haraldkonig",
        "yngvelamo",
        "adrianrutle1"
      ],
      "Key": "bx-2018-papers-multimodel-correspondence-through-inter-model-constraints",
      "PersonsString": "Patrick Stünkel, Harald König, Yngve Lamo and Adrian Rutle",
      "Title": "Multimodel Correspondence through Inter-Model Constraints",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-multimodel-correspondence-through-inter-model-constraints"
    },
    {
      "Abstract": "Compositional game theory concerns open games, which are building blocks from which games can be built in a compositional way. At first glance (and at first in the historical development of the topic) this has nothing to do with bx, but a certain notion of lens has turned out to be central to the study of open games. The goal of this talk is to introduce open games to the bx community, and discuss some ways in which the theory of lenses is proving useful to compositional game theory.",
      "Affiliations": ["University of Oxford"],
      "AffiliationsString": "University of Oxford",
      "Authors": ["juleshedges"],
      "Key": "bx-2018-papers-bimorphic-lenses-in-compositional-game-theory",
      "PersonsString": "Jules Hedges",
      "Title": "Bimorphic lenses in compositional game theory",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-bimorphic-lenses-in-compositional-game-theory"
    },
    {
      "Abstract": "Languages for programming state-based asymmetric lenses are usually based on lens combinators, whose style, having a functional programming origin, is alien to most programmers and awkward to use even for experienced functional programmers. We propose a visual syntax mimicking circuit diagrams for the combinator-based language BiGUL, provide a relational interpretation that allows the diagrams to be understood bidirectionally, and sketch how an editor for the visual syntax can help to construct, understand, and debug lens combinator programs in an intuitive and friendly way.",
      "Affiliations": [
        "Paderborn University, Germany",
        "National Institute of Informatics, Japan"
      ],
      "AffiliationsString": "Paderborn University, Germany, National Institute of Informatics, Japan",
      "Authors": [
        "anthonyanjorin1",
        "hsiangshangko"
      ],
      "Key": "bx-2018-papers-towards-a-visual-editor-for-lens-combinators",
      "PersonsString": "Anthony Anjorin and Hsiang-Shang \u2018Josh\u2019 Ko",
      "Title": "Towards a Visual Editor for Lens Combinators",
      "Type": "Short-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-towards-a-visual-editor-for-lens-combinators"
    },
    {
      "Abstract": "User Interface (UI) development is challenging as modern UIs are expected to be available for a wide-range of diverse and constantly changing contexts including various (mobile) platforms, users, and environments. Model-Driven Engineering (MDE) principles have been successfully applied to UI development, resulting in a clear separation into multiple UI models on different levels of abstraction. While this addresses many challenges involved in UI development, it also poses an additional challenge: ensuring that all the different UI models remain consistent during their development and maintenance. In this paper, we argue that this consistency related challenge has not yet been adequately addressed, and identify consistent UI development as a new and promising application domain for existing and future research on bidirectional transformations.",
      "Affiliations": [
        "Paderborn University, Germany",
        "University of Paderborn, Germany",
        "",
        "TU Wien, Vienna, Austria"
      ],
      "AffiliationsString": "Paderborn University, Germany, University of Paderborn, Germany, , TU Wien, Vienna, Austria",
      "Authors": [
        "anthonyanjorin1",
        "enesyigitbas",
        "hermannkaindl",
        "romanpopp"
      ],
      "Key": "bx-2018-papers-on-the-development-of-consistent-user-interfaces",
      "PersonsString": "Anthony Anjorin, Enes Yigitbas, Hermann Kaindl and Roman Popp",
      "Title": "On the Development of Consistent User Interfaces ",
      "Type": "Short-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-on-the-development-of-consistent-user-interfaces"
    },
    {
      "Abstract": "We characterize those symmetric d-lenses which are representable as cospans of d-lenses. Such a symmetric d-lens must have unique corrs per pair of objects and satisfy two other technical conditions. When the d-lens is also ``least change'' then the corresponding cospan consists of c-lenses.",
      "Affiliations": [
        "Macquarie University, Australia",
        ""
      ],
      "AffiliationsString": "Macquarie University, Australia, ",
      "Authors": [
        "michaeljohnson",
        "robertrosebrugh"
      ],
      "Key": "bx-2018-papers-cospans-and-symmetric-lenses",
      "PersonsString": "Michael Johnson and Robert Rosebrugh",
      "Title": "Cospans and Symmetric Lenses",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-cospans-and-symmetric-lenses"
    },
    {
      "Abstract": "Profunctor optics are a neat and composable representation of bidirectional data accessors, including lenses, and their dual, prisms. The profunctor representation exploits higher-order functions and higher-kinded type constructor classes. The relationship between this and the familiar representation in terms of \u201cgetter\u201d and \u201csetter\u201d functions is not at all obvious. We derive of the former from the latter, making the relationship clear. It turns out to be a fairly direct application of the Yoneda Lemma, arguably the most important result in category theory. We hope this derivation aids understanding of the profunctor representation. Conversely, it might also serve to provide some insight for BXers into the Yoneda Lemma. The key observation is due to Bartosz Milewski, but not published anywhere.",
      "Affiliations": [
        "Department of Computer Science, University of Oxford",
        ""
      ],
      "AffiliationsString": "Department of Computer Science, University of Oxford, ",
      "Authors": [
        "jeremygibbons",
        "guillaumebouisseau"
      ],
      "Key": "bx-2018-papers-profunctor-optics-and-the-yoneda-lemma",
      "PersonsString": "Jeremy Gibbons and Guillaume Bouisseau",
      "Title": "Profunctor Optics and the Yoneda Lemma",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-profunctor-optics-and-the-yoneda-lemma"
    },
    {
      "Abstract": "In Model-Driven Engineering, the potential advantages of using bidirectional transformations in various scenarios are largely recognized; as for instance, assuring the overall consistency of a set of interrelated models which requires the capability of propagating changes back and forth the transformation chain. Among the existing approaches, JTL (Janus Transformation Language) is a constraint-based bidirectional transformation language specifically tailored to support change propagation and non-deterministic transformations. In fact, its relational and constraint-based semantics allows to restore consistency by returning all admissible models. This paper introduces the new implementation of the language and presents the tools and its features by means of a running example.",
      "Affiliations": [
        "University of L'Aquila",
        "",
        ""
      ],
      "AffiliationsString": "University of L'Aquila, ",
      "Authors": [
        "rominaeramo",
        "alfonsopierantonio",
        "micheletucci"
      ],
      "Key": "bx-2018-papers-enhancing-the-jtl-tool-for-bidirectional-transformations",
      "PersonsString": "Romina Eramo, Alfonso Pierantonio and Michele Tucci",
      "Title": "Enhancing the JTL Tool for Bidirectional Transformations",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-enhancing-the-jtl-tool-for-bidirectional-transformations"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "bx-2018-papers-opening",
      "PersonsString": "",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-opening"
    },
    {
      "Abstract": "Much is now understood about how to develop software that will have good security properties in use. We claim that a topic which needs more attention, in particular from the Bx community, is security, especially confidentiality, in the software development process itself. What is then at issue is not what particular users of the software may be allowed to know, but rather, what particular developers of the software may be allowed to know. How can software development processes guarantee to respect confidentiality without compromising effective development? The question is of general interest across software engineering, but model-driven development (MDD) seems a particularly promising arena in which to address it, because of MDD\u2019s focus on separation of concerns. In MDD, different people work with separate models, where (ideally) each model records all and only the information necessary to those who work with it. When necessary, the models are reconciled by bidirectional transformations, which automate a process which would otherwise have to be undertaken manually by the groups of experts meeting and studying both their models in order to bring them back into consistency. In model-driven development confidentiality issues become particularly clear and tractable, and bidirectional transformations have a key technical role. We hope to encourage the community to take up this challenge, and in this paper we begin our own analysis of a selection of the issues, focusing particularly on developing a threat model and some examples of secure restoration of consistency.",
      "Affiliations": [
        "Macquarie University, Australia",
        "University of Edinburgh"
      ],
      "AffiliationsString": "Macquarie University, Australia, University of Edinburgh",
      "Authors": [
        "michaeljohnson",
        "perditastevens"
      ],
      "Key": "bx-2018-papers-confidentiality-in-the-process-of-model-driven-software-development",
      "PersonsString": "Michael Johnson and Perdita Stevens",
      "Title": "Confidentiality in the process of (model-driven) software development",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-confidentiality-in-the-process-of-model-driven-software-development"
    },
    {
      "Abstract": "Although the data sharing and synchronizing problems have been raised many years ago, they remain major issues in the database community. Still, some tools are provided to end-users in order to answer some of their needs. Yet, those platforms are most likely very complicated to handle notably because they ask the user to have very much knowledge, the user sometimes being the developer. Also, most of those systems do not really insure data consistency. Our approach based on bidirectional transformations (BXs) resolves collaboration between companies having their own data structure in an easier way, guaranteeing data consistency thanks to BXs. All this means that the user does not need to know databases structure other than his and the shared mappings, and will also never be asked to use pure code or database knowledge, limiting then the complexity. In addition to this, the system profits the bidirectional transformations properties to authorize or not editing the shared data. The bidirectional functions coded in BiGUL have indeed the power to grant or not any other user in the sharing group to edit the data. Moreover, the system is extensible in the way that the user can easily join a sharing group, after providing to the bidirectional functions a GLAV mapping table matching his local structure with the shared one.",
      "Affiliations": [
        "",
        "",
        "National Institute of Informatics",
        "University of Namur"
      ],
      "AffiliationsString": ", National Institute of Informatics, University of Namur",
      "Authors": [
        "adrienduchene",
        "huguesmarchal",
        "zhenjianghu",
        "pierreyvesschobbens"
      ],
      "Key": "bx-2018-papers-lightweight-data-sharing-system-based-on-bidirectional-transformations",
      "PersonsString": "Adrien Duchêne, Hugues Marchal, Zhenjiang Hu and Pierre Yves Schobbens",
      "Title": "Lightweight Data Sharing System based on Bidirectional Transformations",
      "Type": "Full-paper",
      "URL": "https://2018.programming-conference.org/event/bx-2018-papers-lightweight-data-sharing-system-based-on-bidirectional-transformations"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-src-src-second-round-oral-presentation",
      "PersonsString": "",
      "Title": "SRC Second Round: Oral Presentation",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-src-second-round-oral-presentation"
    },
    {
      "Abstract": "",
      "Affiliations": ["Johannes Kepler University Linz"],
      "AffiliationsString": "Johannes Kepler University Linz",
      "Authors": ["manuelrigger"],
      "Key": "programming-2018-src-sandboxed-execution-of-c-and-other-unsafe-languages-on-the-java-virtual-machine",
      "PersonsString": "Manuel Rigger",
      "Title": "Sandboxed Execution of C and Other Unsafe Languages on the Java Virtual Machine",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-sandboxed-execution-of-c-and-other-unsafe-languages-on-the-java-virtual-machine"
    },
    {
      "Abstract": "Scientific progress increasingly depends on data management, particularly to clean and curate data so that it can be systematically analyzed and reused. A wealth of techniques for managing and curating data (and its provenance) have been proposed, largely in the database community. In particular, a number of influential papers have proposed collecting provenance information explaining where a piece of data was copied from, or what other records were used to derive it. Most of these techniques, however, exist only as research prototypes and are not available in mainstream database systems. This means scientists must either implement such techniques themselves or (all too often) go without. \nThis is essentially a code reuse problem: provenance techniques currently cannot be implemented reusably, only as ad hoc, usually unmaintained extensions to standard databases. An alternative, relatively unexplored approach is to support such techniques at a higher abstraction level, using metaprogramming or reflection techniques. Can advanced programming techniques make it easier to transfer provenance research results into practice? \nWe build on a recent approach called language-integrated provenance, which extends language-integrated query techniques with source-to-source query translations that record provenance. In previous work, a proof of concept was developed in a research programming language called Links, which supports sophisticated Web and database programming. In this paper, we show how to adapt this approach to work in Haskell building on top of the Database-Supported Haskell (DSH) library. \nEven though it seemed clear in principle that Haskell\u2019s rich programming features ought to be sufficient, implementing language-integrated provenance in Haskell required overcoming a number of technical challenges due to interactions between these capabilities. Our implementation serves as a proof of concept showing how this combination of metaprogramming features can, for the first time, make data provenance facilities available to programmers as a library in a widely-used, general-purpose language. \nIn our work we were successful in implementing forms of provenance known as where-provenance and lineage. We have tested our implementation using a simple database and query set and established that the resulting queries are constructed and executed correctly on the database. Our implementation is publicly available on GitHub. \nOur work makes provenance tracking available to users of DSH at little cost. Although Haskell is not widely used for scientific database development, our work also suggests how other languages or libraries might be extended to support provenance. Our work also highlights how combining Haskell\u2019s advanced type programming features can lead to unexpected complications, which may motivate further research.",
      "Affiliations": [
        "University of Edinburgh, UK",
        "University of Edinburgh, UK"
      ],
      "AffiliationsString": "University of Edinburgh, UK",
      "Authors": [
        "janstolarek",
        "jamescheney"
      ],
      "Key": "programming-2018-papers-language-integrated-provenance-in-haskell",
      "PersonsString": "Jan Stolarek and James Cheney",
      "Title": "Language-integrated provenance in Haskell",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-language-integrated-provenance-in-haskell"
    },
    {
      "Abstract": "The current demands for seamless connections with the surrounding environment make software more reactive. For example, such demands are evident in systems consisting of the Internet of Things. Such systems include a set of reactive values that are periodically updated in response to external or internal events to form a dataflow in the sense that such updates are propagated to other reactive values. Two effective approaches for realizing such reactive values have been proposed: the event mechanisms in event-based programming and the signals in functional-reactive programming. These two approaches are now becoming mixed in several languages such as Flapjax and REScala, which makes these languages notably expressive for modularizing the implementation of reactive software. For example, REScala provides a rich API that consists of functions converting events to signals and vice versa. \nIn this paper, we explore another, simpler approach in the design space of reactive programming languages: the event mechanism is harmonized with signals, resulting in a simplified programming interface that is mostly based on signals. Based on this approach, we realize SignalJ, a simple extension of Java with events and signals. Our notable findings are (1) an event can be represented as an update of a signal and (2) such an effectful signal can be represented using annotations instead of introducing types and constructors for signals to further simplify the language. \nAnother contribution of this paper is the formal model of SignalJ. As both mechanisms of events and signals may interfere with each other, this mixing sometimes results in surprising behavior. For example, the functional behavior of signals is affected by the imperative features of events. Thus, understanding the formal model of this mixing is actually important. The core calculus, Featherweight SignalJ (FSJ), was developed as an extension of Featherweight Java, and proofs are provided to ensure the soundness of FSJ.",
      "Affiliations": [
        "Oita University",
        "Tokyo Institute of Technology"
      ],
      "AffiliationsString": "Oita University, Tokyo Institute of Technology",
      "Authors": [
        "tetsuokamina",
        "tomoyukiaotani"
      ],
      "Key": "programming-2018-papers-harmonizing-signals-and-events-with-a-lightweight-extension-to-java",
      "PersonsString": "Tetsuo Kamina and Tomoyuki Aotani",
      "Title": "Harmonizing Signals and Events with a Lightweight Extension to Java",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-harmonizing-signals-and-events-with-a-lightweight-extension-to-java"
    },
    {
      "Abstract": "Context: Software development tools should work and behave consistently across di erent programming languages, so that developers do not have to familiarize themselves with new tooling for new languages. Also, being able to combine multiple programming languages in a program increases reusability, as developers do not have to recreate software frameworks and libraries in the language they develop in and can reuse existing software instead. \nInquiry: However, developers often have a broad choice of tools, some of which are designed for only one speci c programming language. Various Integrated Development Environments have support for multiple languages, but are usually unable to provide a consistent programming experience due to di erent languagespeci c runtime features. With regard to language integrations, common mechanisms usually use abstraction layers, such as the operating system or a network connection, which are often boundaries for tools and hence negatively a ect the programming experience. \nApproach: In this paper, we present a novel approach for tool reuse that aims to improve the experience with regard to working with multiple high-level dynamic, object-oriented programming languages. As part of this, we build a multi-language virtual execution environment and reuse Smalltalk\u2019s live programming tools for other languages. \nKnowledge: An important part of our approach is to retro t and align runtime capabilities for di erent languages as it is a requirement for providing consistent tools. Furthermore, it provides convenient means to reuse and even mix software libraries and frameworks written in di erent languages without breaking tool support. \nGrounding: The prototype system Squimera is an implementation of our approach and demonstrates that it is possible to reuse both development tools from a live programming system to improve the development experience as well as software artifacts from di erent languages to increase productivity. \nImportance: In the domain of polyglot programming systems, most research has focused on the integration of di erent languages and corresponding performance optimizations. Our work, on the other hand, focuses on tooling and the overall programming experience.",
      "Affiliations": [
        "Hasso Plattner Institute, University of Potsdam",
        "Oracle Labs, Potsdam",
        "HPI, Germany",
        "HPI",
        "Hasso Plattner Institute"
      ],
      "AffiliationsString": "Hasso Plattner Institute, University of Potsdam, Oracle Labs, Potsdam, HPI, Germany, HPI, Hasso Plattner Institute",
      "Authors": [
        "fabioniephaus",
        "timfelgentreff",
        "tobiaspape",
        "roberthirschfeld",
        "marceltaeumel"
      ],
      "Key": "programming-2018-papers-live-multi-language-development-and-runtime-environments",
      "PersonsString": "Fabio Niephaus, Tim Felgentreff, Tobias Pape, Robert Hirschfeld and Marcel Taeumel",
      "Title": "Live Multi-language Development and Runtime Environments",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-live-multi-language-development-and-runtime-environments"
    },
    {
      "Abstract": "Context. Software development pipelines are used for automating essential parts of software engineering processes, such as build automation and continuous integration testing. In particular, interactive pipelines, which process events in a live environment such as an IDE, require timely results for low-latency feedback, and persistence to retain low-latency feedback between restarts. Inquiry. Developing an incrementalized and persistent version of a pipeline is one way to reduce feedback latency, but requires implementation of dependency tracking, cache invalidation, and other complicated and error-prone techniques. Therefore, interactivity complicates pipeline development if timeliness and persistence become responsibilities of the pipeline programmer, rather than being supported by the underlying system. Systems for programming incremental and persistent pipelines exist, but do not focus on ease of development, requiring a high degree of boilerplate, increasing development and maintenance effort. Approach. We develop Pipelines for Interactive Environments (PIE), a Domain-Specific Language (DSL), API, and runtime for developing interactive software development pipelines, where ease of development is a focus. The PIE DSL is a statically typed and lexically scoped language. PIE programs are compiled to programs implementing the API, which the PIE runtime executes in an incremental and persistent way. Knowledge. PIE provides a straightforward programming model that enables direct and concise expression of pipelines without boilerplate, reducing the development and maintenance effort of pipelines. Compiled pipeline programs can be embedded into interactive environments such as code editors and IDEs, enabling timely feedback at a low cost. Grounding. Compared to the state of the art, PIE reduces the code required to express an interactive pipeline by a factor of 6 in a case study on syntax-aware editors. Furthermore, we evaluate PIE in two case studies of complex interactive software development scenarios, demonstrating that PIE can handle complex interactive pipelines in a straightforward and concise way. Importance. Interactive pipelines are complicated software artifacts that power many important systems such as continuous feedback cycles in IDEs and code editors, and live language development in language workbenches. New pipelines, and evolution of existing pipelines, is frequently necessary. Therefore, a system for easily developing and maintaining interactive pipelines, such as PIE, is important.",
      "Affiliations": [
        "Delft University of Technology",
        "Delft University of Technology",
        "TU Delft",
        "Delft University of Technology"
      ],
      "AffiliationsString": "Delft University of Technology, TU Delft",
      "Authors": [
        "gabrielkonat",
        "michaeljsteindorfer",
        "sebastianerdweg",
        "eelcovisser"
      ],
      "Key": "programming-2018-papers-pie-a-domain-specific-language-for-interactive-software-development-pipelines",
      "PersonsString": "Gabriël Konat, Michael J. Steindorfer, Sebastian Erdweg and Eelco Visser",
      "Title": "PIE: A Domain-Specific Language for Interactive Software Development Pipelines",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-pie-a-domain-specific-language-for-interactive-software-development-pipelines"
    },
    {
      "Abstract": "",
      "Affiliations": ["Hasso Plattner Institute"],
      "AffiliationsString": "Hasso Plattner Institute",
      "Authors": ["patrickrein"],
      "Key": "programming-2018-src-a-soup-of-objects-convenience-interfaces-for-accessing-domain-objects-in-a-global-object-graph",
      "PersonsString": "Patrick Rein",
      "Title": "A Soup of Objects: Convenience Interfaces for Accessing Domain Objects in a Global Object Graph",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-a-soup-of-objects-convenience-interfaces-for-accessing-domain-objects-in-a-global-object-graph"
    },
    {
      "Abstract": "Break",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-catering-break",
      "PersonsString": "",
      "Title": "Break",
      "Type": "Coffee break",
      "URL": "https://2018.programming-conference.org/event/programming-2018-catering-break"
    },
    {
      "Abstract": "",
      "Affiliations": ["Hasso Plattner Institute"],
      "AffiliationsString": "Hasso Plattner Institute",
      "Authors": ["tonimattis"],
      "Key": "programming-2018-src-mining-concepts-from-code-using-community-detection",
      "PersonsString": "Toni Mattis",
      "Title": "Mining Concepts from Code using Community Detection",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-mining-concepts-from-code-using-community-detection"
    },
    {
      "Abstract": "",
      "Affiliations": ["Imperial College London, UK"],
      "AffiliationsString": "Imperial College London, UK",
      "Authors": ["danielslocombe"],
      "Key": "programming-2018-src-soundness-and-completeness-for-object-garbage-collection-in-the-pony-language",
      "PersonsString": "Daniel Slocombe",
      "Title": "Soundness and Completeness for Object Garbage Collection in the Pony Language",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-soundness-and-completeness-for-object-garbage-collection-in-the-pony-language"
    },
    {
      "Abstract": "",
      "Affiliations": ["Lund University"],
      "AffiliationsString": "Lund University",
      "Authors": ["jesperoqvist"],
      "Key": "programming-2018-src-the-extensible-compiler-architecture-of-extendj",
      "PersonsString": "Jesper Oqvist",
      "Title": "The Extensible Compiler Architecture of ExtendJ",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-the-extensible-compiler-architecture-of-extendj"
    },
    {
      "Abstract": "Context. An extension method is a method declared in a package other than the package of its host class. Thanks to extension methods, developers can adapt to their needs classes they do not own: adding methods to core classes is a typical use case. This is particularly useful for adapting software and therefore to increase reusability. Inquiry. In most dynamically-typed languages, extension methods are globally visible. Because any developer can define extension methods for any class, naming conflicts occur: if two developers define an extension method with the same signature in the same class, only one extension method is visible and overwrites the other. Similarly, if two developers each define an extension method with the same name in a class hierarchy, one overrides the other. To avoid such \u201caccidental overrides\u201d, some dynamically-typed languages limit the visibility of an extension method to a particular scope. However, their semantics have not been fully described and compared. In addition, these solutions typically rely on a dedicated and slow method lookup algorithm to resolve conflicts at runtime. Approach. In this article, we present a formalization of the underlying models of Ruby refinements, Groovy categories, Classboxes, and Method Shelters that are scoping extension method solutions in dynamically-typed languages. Knowledge. Our formal framework allows us to objectively compare and analyze the shortcomings of the studied solutions and other different approaches such as MultiJava. In addition, language designers can use our formal framework to determine which mechanism has less risk of \u201caccidental overrides\u201d. Grounding. Our comparison and analysis of existing solutions is grounded because it is based on denotational semantics formalizations. Importance. Extension methods are widely used in programming languages that support them, especially dynamically-typed languages such as Pharo, Ruby or Python. However, without a carefully designed mechanism, this feature can cause insidious hidden bugs or can be voluntarily used to gain access to protected operations, violate encapsulation or break fundamental invariants.",
      "Affiliations": [
        "CNRS",
        "INRIA",
        " INRIA Lille",
        "Mines Douai"
      ],
      "AffiliationsString": "CNRS, INRIA,  INRIA Lille, Mines Douai",
      "Authors": [
        "guillermopolito",
        "camilleteruel",
        "stephaneducasse",
        "lucfabresse"
      ],
      "Key": "programming-2018-papers-scoped-extension-methods-in-dynamically-typed-languages",
      "PersonsString": "Guillermo Polito, Camille Teruel, Stéphane Ducasse and Luc Fabresse",
      "Title": "Scoped Extension Methods in Dynamically-Typed Languages",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-scoped-extension-methods-in-dynamically-typed-languages"
    },
    {
      "Abstract": "Context. TypeState-Oriented Programming (TSOP) is a paradigm intended to help developers in the implementation and use of mutable objects whose public interface depends on their private state. Under this paradigm, well-typed programs are guaranteed to conform with the protocol of the objects they use. \nInquiry. Previous works have investigated TSOP for both sequential and concurrent objects. However, an important difference between the two settings still remains. In a sequential setting, a well-typed program either progresses indefinitely or terminates eventually. In a concurrent setting, protocol conformance is no longer enough to avoid deadlocks, a situation in which the execution of the program halts because two or more objects are involved in mutual dependencies that prevent any further progress. \nApproach. In this work, we put forward a refinement of TSOP for concurrent objects guaranteeing that well-typed programs not only conform with the protocol of the objects they use, but are also deadlock free. The key ingredients of the type system are behavioral types, used to specify and enforce object protocols, and dependency relations, used to represent abstract descriptions of the dependencies between objects and detect circularities that might cause deadlocks. \nKnowledge. The proposed approach stands out for two features. First, the approach is fully compositional and therefore scalable: the objects of a large program can be type checked in isolation; deadlock freedom of an object composition solely depends on the types of the objects being composed; any modification/refactoring of an object that does not affect its public interface does not affect other objects either. Second, we provide the first deadlock analysis technique for join patterns, a concurrency abstraction with which programmers can express complex synchronizations in a succint and declarative form. \nGrounding. We detail the proposed typing discipline for a core programming language blending concurrent objects, asynchronous message passing and join patterns. We prove that the type system is sound and give non-trivial examples of programs that can be successfully analyzed. A Haskell implementation of the type system that demonstrates the feasibility of the approach is publicly available. \nImportance. The static analysis technique described in this work can be used to certify programs written in a core language for concurrent TSOP with proven correctness guarantees. This is an essential first step towards the application and integration of the technique in a real-world developer toolchain, making programming of such systems more productive and less frustrating.",
      "Affiliations": ["University of Turin, Italy"],
      "AffiliationsString": "University of Turin, Italy",
      "Authors": ["lucapadovani"],
      "Key": "programming-2018-papers-deadlock-free-typestate-oriented-programming",
      "PersonsString": "Luca Padovani",
      "Title": "Deadlock-Free Typestate-Oriented Programming",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-deadlock-free-typestate-oriented-programming"
    },
    {
      "Abstract": "",
      "Affiliations": ["Lund University, Sweden"],
      "AffiliationsString": "Lund University, Sweden",
      "Authors": ["alfredakesson"],
      "Key": "programming-2018-src-dsl-for-end-user-service-composition",
      "PersonsString": "Alfred Åkesson",
      "Title": "DSL for End-user Service Composition",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-dsl-for-end-user-service-composition"
    },
    {
      "Abstract": "Context: In C, low-level errors, such as buffer overflow and use-after-free, are a major problem, as they cause security vulnerabilities and hard-to-find bugs. C lacks automatic checks, and programmers cannot apply defensive programming techniques because objects (e.g., arrays or structs) lack run-time information about bounds, lifetime, and types. Inquiry: Current approaches to tackling low-level errors include dynamic tools, such as bounds or type checkers, that check for certain actions during program execution. If they detect an error, they typically abort execution. Although they track run-time information as part of their runtimes, they do not expose this information to programmers. Approach: We devised an introspection interface that allows C programmers to access run-time information and to query object bounds, object lifetimes, object types, and information about variadic arguments. This enables library writers to check for invalid input or program states and thus, for example, to implement custom error handling that maintains system availability and does not terminate on benign errors. As we assume that introspection is used together with a dynamic tool that implements automatic checks, errors that are not handled in the application logic continue to cause the dynamic tool to abort execution. Knowledge: Using the introspection interface, we implemented a more robust, source-compatible version of the C standard library that validates parameters to its functions. The library functions react to otherwise undefined behavior; for example, they can detect lurking flaws, handle unterminated strings, check format string arguments, and set errno when they detect benign usage errors. Grounding: Existing dynamic tools maintain run-time information that can be used to implement the introspection interface, and we demonstrate its implementation in Safe Sulong, an interpreter and dynamic bug-finding tool for C that runs on a Java Virtual Machine and can thus easily expose relevant run-time information. Importance: Using introspection in user code is a novel approach to tackling the long-standing problem of low-level errors in C. As new approaches are lowering the performance overhead of run-time information maintenance, the usage of dynamic runtimes for C could become more common, which could ultimately facilitate a more widespread implementation of such an introspection interface.",
      "Affiliations": [
        "Johannes Kepler University Linz",
        "Johannes Kepler University Linz",
        "Johannes Kepler University Linz",
        "Oracle Labs, Austria",
        "JKU Linz, Austria"
      ],
      "AffiliationsString": "Johannes Kepler University Linz, Oracle Labs, Austria, JKU Linz, Austria",
      "Authors": [
        "manuelrigger",
        "renemayrhofer",
        "rolandschatz",
        "matthiasgrimmer",
        "hanspetermossenbock"
      ],
      "Key": "programming-2018-papers-introspection-for-c-and-its-applications-to-library-robustness",
      "PersonsString": "Manuel Rigger, Rene Mayrhofer, Roland Schatz, Matthias Grimmer and Hanspeter Mössenböck",
      "Title": "Introspection for C and its Applications to Library Robustness",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-introspection-for-c-and-its-applications-to-library-robustness"
    },
    {
      "Abstract": "To cope with the increasing complexity of developing and maintaining modern (software) systems, multiple abstractions (models) of the same system can be established and used to allow different domain experts to collaborate and contribute their respective expertise. This divide-and-conquer, model-based approach requires, however, support for a concurrent engineering process, i.e., providing a means of checking, restoring, and ensuring the consistency of all involved and concurrently maintained models. The task of providing such support is often referred to as consistency management. \nAlthough there exist various approaches to consistency management and numerous (industrial) case studies described in the literature on bidirectional transformations (bx), there is currently no uniform description of diverse but related industrial applications of model synchronisation and other forms of consistency management. This makes it challenging to detect similarities and differences related to requirements, constraints, applied techniques and tools. It is thus difficult to compare and transfer knowledge gained from (successful) projects to other bx approaches or even other bx tools for the same general approach. \nIn this paper, therefore, we propose a description language for envisioned scenarios in the problem domain of consistency management, as well as a complementary description language for solution strategies in terms of method fragments and method patterns in the solution domain of Model-Driven Engineering (MDE). Our work is inspired by previous research in the bx and MDE communities, and is also based on our collective experience from over ten years of investigating a series of application scenarios in the industry automation section together with Siemens AG as an industrial partner. \nWe use our proposed description languages to discuss a series of application scenarios that are diverse but all require varying forms of support for consistency management. By using a common notation and focusing only on aspects directly related to consistency management, we are able to abstract from project-specific details and uniformly describe how consistency management is required and can be currently supported in the industry automation sector. Based on this formal and macroscopic view of the projects, we provide a systematic discussion of our experience and results applying Triple Graph Grammars (TGGs) as a concrete bx approach in the industry automation domain.",
      "Affiliations": [
        "Paderborn University, Germany",
        "University of Paderborn, Germany",
        "TU Darmstadt",
        "TU Darmstadt",
        "Continental Automotive GmbH, Germany, Germany",
        "Siemens AG, Germany"
      ],
      "AffiliationsString": "Paderborn University, Germany, University of Paderborn, Germany, TU Darmstadt, Continental Automotive GmbH, Germany, Germany, Siemens AG, Germany",
      "Authors": [
        "anthonyanjorin1",
        "enesyigitbas",
        "erhanleblebici",
        "andyschurr",
        "mariuslauder",
        "martinwitte"
      ],
      "Key": "programming-2018-papers-description-languages-for-consistency-management-scenarios-based-on-examples-from-the-industry-automation-domain",
      "PersonsString": "Anthony Anjorin, Enes Yigitbas, Erhan Leblebici, Andy Schürr, Marius Lauder and Martin Witte",
      "Title": "Description Languages for Consistency Management Scenarios Based on Examples from the Industry Automation Domain",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-description-languages-for-consistency-management-scenarios-based-on-examples-from-the-industry-automation-domain"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["joncorbett"],
      "Key": "programming-2018-src-indigenizing-computer-programming-for-cultural-maintenance",
      "PersonsString": "Jon Corbett",
      "Title": "Indigenizing Computer Programming for Cultural Maintenance",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-indigenizing-computer-programming-for-cultural-maintenance"
    },
    {
      "Abstract": "Many of the existing approaches for program comprehension rely on the linguistic information found in source code, such as identifier names and comments. Semantic clustering is one such technique for modularization of the system that relies on the informal semantics of the program, encoded in the vocabulary used in the source code. Treating the source code as a collection of tokens loses the semantic information embedded within the identifiers. We try to overcome this problem by introducing context models for source code identifiers to obtain a semantic kernel, which can be used for both deriving the topics that run through the system as well as their clustering. In the first model, we abstract an identifier to its type representation and build on this notion of context to construct contextual vector representation of the source code. The second notion of context is defined based on the flow of data between identifiers to represent a module as a dependency graph where the nodes correspond to identifiers and the edges represent the data dependencies between pairs of identifiers. We have applied our approach to 10 medium-sized open source Java projects, and show that by introducing contexts for identifiers, the quality of the modularization of the software systems is improved. Both of the context models give results that are superior to the plain vector representation of documents. In some cases, the authoritativeness of decompositions is improved by 67%. Furthermore, a more detailed evaluation of our approach on JEdit, an open source editor, demonstrates that inferred topics through performing topic analysis on the contextual representations are more meaningful compared to the plain representation of the documents. The proposed approach in introducing a context model for source code identifiers paves the way for building tools that support developers in program comprehension tasks such as application and domain concept location, software modularization and topic analysis.",
      "Affiliations": [
        "Universiteit Utrecht",
        "Utrecht University",
        "Universiteit Utrecht",
        ""
      ],
      "AffiliationsString": "Universiteit Utrecht, Utrecht University, ",
      "Authors": [
        "amirsaeidi",
        "jurriaanhage",
        "ravikhadka",
        "slingerjansen"
      ],
      "Key": "programming-2018-papers-on-the-effect-of-semantically-enriched-context-models-on-software-modularization",
      "PersonsString": "Amir Saeidi, Jurriaan Hage, Ravi Khadka and Slinger Jansen",
      "Title": "On the Effect of Semantically Enriched Context Models on Software Modularization",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-on-the-effect-of-semantically-enriched-context-models-on-software-modularization"
    },
    {
      "Abstract": "Computer science provides an in-depth understanding of technical aspects of programming concepts, but if we want to understand how programming concepts evolve, how programmers think and talk about them and how they are used in practice, we need to consider a broader perspective that includes historical, philosophical and cognitive aspects. \nIn this paper, we develop such broader understanding of monads, a programming concept that has an infamous formal definition, syntactic support in several programming languages and a reputation for being elegant and powerful, but also intimidating and difficult to grasp. \nThis paper is not a monad tutorial. It will not tell you what a monad is. Instead, it helps you understand how computer scientists and programmers talk about monads and why they do so. To answer these questions, we review the history of monads in the context of programming and study the development through the perspectives of philosophy of science, philosophy of mathematics and cognitive sciences. \nMore generally, we present a framework for understanding programming concepts that considers them at three levels: formal, metaphorical and implementation. \nWe base such observations on established results about the scientific method and mathematical entities \u2014 cognitive sciences suggest that the metaphors used when thinking about monads are more important than widely accepted, while philosophy of science explains how the research paradigm from which monads originate influences and restricts their use. \nFinally, we provide evidence for why a broader philosophical, sociological look at programming concepts should be of interest for programmers. It lets us understand programming concepts better and, fundamentally, choose more appropriate abstractions as illustrated in a number of case studies that conclude the paper.",
      "Affiliations": ["Alan Turing Institute"],
      "AffiliationsString": "Alan Turing Institute",
      "Authors": ["tomaspetricek"],
      "Key": "programming-2018-papers-what-we-talk-about-when-we-talk-about-monads",
      "PersonsString": "Tomas Petricek",
      "Title": "What we talk about when we talk about monads",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-what-we-talk-about-when-we-talk-about-monads"
    },
    {
      "Abstract": "",
      "Affiliations": ["Innopolis University"],
      "AffiliationsString": "Innopolis University",
      "Authors": ["alisagazizullina"],
      "Key": "programming-2018-src-fully-homomorphic-encryption-scheme-for-secure-computation",
      "PersonsString": "Alisa Gazizullina",
      "Title": "Fully Homomorphic Encryption Scheme for Secure Computation",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-fully-homomorphic-encryption-scheme-for-secure-computation"
    },
    {
      "Abstract": "",
      "Affiliations": ["Harvard University"],
      "AffiliationsString": "Harvard University",
      "Authors": ["ezrazigmond"],
      "Key": "programming-2018-src-fine-grained-dynamic-access-control-for-database-backed-applications",
      "PersonsString": "Ezra Zigmond",
      "Title": "Fine-grained, Dynamic Access Control for Database-backed Applications",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-fine-grained-dynamic-access-control-for-database-backed-applications"
    },
    {
      "Abstract": "The relation between Science (what we can explain) and Art (what we can\u2019t) has long been acknowledged and while every science contains an artistic part, every art form also needs a bit of science. Among all scientific disciplines, programming holds a special place for two reasons. First, the artistic part is not only undeniable but also essential. Second, and much like in a purely artistic discipline, the act of programming is driven partly by the notion of aesthetics: the pleasure we have in creating beautiful things. \nEventhough the importance of aesthetics in the act of programming is now unquestioned, not much has been written on the subject. The field called \u201cpsychology of programming\u201d focuses on the cognitive aspects of the activity, with the goal of improving the productivity of the programmers. Very few programmers have written about their thought process while programming either, and even fewer on their concern for aesthetics, and the impact it has on their activity. \nI can see three reasons for this. First, it may be frightening to do so. Reflecting on our aesthetic sensitivities involves thinking about our own emotions, and not everyone is ready or willing to perform that kind of introspection. Second, this introspection needs to be very deep, as our aesthetic sensitivities are extremely personal. Third, this introspection also needs to be very broad, as our aesthetic sensitivities affect every part of our lives. \nThe purpose of this essay is to shed some new light on the art of programming by answering questions such as what makes us like or dislike such or such language or paradigm, or why do we shape our programs the way we do, all of this from the angle of aesthetics. Starting from the assumption that aesthetics is an inherently transversal concern, it should be possible for every programmer to find the same aesthetic driving force in every creative activity they undertake, not just programming, and in doing so, get deeper insight on why and how they do things the way they do. \nOn the other hand, because our aesthetic sensitivities are so personal, all we can really do is relate our own experiences and share it with others, in the hope that it will inspire them to do the same. It is certainly an important purpose of this essay. My personal life has been revolving around three major creative activities, of equal importance: programming in Lisp, playing Jazz music and practicing Aikido. But why so many of them, why so different ones, and why these specifically? \nBy introspecting my personal aesthetic sensitivities, I eventually realized that my tastes in the scientific, artistic and physical domains are all motivated by the same driving forces, hence unifying Lisp, Jazz and Aikido as three expressions of a single essence, not so different after all. In doing so, I gained considerable insight on my own psychology of programming, perhaps common to most lispers, perhaps also common to other programming communities. But that is for the reader to decide\u2026",
      "Affiliations": ["EPITA / LRDE"],
      "AffiliationsString": "EPITA / LRDE",
      "Authors": ["didierverna"],
      "Key": "programming-2018-papers-lisp-jazz-aikido-three-expressions-of-a-single-essence",
      "PersonsString": "Didier Verna",
      "Title": "Lisp, Jazz, Aikido \u2013 Three Expressions of a Single Essence",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-lisp-jazz-aikido-three-expressions-of-a-single-essence"
    },
    {
      "Abstract": "",
      "Affiliations": ["MINES ParisTech, France"],
      "AffiliationsString": "MINES ParisTech, France",
      "Authors": ["adillasusungi"],
      "Key": "programming-2018-src-on-the-semantics-of-loop-transformation-languages",
      "PersonsString": "Adilla Susungi",
      "Title": "On the Semantics of Loop Transformation Languages",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-on-the-semantics-of-loop-transformation-languages"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-organizational-conference-closing",
      "PersonsString": "",
      "Title": "Conference Closing",
      "Type": "Other",
      "URL": "https://2018.programming-conference.org/event/programming-2018-organizational-conference-closing"
    },
    {
      "Abstract": "The Banquet will talke place on Wednesday, April 11 at the Restaurant of the Plage Beau Rivage, in close proximity to the conference location. \nMore information",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-social-events-banquet",
      "PersonsString": "",
      "Title": "Banquet",
      "Type": "Social Event",
      "URL": "https://2018.programming-conference.org/event/programming-2018-social-events-banquet"
    },
    {
      "Abstract": "Lunch",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-catering-lunch",
      "PersonsString": "",
      "Title": "Lunch",
      "Type": "Lunch",
      "URL": "https://2018.programming-conference.org/event/programming-2018-catering-lunch"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Inria, France",
        "TU Darmstadt"
      ],
      "AffiliationsString": "Inria, France, TU Darmstadt",
      "Authors": [
        "manuelserrano",
        "guidosalvaneschi"
      ],
      "Key": "programming-2018-organizational-conference-opening",
      "PersonsString": "Manuel Serrano and Guido Salvaneschi",
      "Title": "Conference Opening",
      "Type": "Other",
      "URL": "https://2018.programming-conference.org/event/programming-2018-organizational-conference-opening"
    },
    {
      "Abstract": "Elliot Soloway\u2019s Rainfall problem is a classic benchmark in computing education research, designed to study plan composition: how students decompose problems into tasks, solve them, and compose the solutions. \nOver multiple decades, locations, and languages, students have done poorly at it. However, recent multi-institution studies of students using functional programming and How to Design Programs find very different outcomes. \nWhat do these results tell us? This talk explores relationships between programming languages, program design, curricula, and how students perceive code structure. \nThe talk assumes no experience with plan composition, functional programming, or having been rained upon. Please come equipped with pen and paper, because the talk will require you to write programs. \nJoint work primarily with Kathi Fisler.",
      "Affiliations": ["Brown University, USA"],
      "AffiliationsString": "Brown University, USA",
      "Authors": ["shriramkrishnamurthi"],
      "Key": "programming-2018-keynotes-the-recurring-rainfall-problem",
      "PersonsString": "Shriram Krishnamurthi",
      "Title": "The Recurring Rainfall Problem",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-keynotes-the-recurring-rainfall-problem"
    },
    {
      "Abstract": "Mobile applications have become prevalent and they introduce new kinds of problems compared to traditional applications. We present a series of our efforts in statically analyzing Android applications to find bugs and vulnera- bilities in them. We first describe how the powerful Android Debug Bridge (ADB), a command line tool to communicate with Android devices for debugging purposes, can open a gate to adversaries. To protect Android devices from various attacks using ADB, we present several mitigation mechanisms including a static analysis tool that analyzes Android applications to detect possible attacks using ADB capabilities. Then, we present HybriDroid, a static analysis framework for Android hybrid apps. We investigate the semantics of Android hybrid apps especially for the interoperation mechanism of Android Java and JavaScript. Then, we design and implement a static analysis framework that analyzes inter-communication between Android Java and JavaScript. As example analyses supported by HybriDroid, we implement a bug detector that identifies programmer errors due to the hybrid semantics, and a taint analyzer that finds information leaks cross language boundaries. Our empirical evaluation shows that the tools are practically usable in that they found previously uncovered bugs in real-world Android hybrid apps and possible information leaks via a widely-used advertising platform. Finally, we demonstrate Android activity injection attacks with a simple malware, and formally specify the activity activation mechanism using operational semantics. Based on the operational semantics, we develop a static analysis tool, which analyzes Android apps to detect activity injection attacks. Our tool is fast enough to analyze real-world Android apps in 6 seconds on average, and our experiments found that 1,761 apps out of 129,756 real-world Android apps inject their activities into other apps tasks.",
      "Affiliations": ["KAIST"],
      "AffiliationsString": "KAIST",
      "Authors": ["sukyoungryu"],
      "Key": "programming-2018-keynotes-static-analysis-of-android-applications-for-finding-bugs-and-security-vulnerabilities",
      "PersonsString": "Sukyoung Ryu",
      "Title": "Static Analysis of Android Applications for Finding Bugs and Security Vulnerabilities",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-keynotes-static-analysis-of-android-applications-for-finding-bugs-and-security-vulnerabilities"
    },
    {
      "Abstract": "Web programmers are often faced with several challenges in the development process of modern, rich internet applications. Technologies for the different tiers of the application have to be selected: a server-side language, a combination of JavaScript, HTML and CSS for the client, and a database technology. Meeting the expectations of contemporary web applications requires even more effort from the developer: many state of the art libraries must be mastered and glued together. This leads to an impedance mismatch problem between the different technologies and it is up to the programmer to align them manually. Multi-tier or tierless programming is a web programming paradigm that provides one language for the different tiers of the web application, allowing the programmer to focus on the actual program logic instead of the accidental complexity that comes from combining several technologies. While current tierless approaches therefore relieve the burden of having to combine different technologies into one application, the distribution of the code is explicitly tied into the program. Certain distribution decisions have an impact on crosscutting concerns such as information security or offline availability. Moreover, adapting the programs such that the application complies better with these concerns often leads to code tangling, rendering the program more difficult to understand and maintain. We introduce an approach to multi-tier programming where the tierless code is decoupled from the tier specification. The developer implements the web application in terms of slices and an external specification that assigns the slices to tiers. A recommender system completes the picture for those slices that do not have a fixed placement and proposes slice refinements as well. This recommender system tries to optimise the tier specification with respect to one or more crosscutting concerns. This is in contrast with current cutting edge solutions that hide distribution decisions from the programmer. In this paper we show that slices, together with a recommender system, enable the developer to experiment with different placements of slices, until the distribution of the code satisfies the programmer\u2019s needs. We present a search-based recommender system that maximises the offline availability of a web application and a concrete implementation of these concepts in the tier-splitting tool Stip.js.",
      "Affiliations": [
        "Software Languages Lab",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": "Software Languages Lab, Vrije Universiteit Brussel, Belgium, Vrije Universiteit Brussel",
      "Authors": [
        "laurephilips",
        "joeridekoster",
        "wolfgangdemeuter",
        "coenderoover"
      ],
      "Key": "programming-2018-papers-search-based-tier-assignment-for-optimising-offline-availability-in-multi-tier-web-applications",
      "PersonsString": "Laure Philips, Joeri De Koster, Wolfgang De Meuter and Coen De Roover",
      "Title": "Search-based Tier Assignment for Optimising Offline Availability in Multi-tier Web Applications",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-search-based-tier-assignment-for-optimising-offline-availability-in-multi-tier-web-applications"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Texas at Dallas"],
      "AffiliationsString": "University of Texas at Dallas",
      "Authors": ["vasujindal"],
      "Key": "programming-2018-src-towards-an-intelligent-fault-prediction-code-editor-to-improve-software-quality-using-deep-learning",
      "PersonsString": "Vasu Jindal",
      "Title": "Towards an Intelligent Fault Prediction Code Editor to Improve Software Quality using Deep Learning",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-towards-an-intelligent-fault-prediction-code-editor-to-improve-software-quality-using-deep-learning"
    },
    {
      "Abstract": "",
      "Affiliations": ["Imperial College London"],
      "AffiliationsString": "Imperial College London",
      "Authors": ["franklinschrans"],
      "Key": "programming-2018-src-writing-safe-smart-contracts-in-flint",
      "PersonsString": "Franklin Schrans",
      "Title": "Writing Safe Smart Contracts in Flint",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-writing-safe-smart-contracts-in-flint"
    },
    {
      "Abstract": "Programming languages and platforms improve over time, sometimes resulting in new language features that offer many benefits. However, despite these benefits, developers may not always be willing to adopt them in their projects for various reasons. In this paper, we describe an empirical study where we assess the adoption of a particular new language feature. Studying how developers use (or do not use) new language features is important in programming language research and engineering because it gives designers insight into the usability of the language to create meaning programs in that language. This knowledge, in turn, can drive future innovations in the area. Here, we explore Java 8 default methods, which allow interfaces to contain (instance) method implementations. \nDefault methods can ease interface evolution, make certain ubiquitous design patterns redundant, and improve both modularity and maintainability. A focus of this work is to discover, through a scientific approach and a novel technique, situations where developers found these constructs useful and where they did not, and the reasons for each. Although several studies center around assessing new language features, to the best of our knowledge, this kind of construct has not been previously considered. \nDespite their benefits, we found that developers did not adopt default methods in all situations. Our study consisted of submitting pull requests introducing the language feature to 19 real-world, open source Java projects without altering original program semantics. This novel assessment technique is proactive in that the adoption was driven by an automatic refactoring approach rather than waiting for developers to discover and integrate the feature themselves. In this way, we set forth best practices and patterns of using the language feature effectively earlier rather than later and are able to possibly guide (near) future language evolution. We foresee this technique to be useful in assessing other new language features, design patterns, and other programming idioms.",
      "Affiliations": [
        "City University of New York (CUNY) Hunter College",
        "Tokyo Institute of Technology"
      ],
      "AffiliationsString": "City University of New York (CUNY) Hunter College, Tokyo Institute of Technology",
      "Authors": [
        "raffikhatchadourian",
        "hidehikomasuhara"
      ],
      "Key": "programming-2018-papers-proactive-empirical-assessment-of-new-language-feature-adoption-via-automated-refactoring-the-case-of-java-8-default-methods",
      "PersonsString": "Raffi Khatchadourian and Hidehiko Masuhara",
      "Title": "Proactive Empirical Assessment of New Language Feature Adoption via Automated Refactoring: The Case of Java 8 Default Methods",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-proactive-empirical-assessment-of-new-language-feature-adoption-via-automated-refactoring-the-case-of-java-8-default-methods"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-organizational-steering-committee-meeting",
      "PersonsString": "",
      "Title": "Steering Committee Meeting",
      "Type": "Meeting",
      "URL": "https://2018.programming-conference.org/event/programming-2018-organizational-steering-committee-meeting"
    },
    {
      "Abstract": "Context. Context-free grammars are widely used for language prototyping. They allow formalizing the syntax of domain-specific or general-purpose programming languages concisely and declaratively. However, the natural and concise way of writing a context-free grammar is often ambiguous. Therefore, grammar formalisms support extensions in the form of declarative disambiguation rules, to address ambiguities from operator precedence and associativity. \nInquiry. Implementing support for declarative disambiguation within a parser typically comes with one or more of the following limitations in practice: a lack of parsing performance, or a lack of modularity (i.e., disallowing the composition of grammar fragments of potentially different languages). The latter subject is generally addressed by scannerless generalized parsers. We aim to equip scannerless generalized parsers with novel disambiguation methods that are inherently performant, without compromising the concerns of modularity and language composition. \nApproach. In this paper, we present a novel low-overhead implementation technique for disambiguating deep associativity and priority conflicts in scannerless generalized parsers with lightweight data-dependency. \nKnowledge. Ambiguities with respect to operator precedence and associativity arise from combining the various operators of a language. While shallow conflicts can be resolved efficiently by one-level tree patterns, deep conflicts require more elaborate techniques, because they can occur arbitrarily nested in a tree. Current state-of-the-art approaches to solving deep priority conflicts come with a severe performance overhead. \nGrounding. We evaluated our new approach against state-of-the-art declarative disambiguation mechanisms. By parsing a corpus of popular open-source repositories written in Java and OCaml, we found that our approach yields speedups of up to 1.73x over related work when parsing programs with deep priority conflicts \u2014 with a modest overhead of 1% to 2% when parsing programs without deep conflicts. \nImportance. A recent empirical study shows that deep priority conflicts are indeed wide-spread in practice. The study shows that in a corpus of popular OCaml projects on Github, up to 17% of the source files contain deep priority conflicts, which would benefit from efficient disambiguation.",
      "Affiliations": [
        "Delft University of Technology, Netherlands",
        "Delft University of Technology",
        "Delft University of Technology"
      ],
      "AffiliationsString": "Delft University of Technology, Netherlands, Delft University of Technology",
      "Authors": [
        "luiseduardodesouzaamorim",
        "michaeljsteindorfer",
        "eelcovisser"
      ],
      "Key": "programming-2018-papers-towards-zero-overhead-disambiguation-of-deep-priority-conflicts",
      "PersonsString": "Luís Eduardo de Souza Amorim, Michael J. Steindorfer and Eelco Visser",
      "Title": "Towards Zero-Overhead Disambiguation of Deep Priority Conflicts",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-towards-zero-overhead-disambiguation-of-deep-priority-conflicts"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "programming-2018-organizational-registration",
      "PersonsString": "",
      "Title": "Registration",
      "Type": "Registration",
      "URL": "https://2018.programming-conference.org/event/programming-2018-organizational-registration"
    },
    {
      "Abstract": "Context: Software development tools that interact with running programs such as debuggers, profilers, and dynamic analysis frameworks are presumed to demand difficult tradeoffs among implementation complexity (cost), functionality, usability, and performance. Among the many consequences, tools are often delivered late (if ever), have limited functionality, require non-standard configurations, and impose serious performance costs on running programs. \nInquiry: Can flexible tool support become a practical, first class, intrinsic requirement for a modern highperformance programming language implementation framework? \nApproach: We extended the Truffle Language Implementation Framework, which together with the GraalVM execution environment makes possible very high performance language implementations. Truffle\u2019s new Instrumentation Framework is language-agnostic and designed to derive high performance from the same technologies as do language implementations. Truffle Instrumentation includes: (1) low overhead capture of execution events by dynamically adding \u201cwrapper\u201d nodes to executing ASTs; (2) extensions to the Language Implementation Framework that allow per-language specialization, primarily for visual display of values and names, among others; and (3) versatile APIs and support services for implementing many kinds of tools without VM modification. \nKnowledge: It is now possible for a client in a production environment to insert (dynamically, with thread safety) an instrumentation probe that captures and reports abstractly specified execution events. A probe in fully optimized code imposes very low overhead until actually used to access (or modify) execution state. Event capture has enabled construction of numerous GraalVM services and tools that work for all implemented languages, either singly or in combination. Instrumentation has also proved valuable for implementing some traditionally tricky language features, as well as some GraalVM services such as placing bounds on resources consumed by running programs. \nGrounding: Tools for debugging (via multiple clients), profiling, statement counting, dynamic analysis, and others are now part of GraalVM or are in active development. Third parties have also used Truffle Instrumentation for innovative tool implementations. \nImportance: Experience with Truffle Instrumentation validates the notion that addressing developer tools support as a forethought can change expectations about the availability of practical, efficient tools for highperformance languages. Tool development becomes a natural part of language implementation, requiring little additional effort and offering the advantage of early and continuous availability.",
      "Affiliations": [
        "Oracle Labs",
        "Oracle Labs",
        "eBay",
        "Oracle Labs, Switzerland",
        "Oracle Labs"
      ],
      "AffiliationsString": "Oracle Labs, eBay, Oracle Labs, Switzerland",
      "Authors": [
        "michaelvandevanter",
        "chrisseaton",
        "michaelhaupt",
        "christianhumer",
        "thomaswuerthinger"
      ],
      "Key": "programming-2018-papers-fast-flexible-polyglot-instrumentation-support-for-debuggers-and-other-tools",
      "PersonsString": "Michael Van De Vanter, Chris Seaton, Michael Haupt, Christian Humer and Thomas Wuerthinger",
      "Title": "Fast, Flexible, Polyglot Instrumentation Support for Debuggers and other Tools",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-papers-fast-flexible-polyglot-instrumentation-support-for-debuggers-and-other-tools"
    },
    {
      "Abstract": "",
      "Affiliations": ["Vrije Universiteit Brussel"],
      "AffiliationsString": "Vrije Universiteit Brussel",
      "Authors": ["matteomarra"],
      "Key": "programming-2018-src-debugging-support-for-big-data-processing-applications",
      "PersonsString": "Matteo Marra",
      "Title": "Debugging Support for Big Data Processing Applications",
      "Type": "Talk",
      "URL": "https://2018.programming-conference.org/event/programming-2018-src-debugging-support-for-big-data-processing-applications"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Bergen",
        "University of Bergen",
        "University of Bergen"
      ],
      "AffiliationsString": "University of Bergen",
      "Authors": [
        "ragnhildaalvik",
        "anyahelenebagge",
        "jaakkojarvi"
      ],
      "Key": "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
      "PersonsString": "Ragnhild Aalvik, Anya Helene Bagge and Jaakko Järvi",
      "Title": "VisAST: Generic AST Visualizer for Software Language Education",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Bergen, Norway",
        "University of Bergen"
      ],
      "AffiliationsString": "University of Bergen, Norway, University of Bergen",
      "Authors": [
        "annamariaeilertsen1",
        "anyahelenebagge"
      ],
      "Key": "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property",
      "PersonsString": "Anna Maria Eilertsen and Anya Helene Bagge",
      "Title": "Software != Programs - Software Behaviour as an Emergent Property",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Genova",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy",
        "DIBRIS, University of Genova, Italy"
      ],
      "AffiliationsString": "University of Genova, DIBRIS, University of Genova, Italy",
      "Authors": [
        "davideancona",
        "lucafranceschini",
        "maurizioleotta",
        "diegoclerissi",
        "darioolianas",
        "filipporicca",
        "giorgiodelzanno",
        "marinaribaudo"
      ],
      "Key": "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
      "PersonsString": "Davide Ancona, Luca Franceschini, Maurizio Leotta, Diego Clerissi, Dario Olianas, Filippo Ricca, Giorgio Delzanno and Marina Ribaudo",
      "Title": "Runtime Verification of Flow-Based Programming for the Internet of Things",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Université Côte d\u2019Azur, CNRS, INRIA",
        "Université Côte d\u2019Azur, CNRS, INRIA",
        "Aalto University",
        "University of York, UK",
        ""
      ],
      "AffiliationsString": "Université Côte d\u2019Azur, CNRS, INRIA, Aalto University, University of York, UK, ",
      "Authors": [
        "michelbuffa",
        "jeromelebrun",
        "jarikleimola",
        "oliverlarkin",
        "stephaneletz"
      ],
      "Key": "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
      "PersonsString": "Michel Buffa, Jérôme Lebrun, Jari Kleimola, Oliver Larkin and Stéphane Letz",
      "Title": "Programming virtual musical instruments and audio effects in the Web browser",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser"
    },
    {
      "Abstract": "",
      "Affiliations": ["Technische Universität Darmstadt"],
      "AffiliationsString": "Technische Universität Darmstadt",
      "Authors": ["ragnarmogk"],
      "Key": "programming-2018-posters-fault-tolerant-reactive-programming",
      "PersonsString": "Ragnar Mogk",
      "Title": "Fault-tolerant Reactive Programming",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-fault-tolerant-reactive-programming"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["pascalweisenburger"],
      "Key": "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
      "PersonsString": "Pascal Weisenburger",
      "Title": "Distributed Reactive Applications with ScalaLoci",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-distributed-reactive-applications-with-scalaloci"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Bergen, Norway",
        "University of Bergen",
        "University of Bergen, Norway"
      ],
      "AffiliationsString": "University of Bergen, Norway, University of Bergen",
      "Authors": [
        "knutandersstokke",
        "anyahelenebagge",
        "hakonheggerneslerring"
      ],
      "Key": "programming-2018-posters-automating-testing-of-programming-assignments",
      "PersonsString": "Knut Anders Stokke, Anya Helene Bagge and Håkon Heggernes Lerring",
      "Title": "Automating Testing of Programming Assignments",
      "Type": "Poster",
      "URL": "https://2018.programming-conference.org/event/programming-2018-posters-automating-testing-of-programming-assignments"
    }
  ],
  "Name": "\u2039Programming\u203a 2018",
  "People": [
    {
      "Affiliation": "Università della Svizzera italiana",
      "Key": "filipposchiavio",
      "Name": "Filippo Schiavio"
    },
    {
      "Affiliation": "Technical University of Denmark",
      "Key": "ekkartkindler",
      "Name": "Ekkart Kindler",
      "URL": "http://www2.compute.dtu.dk/~ekki/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/ekkartkindler/2b69d6ff-2e00-4624-9def-933d7b719e29/small.jpg"
    },
    {
      "Affiliation": "TU Delft",
      "Bio": "http://twitter.com/seba0_  http://erdweg.org",
      "Key": "sebastianerdweg",
      "Name": "Sebastian Erdweg",
      "URL": "http://erdweg.org",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sebastianerdweg/cc4515b1-cefa-4dee-a915-3242f337c8d8/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "renemayrhofer",
      "Name": "Rene Mayrhofer"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "rolandschatz",
      "Name": "Roland Schatz"
    },
    {
      "Affiliation": "Simon Fraser University",
      "Key": "parmitchilana",
      "Name": "Parmit Chilana",
      "URL": "http://hci.cs.sfu.ca",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/parmitchilana/019b66e5-f1f5-4906-982c-a17063cf32d2/small.jpg"
    },
    {
      "Affiliation": "KAIST",
      "Key": "sukyoungryu",
      "Name": "Sukyoung Ryu",
      "URL": "http://plrg.kaist.ac.kr/ryu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sukyoungryu/3bdcd232-f3d4-4610-9953-30b513926e54/small.jpg"
    },
    {
      "Affiliation": "Alan Turing Institute",
      "Bio": "Tomas is a Visiting Researcher at the Alan Turing institute, working on tools for open data-driven storytelling. He is building tools that integrate with modern data sources (open government data, data published by citizen initiatives) and let users easily create analyses and visualizations that are linked to the original data source, making the analyses more transparent, reproducible, but also easy to adapt. His early work on the project can be found at http://thegamma.net. \nTomas\u2019 many other interests include open-source and functional programming (he is an active contributor to the F# ecosystem), programming language theory (his PhD thesis on \u201ccoeffects\u201d develops a theory of context-aware programming language language), but also understanding programming through the perspective of philosophy of science.",
      "Key": "tomaspetricek",
      "Name": "Tomas Petricek",
      "URL": "http://tomasp.net",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tomaspetricek/405de991-6537-4d65-8499-fde0dcc8c5cd/small.jpg"
    },
    {
      "Affiliation": "Mines Douai",
      "Key": "lucfabresse",
      "Name": "Luc Fabresse"
    },
    {
      "Affiliation": "The University of Manchester",
      "Bio": "Christos Kotselidis is a Lecturer (Assistant Prof.) at the University of Manchester working on hardware/software co-designed Virtual Machines. Prior to joining the University of Manchester, he worked as a Principal Member of Technical Staff at Oracle Labs and as a Senior Research Scientist at Intel Labs in the areas of chip design, micro-architecture research, hw/sw co-designed CPUs, Compilers, Virtual Machines and Garbage Collection.",
      "Key": "christoskotselidis",
      "Name": "Christos Kotselidis",
      "URL": "https://www.kotselidis.net/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/christoskotselidis/d2fb641b-68d2-4a87-bc24-b29f2ba90f03/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "gefeizhang",
      "Name": "Gefei Zhang"
    },
    {
      "Affiliation": "",
      "Key": "huguesmarchal",
      "Name": "Hugues Marchal"
    },
    {
      "Affiliation": "Wirfs-Brock Associates",
      "Key": "allenwirfsbrock",
      "Name": "Allen Wirfs-Brock",
      "URL": "http://www.wirfs-brock.com/allen",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/allenwirfsbrock/6e0a8a97-de71-4e8c-b659-91e3659afaa6/small.jpg"
    },
    {
      "Affiliation": "University of Freiburg, Germany",
      "Key": "peterthiemann",
      "Name": "Peter Thiemann",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/peterthiemann/43fc0175-1745-4b3a-b626-86e10da76b86/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs, Potsdam",
      "Key": "timfelgentreff",
      "Name": "Tim Felgentreff",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/timfelgentreff/1cdb8c05-2513-4508-ab46-dcae9a44d4c4/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "sylviagrewe",
      "Name": "Sylvia Grewe",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sylviagrewe/44478729-c131-4cee-93c0-97526278033e/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Key": "tobiaswrigstad",
      "Name": "Tobias Wrigstad",
      "URL": "http://wrigstad.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tobiaswrigstad/51b1bbdb-d077-4128-ad29-ec14657617a7/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "jamesclarkson",
      "Name": "James Clarkson"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "samlindley",
      "Name": "Sam Lindley",
      "URL": "http://homepages.inf.ed.ac.uk/slindley",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/samlindley/144f1f69-c839-48e3-8ba4-58a84018aa48/small.jpg"
    },
    {
      "Affiliation": "Swansea University",
      "Bio": "Peter Mosses is professor emeritus at Swansea University. He is currently visiting the Programming Languages Group at TU Delft. \nHis research in semantics stretches back to Strachey\u2019s Programming Research Group at Oxford in the early 1970s, where he contributed to the development of denotational semantics, and implemented SIS, a system for running programs based on their semantics. He was based at Aarhus University, Denmark, from 1976 to 2004. \nThe main focus of his research has been on pragmatic aspects of formal specifications \u2013 especially modularity. This led to the development of action semantics, MSOS (a modular variant of structural operational semantics) and component-based semantics. He is a principal investigator in the PLanCompS project (Programming Language Components and Specifications), He was also the initial coordinator of CoFI, the Common Framework Initiative, which designed the algebraic specification language CASL.",
      "Key": "peterdmosses",
      "Name": "Peter D. Mosses",
      "URL": "https://www.cs.swan.ac.uk/~cspdm/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/peterdmosses/f010d5c0-940f-452d-a209-f98e52926de8/small.jpg"
    },
    {
      "Affiliation": "Universiteit Gent, Belgium",
      "Key": "christophescholliers",
      "Name": "Christophe Scholliers",
      "URL": "http://soft.vub.ac.be/~cfscholl/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/christophescholliers/349aebe2-c428-4d19-8b70-9e1665dea5e6/small.jpg"
    },
    {
      "Affiliation": "Computer Laboratory, University of Cambridge",
      "Key": "neelakantankrishnaswami",
      "Name": "Neelakantan R. Krishnaswami",
      "URL": "http://www.cl.cam.ac.uk/~nk480",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/neelakantankrishnaswami/45f309fe-1177-4f2f-b017-0f7a9333bda4/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "anthonyanjorin",
      "Name": "Anthony Anjorin"
    },
    {
      "Affiliation": "",
      "Key": "jonathanedwards",
      "Name": "Jonathan Edwards",
      "URL": "http://alarmingdevelopment.org/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jonathanedwards/3bc9c5ec-29fc-4efd-b8bc-6ba62fa73ec1/small.jpg"
    },
    {
      "Affiliation": "University of Twente, The Netherlands",
      "Key": "arendrensink",
      "Name": "Arend Rensink",
      "URL": "http://www.cs.utwente.nl/~rensink",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/arendrensink/5ea407a2-a917-4061-84a1-d9b4ff50815f/small.jpg"
    },
    {
      "Affiliation": "KU Leuven",
      "Key": "frankpiessens",
      "Name": "Frank Piessens"
    },
    {
      "Affiliation": "Raincode Labs, Belgium",
      "Key": "johanfabry",
      "Name": "Johan Fabry",
      "URL": "https://scholar.google.be/citations?hl=en&user=Kw-9h4AAAAAJ",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/johanfabry/a6bfae70-e6f2-43e3-af9d-524815988020/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Bio": "I am mainly interested in the secure execution of programs written in low-level languages such as C. I work on source-level and binary-level bug-finding and bug-mitigation approaches, low-level software security in general, the efficient implementation of programming languages, and the mining of software repositories to uncover knowledge related to these topics.",
      "Key": "manuelrigger",
      "Name": "Manuel Rigger",
      "URL": "http://ssw.jku.at/General/Staff/ManuelRigger/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/manuelrigger/47e268e9-158c-471f-a7e9-442216c54550/small.jpg"
    },
    {
      "Affiliation": "Université Catholique de Louvain, Belgium",
      "Bio": "Kim Mens is full Professor in Computer Science at UCL university in Belgium, where he leads the RELEASeD research laboratory on software evolution and software development technology. He holds the degrees of Licentiate in Mathematics, Licentiate in Computer Science, and PhD in Computer Science. His main research interests include software development, software maintenance, software evolution and context-oriented programming with a particular emphasis on programming languages and tool support.",
      "Key": "kimmens",
      "Name": "Kim Mens",
      "URL": "http://www.uclouvain.be/kim.mens",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/kimmens/a1ea9374-cbfe-4029-804e-1aa6fe424a70/small.jpg"
    },
    {
      "Affiliation": "University of Oxford",
      "Key": "juleshedges",
      "Name": "Jules Hedges"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Bio": "I am a Research Associate at Laboratory for Foundations of Computer Science, University of Edinburgh, UK. I am on a sabbatical leave from Instytut Informatyki (Institute of Information Technology), Politechnika Łódzka (Łódź University of Technology), Poland.",
      "Key": "janstolarek",
      "Name": "Jan Stolarek",
      "URL": "http://ics.p.lodz.pl/~stolarek",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/janstolarek/76711651-883c-4a0d-80f0-31aecbea9ee4/small.jpg"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "mattiasnordahl",
      "Name": "Mattias Nordahl"
    },
    {
      "Affiliation": "Nokia Bell Labs",
      "Key": "tomvancutsem",
      "Name": "Tom Van Cutsem",
      "URL": "https://www.bell-labs.com/usr/tom.van_cutsem",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tomvancutsem/d758e20f-3414-45b2-a82f-af50d8a3b6b3/small.jpg"
    },
    {
      "Affiliation": "University of Zurich",
      "Bio": "I am SNSF professor at the University of Zurich (UZH), where I am leading the Zurich Empirical Software Engineering Team (ZEST). \nBefore joining UZH, I have worked four years as assistant professor at Delft University of Technology (TU Delft), The Netherlands, after which I received tenure. I obtained my Ph.D. in 2013 under the supervision of Prof. Michele Lanza, working in the REVEAL research group, at the Faculty of Informatics, of the University of Lugano (USI). I have been intern twice (2012 and 2013) at Microsoft Research (MSR) in Redmond, USA, working with Dr. Christian Bird \nI obtained my bachelor and master degrees in computer science from University of Bologna (UniBO), also studying one year at the Université Libre De Bruxelles (ULB) during my Master. After obtaining the master degree, I also have worked in industry for year at Cineca, the largest Italian computing center.",
      "Key": "albertobacchelli",
      "Name": "Alberto Bacchelli",
      "URL": "http://ifi.uzh.ch/en/zest/team/bacchelli.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/albertobacchelli/e13de6d5-2f4b-4d23-83d3-7771b1e7f2bb/small.jpg"
    },
    {
      "Affiliation": "MPI-SWS",
      "Key": "mariachristakis",
      "Name": "Maria Christakis",
      "URL": "https://mariachris.github.io/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mariachristakis/b7bf39cc-368b-44aa-bbcb-c83734e1e8fa/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "andreasandronikakis",
      "Name": "Andreas Andronikakis"
    },
    {
      "Affiliation": "Brown University, USA",
      "Bio": "I am the Vice President for Programming Languages at Brown University in Providence, RI, USA. I\u2019m not, really, but that\u2019s what it says on my business card. \nI believe tropical fruit are superior to all other kinds. I\u2019d probably rather be out riding a bike up a mountain (slowly). I am terrified of success, because I may be forced to buy a suit. You can learn other things about me from my very serious Web site. \nI am also known to interrogate my audiences to ensure they\u2019re paying attention. So, be alert. You can read email later.",
      "Key": "shriramkrishnamurthi",
      "Name": "Shriram Krishnamurthi",
      "URL": "https://cs.brown.edu/~sk/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/shriramkrishnamurthi/fffeeaab-a8ce-432c-b0ea-0b960163abe3/small.jpg"
    },
    {
      "Affiliation": "National Institute of Advanced Industrial Science and Technology, Japan",
      "Bio": "Jun Kato is a Human-Computer Interaction researcher at National Institute of Advanced Industrial Science and Technology (AIST), Japan. He has focused on improving Programming Experience (PX) by creating toolkits and integrated development environments. He has worked for Microsoft and Adobe Research and received a Ph.D. from The University of Tokyo under the supervision of Prof. Takeo Igarashi in 2014.",
      "Key": "junkato",
      "Name": "Jun Kato",
      "URL": "https://junkato.jp",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/junkato/946564ad-0347-4e3c-8dbb-625e3449c713/small.jpg"
    },
    {
      "Affiliation": "Universidade de Coimbra",
      "Key": "nunoantunes",
      "Name": "Nuno Antunes"
    },
    {
      "Affiliation": "Université de Nice Sophia-Antipolis, France",
      "Bio": "I am professor at the University of Nice Sophia Antipolis, France, since 2017. Before that, I was Maitre de Conférence at LSV, ENS Cachan, Paris-Saclay, France and visited research at RWTH Aachen and the University of Kassel Germany. I did my phD at LIP, ENS Lyon, on spatial logics and concurrency theory. Later, I got interested in various kinds of models of computations used in automated verification : pointer systems, counter systems, FIFO systems, and more generally discrete infinite state systems. A bit more specifically, I am interested in choreographies and session types, higher-order model-checking, and separation logic.",
      "Key": "etiennelozes",
      "Name": "Etienne Lozes",
      "URL": "http://i3s.unice.fr/~elozes",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/etiennelozes/00aca9d3-09de-4b5b-9f51-bf94e51939b0/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "feliennehermans",
      "Name": "Felienne Hermans",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/feliennehermans/f1233e68-176f-4ecc-a70f-932b9370f82e/small.jpg"
    },
    {
      "Affiliation": "University of Bergen",
      "Key": "anyahelenebagge",
      "Name": "Anya Helene Bagge",
      "URL": "http://www.ii.uib.no/~anya/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/anyahelenebagge/0eb096cc-5dbd-4ca8-9b0a-37adff9365a1/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "yngvelamo",
      "Name": "Yngve Lamo"
    },
    {
      "Affiliation": "Innopolis University",
      "Key": "alisagazizullina",
      "Name": "Alisa Gazizullina"
    },
    {
      "Affiliation": "Universidad de Málaga, Spain",
      "Bio": "Prof. Lidia Fuentes received her MSc degree in Computer Science from the University of Málaga (Spain) in 1992 and her PhD in Computer Science in 1998 from the same University. She is Full Professor at the Department of Lenguajes y Ciencias de la Computación of the University of Málaga and she is the head of the CAOSD research group.",
      "Key": "lidiafuentes",
      "Name": "Lidia Fuentes",
      "URL": "http://www.lcc.uma.es/~lff/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/lidiafuentes/cea3ad20-92ee-40fb-8854-7afeb3b90e85/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "alirezasabyaneh",
      "Name": "Alireza S. Abyaneh"
    },
    {
      "Affiliation": "University of Regensburg",
      "Key": "raphaelwimmer",
      "Name": "Raphael Wimmer",
      "URL": "https://hci.ur.de/people/raphael_wimmer",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/raphaelwimmer/37f180ac-99d7-44b9-82ad-f75885dac742/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "juliendeantoni",
      "Name": "Julien DeAntoni",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/juliendeantoni/8d996d69-181b-4952-ba94-51e370f02163/small.jpg"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "alfredakesson",
      "Name": "Alfred Åkesson"
    },
    {
      "Affiliation": "",
      "Key": "foivosszakkak",
      "Name": "Foivos S. Zakkak"
    },
    {
      "Affiliation": "University of Occidental  Brittary, France",
      "Key": "alainplantec",
      "Name": "Alain Plantec"
    },
    {
      "Affiliation": "",
      "Key": "maonistephens",
      "Name": "Maoni Stephens",
      "URL": "https://blogs.msdn.microsoft.com/maoni/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/maonistephens/1b1cc18b-c6a7-4b4a-8e6e-eb3127628baa/small.jpg"
    },
    {
      "Affiliation": "Aarhus University",
      "Bio": "Professor at Department of Computer Science, Aarhus University, Denmark",
      "Key": "andersmoller",
      "Name": "Anders Møller",
      "URL": "https://cs.au.dk/~amoeller/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/andersmoller/a6b971e9-27d8-44ed-84d2-5ce2d53ff5e4/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "kerrychang",
      "Name": "Kerry Chang",
      "URL": "http://kerrychang.net",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/kerrychang/8e7d7a4b-155c-498a-820a-9dc40aa6185f/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "julianafranco",
      "Name": "Juliana Franco",
      "URL": "https://www.doc.ic.ac.uk/~jvicent1/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/julianafranco/8ce89869-ec9f-4b6c-83af-7f99cc57d109/small.jpg"
    },
    {
      "Affiliation": "University of Bayreuth",
      "Key": "bernhardwestfechtel",
      "Name": "Bernhard Westfechtel"
    },
    {
      "Affiliation": "CNRS",
      "Key": "guillermopolito",
      "Name": "Guillermo Polito",
      "URL": "https://guillep.github.io",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/guillermopolito/fb027991-a37d-4375-8c71-1858ce478695/small.jpg"
    },
    {
      "Affiliation": "Utrecht University",
      "Key": "jurriaanhage",
      "Name": "Jurriaan Hage",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jurriaanhage/d186be2b-f23c-4976-855c-575e468319fd/small.jpg"
    },
    {
      "Affiliation": "Technische Universität Dresden",
      "Bio": "Thomas Kühn is a member of the Software Engineering group of the TU Dresden. His research interests include software engineering for continuous context-sensitive software systems, role-based design and programming, conceptual modeling of dynamic context-dependent domains, formal verification of software systems, feature oriented software and language product lines. Currently he has a position within the DFG research training school on \u201cRole-oriented Software Infrastructures\u201d (RoSI), where he is writing his PhD thesis about \u201cA Family of Role-based Modeling and Programming Languages\u201d.",
      "Key": "thomaskuhn",
      "Name": "Thomas Kühn",
      "URL": "http://wwwpub.zih.tu-dresden.de/~s4560758/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/thomaskuhn/4b635ea1-14d7-4dd0-be7e-7301396d35ce/small.jpg"
    },
    {
      "Affiliation": "KU Leuven",
      "Key": "dominiquedevriese",
      "Name": "Dominique Devriese",
      "URL": "https://distrinet.cs.kuleuven.be/people/dominiqu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/dominiquedevriese/08b1fc2d-d157-4905-9c9a-e1ff279ab345/small.jpg"
    },
    {
      "Affiliation": "",
      "Bio": "I believe the current political moment demands a change in the way human systems (social networks, political systems, organizations) are designed; and making this change means having a clearer understanding of people (and of how they live and cooperate). \nIn tech, I was lucky to learn from people like Alan Kay, Terry Winograd, and Bill Verplank at Interval Research, from Casey Fenton at CouchSurfing (where I developed the metrics which guided the company), from Howie Shrobe and Marvin Minksy at MIT. And more recently through conversations with Bret Victor and Rob Ochshorn. \nMy direct philosophocal antecedents are Amartya Sen, Charles Taylor, David Velleman, and Ruth Chang.",
      "Key": "joeedelman",
      "Name": "Joe Edelman",
      "URL": "http://nxhx.org/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/joeedelman/cb2edf32-a4f7-433a-8a97-179d7701e0e2/small.jpg"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "maurizioleotta",
      "Name": "Maurizio Leotta"
    },
    {
      "Affiliation": "University of Lugano, Switzerland",
      "Key": "walterbinder",
      "Name": "Walter Binder"
    },
    {
      "Affiliation": "",
      "Key": "davidtagatac",
      "Name": "David Tagatac"
    },
    {
      "Affiliation": "TU Wien, Vienna, Austria",
      "Key": "romanpopp",
      "Name": "Roman Popp"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "franklinschrans",
      "Name": "Franklin Schrans",
      "URL": "https://www.doc.ic.ac.uk/~fs2014/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/franklinschrans/0f872c2d-d4ee-4b66-80ec-ac3c5ac78c4c/small.jpg"
    },
    {
      "Affiliation": "University of Utah",
      "Bio": "Matthew Flatt is a professor in the School of Computing at the University of Utah, where he works on extensible programming languages, runtime systems, and applications of functional programming. He is one of the developers of the Racket programming language. He received his PhD from Rice University in 1999.",
      "Key": "matthewflatt",
      "Name": "Matthew Flatt",
      "URL": "http://www.cs.utah.edu/~mflatt/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/matthewflatt/8be359a0-6498-4c8c-a43a-e74a3d39673c/small.jpg"
    },
    {
      "Affiliation": "University of Brest",
      "Key": "mickaelkerboeuf",
      "Name": "Mickael Kerboeuf"
    },
    {
      "Affiliation": "Open University and Technion IIT",
      "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion\u2014Israel Institute of Technology. \nHis research interests include language-oriented software engineering, modularity, and programming, particularly involving domain specific languages. He is a steering committee member and the former chair of the AOSA, a non-profit organization whose mission is to be the primary sponsor for the annual conferences: International Conference on Aspect-Oriented Software Development, International Conference on Modularity, and International Conference on the Art, Science, and Engineering of Programming. \nProf. Lorenz received his PhD in computer science from the Technion\u2014Israel Institute of Technology. He\u2019s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
      "Key": "davidlorenz",
      "Name": "David H. Lorenz",
      "URL": "http://www.openu.ac.il/home/lorenz",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/davidlorenz/d0a8d2b7-30ae-4cb7-8004-2ed968eedf38/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "susaneisenbach",
      "Name": "Susan Eisenbach",
      "URL": "http://wp.doc.ic.ac.uk/susan/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/susaneisenbach/100322fa-6296-48e2-8238-10431036ea30/small.jpg"
    },
    {
      "Affiliation": "Ghent University",
      "Bio": "I am a (forget about it) year Ph.D. student in the Department of Electronics and Information Systems at Ghent University in Belgium. I am pursuing my degree under the supervision of Lieven Eeckhout. Before moving to Ghent in 2012, I spent two years as an Early Stage Researcher at the Foundation of Research and Technology (FORTH) in Heraklion, Greece. My research at FORTH was funded by an EU Marie Curie fellowship. I got my M.S. in Electrical and Computer Engineering at the University of Illinois at Urbana Champaign in 2009. I was a recipient of the J. William Fulbright scholarship from the U.S. Department of State. Before all the foreign travels, I got my B.Sc. in Electrical Engineering in 2006 from the University of Engineering and Technology in Lahore, Pakistan.",
      "Key": "shoaibakram",
      "Name": "Shoaib Akram",
      "URL": "http://users.elis.ugent.be/~sakram/index.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/shoaibakram/bada55c0-9459-41ea-810f-0fc85c660489/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "patrickrein",
      "Name": "Patrick Rein",
      "URL": "https://www.patrickrein.de",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/patrickrein/0538cdc6-52aa-408d-9042-80e24d2f8260/small.jpg"
    },
    {
      "Affiliation": "Imperial College London, UK",
      "Key": "danielslocombe",
      "Name": "Daniel Slocombe"
    },
    {
      "Affiliation": "Purdue University",
      "Bio": "Professor Eugster\u2019s research aims at proposing support for developing distributed systems. Particular topics of interest, in the context of distributed settings, include algorithms, middleware, and programming languages, abstractions, and methodologies. \nProfessor Eugster was educated in Switzerland, and has worked for both Swiss Federal Institutes of Technology in Lausanne (EPFL) and in Zurich (ETHZ), as well as for Sun Microsystems (now Oracle) prior to joining Purdue University. He has authored over 70 refereed articles, and is a member of ACM and IEEE. Among other awards for his research and teaching, Professor Eugster has received an NSF CAREER award (2007) and Experienced Researcher fellowship by the Alexander von Humboldt foundation (2011). He is also a participant of the 2011 DARPA Computer Science Study Panel.",
      "Key": "patrickeugster",
      "Name": "Patrick Eugster",
      "URL": "https://www.cs.purdue.edu/people/faculty/peugster/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/patrickeugster/bf8c955c-8902-4678-8c57-4b75cbd4f3c0/small.jpg"
    },
    {
      "Affiliation": "Paderborn University, Germany",
      "Key": "anthonyanjorin1",
      "Name": "Anthony Anjorin",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/anthonyanjorin1/158aeedd-1bac-498b-9521-79557507e112/small.jpg"
    },
    {
      "Affiliation": "Google Inc.",
      "Key": "erikernst",
      "Name": "Erik Ernst",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/erikernst/25cb56a7-015c-455f-a988-cf088af2fdcd/small.jpg"
    },
    {
      "Affiliation": "University of Lille",
      "Key": "laurenceduchien",
      "Name": "Laurence Duchien",
      "URL": "http://www2.lifl.fr/~duchien/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/laurenceduchien/4a120f4d-f0cf-4637-b536-43869589e0db/small.jpg"
    },
    {
      "Affiliation": "KTH Royal Institute of Technology",
      "Bio": "Assistant Professor in the School of Computer Science and Communication at KTH Royal Institute of Technology, Sweden.",
      "Key": "philipphaller",
      "Name": "Philipp Haller",
      "URL": "http://www.csc.kth.se/~phaller/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/philipphaller/99731905-9a83-4490-93c5-2f13d4420117/small.jpg"
    },
    {
      "Affiliation": "Université de Toulouse, France",
      "Bio": "Jean-Michel Bruel is head of the SM@RT team of the IRIT CNRS laboratory. His research areas include development of software intensive Cyber-Physical Systems, methods/model/language integration, with a main focus on requirements and Model-Based Systems Engineering. He has defended his \u201cHabilitation à Diriger des Recherches\u201d in December 2006 and obtained in 2008 a full professor position at the University of Toulouse. He has been head of the Computer Science department of the Technical Institute of Blagnac from 2009 to 2012.",
      "Key": "jeanmichelbruel",
      "Name": "Jean-Michel Bruel",
      "URL": "http://jmb.c.la/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jeanmichelbruel/64c7394d-74c9-439a-8522-f6ce8b721e79/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "adrienduchene",
      "Name": "Adrien Duchêne"
    },
    {
      "Affiliation": "University of Michigan",
      "Key": "maulishreepandey",
      "Name": "Maulishree Pandey"
    },
    {
      "Affiliation": "",
      "Key": "olisharpe",
      "Name": "Oli Sharpe",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/olisharpe/ed2faad9-b0bb-4660-82be-cf7928f12668/small.jpg"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Key": "louisspinelli",
      "Name": "Louis Spinelli"
    },
    {
      "Affiliation": "University of Bergen, Norway",
      "Key": "annamariaeilertsen1",
      "Name": "Anna Maria Eilertsen"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "nikosfoutris",
      "Name": "Nikos Foutris"
    },
    {
      "Affiliation": "Rensselaer Polytechnic Institute",
      "Key": "anamilanova",
      "Name": "Ana Milanova",
      "URL": "http://www.cs.rpi.edu/~milanova/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/anamilanova/4fa9038c-d0e6-44ca-b1b7-2420329714f4/small.jpg"
    },
    {
      "Affiliation": "University of Texas at Dallas",
      "Key": "vasujindal",
      "Name": "Vasu Jindal"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "darioolianas",
      "Name": "Dario Olianas"
    },
    {
      "Affiliation": "",
      "Key": "gorelhedin1",
      "Name": "Görel Hedin",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/gorelhedin1/04865ab8-0205-4081-8087-025cb12eacc6/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "antranigbasman",
      "Name": "Antranig Basman"
    },
    {
      "Affiliation": "University of Lugano, Switzerland",
      "Key": "andrearosa",
      "Name": "Andrea Rosà",
      "URL": "http://www.inf.usi.ch/phd/rosaa",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/andrearosa/56bfbe88-343d-473c-b65b-a085469b0cae/small.jpg"
    },
    {
      "Affiliation": "Simula Research Laboratory and University of Oslo",
      "Bio": "Tao Yue is a chief research scientist at Simula Research Laboratory, Oslo, Norway. She has received the Ph.D. degree in the Department of Systems and Computer Engineering at Carleton University, Ottawa, Canada in 2010. Before that, she was an aviation engineer and system engineer for seven years. She has nearly 20 years of experience of conducting industry-oriented research with a focus on Model-Based Engineering (MBE) in various application domains such as Avionics, Maritime and Energy, Communications, Automated Industry, and Healthcare in several countries including Canada, Norway, and China. Her present research area is software engineering, with specific interests in Requirements Engineering, MBE, Model-based Testing, Uncertainty-wise Testing, Uncertainty Modeling, Search-based Software Engineering, Empirical Software Engineering, and Product Line Engineering, with a particular focus on large-scale software systems such as Cyber-Physical Systems. Dr. Yue is on the steering committee of MODELS 2018 and serves as a PC co-chair of MODELS 2019, and has been on the program and organization committees of several international conferences (e.g., MODELS, RE, SPLC). She is also on the editorial board of Empirical Software Engineering. Dr. Yue is leading the standardization effort of Uncertainty Modeling at OMG and also actively participating in defining international standards in Object Management Group (OMG) such as SysML and UTP.",
      "Key": "taoyue",
      "Name": "Tao Yue",
      "URL": "https://www.simula.no/people/tao",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/taoyue/3767fe0f-1c1a-4f88-8136-544ba7ad4b11/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Bio": "Eelco Visser is Antoni van Leeuwenhoek Professor of Computer Science at Delft University of Technology. He received a master\u2019s and doctorate in computer science from the University of Amsterdam in 1993 and 1997, respectively. Previously he served as postdoc at the Oregon Graduate Institute, as Assistant Professor at Utrecht University, and as Associate Professor at TU Delft. \nHis research interests include programming languages, software language engineering, domain-specific programming languages, program transformation, software security, and interaction design. With his students he has designed and implemented the Spoofax language workbench, as well as many domain-specific languages, including DSLs for syntax definition (SDF2, SDF3), program transformation (Stratego), name binding (NaBL), dynamic semantics (DynSem), software deployment (Nix), web application development (WebDSL), and mobile phone applications (mobl). In the language designer\u2019s workbench project he is pursuing high-level declarative language definition that serves for language implementation and verification.",
      "Key": "eelcovisser",
      "Name": "Eelco Visser",
      "URL": "http://eelcovisser.org",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/eelcovisser/3df68e8e-fc37-4ca4-bf4e-132e3d32b392/small.jpg"
    },
    {
      "Affiliation": "Quarkslab",
      "Key": "juanmanuelmartinezcaamano",
      "Name": "Juan Manuel Martinez Caamaño"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "coenderoover",
      "Name": "Coen De Roover",
      "URL": "http://soft.vub.ac.be/~cderoove/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/coenderoover/ef3a26a6-56c3-420e-b1ce-b4a0e6cd653e/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "christianmosl",
      "Name": "Christian Mösl"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "lucafranceschini",
      "Name": "Luca Franceschini",
      "URL": "http://www.dibris.unige.it/en/franceschini-luca",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/lucafranceschini/b2706258-4326-46e9-b316-0ff23702528b/small.jpg"
    },
    {
      "Affiliation": "itemis/independent",
      "Key": "markusvlter",
      "Name": "Markus Völter",
      "URL": "http://voelter.de/"
    },
    {
      "Affiliation": "",
      "Key": "adrianrutle1",
      "Name": "Adrian Rutle"
    },
    {
      "Affiliation": "",
      "Key": "siegfriedhorschig",
      "Name": "Siegfried Horschig"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "guidosalvaneschi",
      "Name": "Guido Salvaneschi",
      "URL": "http://www.guidosalvaneschi.com/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/guidosalvaneschi/6f1373d5-57c6-4d68-b6c3-c0a679ee24ed/small.jpg"
    },
    {
      "Affiliation": "PUC-Rio",
      "Bio": "Roberto Ierusalimschy is an Associate Professor of Informatics at PUC-Rio, where he works with programming-language design and implementation. Roberto is also the main designer of the Lua programming language. In 2013 he received the Scientific Merit Award from the Brazilian Computer Society (SBC). Roberto is a Senior Speaker from SBC, a Distinguished Speaker from ACM, and member of the IFIP Working Group on Language Design (IFIP WG 2.16).",
      "Key": "robertoierusalimschy",
      "Name": "Roberto Ierusalimschy",
      "URL": "http://www.inf.puc-rio.br/~roberto",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/robertoierusalimschy/17e6e2ea-2b5d-4989-b0ee-0a979ef23be2/small.jpg"
    },
    {
      "Affiliation": "University of Brest",
      "Key": "stevencostiou",
      "Name": "Steven Costiou"
    },
    {
      "Affiliation": "Google",
      "Key": "benltitzer",
      "Name": "Ben L. Titzer",
      "URL": "https://research.google.com/pubs/BenTitzer.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/benltitzer/e78a671d-6f5a-48da-8c42-596ccc112232/small.jpg"
    },
    {
      "Affiliation": "Ludwig-Maximilians-Universität München",
      "Key": "annabelleklarl",
      "Name": "Annabelle Klarl",
      "URL": "https://www.pst.ifi.lmu.de/People/staff/klarl.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/annabelleklarl/b6ff3b40-2893-45f2-91d5-c9a5ea7d2943/small.jpg"
    },
    {
      "Affiliation": "University of Paderborn, Germany",
      "Key": "enesyigitbas",
      "Name": "Enes Yigitbas",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/enesyigitbas/fd2c9b45-0b5c-4916-acf7-505c7c1370dd/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "iainapreotesei",
      "Name": "Iain Apreotesei"
    },
    {
      "Affiliation": "Universiteit Utrecht",
      "Key": "amirsaeidi",
      "Name": "Amir Saeidi"
    },
    {
      "Affiliation": "State University of New York (SUNY) Binghamton",
      "Bio": "I am an Associate Professor at State University of New York (SUNY) at Binghamton. I am interested in programming languages, software engineering, and systems, with current focuses on energy-aware programming languages, data-intensive software, and type systems. I received my Ph.D. in Computer Science from the Johns Hopkins University, in 2007.",
      "Key": "yudavidliu",
      "Name": "Yu David Liu",
      "URL": "http://www.cs.binghamton.edu/~davidl",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/yudavidliu/1da5367f-6c86-4df7-859d-ca63bc2a178b/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "byoungohkim",
      "Name": "Byoungoh Kim"
    },
    {
      "Affiliation": "École Polytechnique de Montréal",
      "Key": "mariosfokaefs",
      "Name": "Marios Fokaefs"
    },
    {
      "Affiliation": "University of Bergen",
      "Key": "jaakkojarvi",
      "Name": "Jaakko Järvi",
      "URL": "https://parasol.tamu.edu/~jarvi/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jaakkojarvi/2baa5bc6-a9c0-42a0-a4ca-f7f878dd3381/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "jorgkienzle",
      "Name": "Jörg Kienzle",
      "URL": "http://www.cs.mcgill.ca/~joerg/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jorgkienzle/5833ba8f-2294-444c-8f6a-54007a388e34/small.jpg"
    },
    {
      "Affiliation": "Continental Automotive GmbH, Germany, Germany",
      "Key": "mariuslauder",
      "Name": "Marius Lauder",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mariuslauder/87e5dab8-4764-4b83-8171-8770481bd24b/small.jpg"
    },
    {
      "Affiliation": "Technische Universität Darmstadt",
      "Key": "ragnarmogk",
      "Name": "Ragnar Mogk"
    },
    {
      "Affiliation": "",
      "Key": "joncorbett",
      "Name": "Jon Corbett"
    },
    {
      "Affiliation": "National Institute of Informatics",
      "Key": "zhenjianghu",
      "Name": "Zhenjiang Hu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/zhenjianghu/5d426480-5589-46be-b4f6-f98cf2acc80e/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "luiseduardodesouzaamorim",
      "Name": "Luís Eduardo de Souza Amorim",
      "URL": "https://www.linkedin.com/in/eduardosamorim",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/luiseduardodesouzaamorim/4da06111-f94a-4137-ac9a-354589442343/small.jpg"
    },
    {
      "Affiliation": "Aerospace Corporation",
      "Key": "kirstiebellman",
      "Name": "Kirstie Bellman"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "erhanleblebici",
      "Name": "Erhan Leblebici",
      "URL": "http://www.es.tu-darmstadt.de/es/team/erhan-leblebici/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/erhanleblebici/6d362318-bdd8-4748-95da-ed819bfc04f8/small.jpg"
    },
    {
      "Affiliation": "Quarkslab",
      "Key": "sergeguelton",
      "Name": "Serge Guelton"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Bio": "I am a PhD student at the Hasso Plattner Institute at the University of Potsdam. I am part of the Software Architecture group led by Prof. Dr. Robert Hirschfeld. Since October 2011, I have also been part of the HPI Research School after getting my Master\u2019s degree in Software Engineering at the HPI, too. \nMy research activities include the area of building tools for programmers, especially data-driven ones for program comprehension tasks. For this, direct manipulation concepts, dynamic analysis, and cooperation of distributed teams in agile processes play an important role. Additionally, I investigate modularity concepts with respect to critical software quality metrics such as extensibility and maintainability while reasoning about interdependencies between languages and tools.",
      "Key": "marceltaeumel",
      "Name": "Marcel Taeumel",
      "URL": "http://www.taeumel.eu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/marceltaeumel/6586e7ac-b7f0-4e44-b127-e1d62530239a/small.jpg"
    },
    {
      "Affiliation": "eBay",
      "Key": "michaelhaupt",
      "Name": "Michael Haupt",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/michaelhaupt/8cf18dbc-5fe6-4c6c-86a0-c151b29d4671/small.jpg"
    },
    {
      "Affiliation": "Y Combinator Research, USA",
      "Key": "patrickdubroy",
      "Name": "Patrick Dubroy",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/patrickdubroy/809e3776-4917-4397-a6c5-b85d7a3e7839/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge, UK",
      "Key": "jeremyyallop",
      "Name": "Jeremy Yallop",
      "URL": "http://www.cl.cam.ac.uk/~jdy22/"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Michael Van De Vanter is a researcher at Oracle Labs in Redwood Shores, CA. His current project is to ensure that the high-performance language implementations made possible by the Truffle/Graal platform are accompanied by tools, such as debuggers, profilers, and others, with minimal extra development effort. He was previously author of the Maxine Inspector, a combination debugger and visual heap inspector for the Maxine Research VM, and before that Principal Investigator of the Jackpot project at Sun Microsystems Labs.",
      "Key": "michaelvandevanter",
      "Name": "Michael Van De Vanter",
      "URL": "http://vandevanter.net/mlvdv",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/michaelvandevanter/dc121b2b-14e8-4c60-bb30-a1cc7048a495/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "jamescheney",
      "Name": "James Cheney",
      "URL": "http://homepages.inf.ed.ac.uk/jcheney/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jamescheney/fad2c5e0-4605-4bd7-a0bb-aa02ec0b60ba/small.jpg"
    },
    {
      "Affiliation": "University of Minho and INESC TEC, Portugal",
      "Key": "alcinocunha",
      "Name": "Alcino Cunha",
      "URL": "http://www.di.uminho.pt/~alcino",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/alcinocunha/53c9c18a-bf80-409e-9f2c-52e8100e324b/small.jpg"
    },
    {
      "Affiliation": "MINES ParisTech, France",
      "Key": "adillasusungi",
      "Name": "Adilla Susungi"
    },
    {
      "Affiliation": "",
      "Key": "chuljookim",
      "Name": "Chul-Joo Kim"
    },
    {
      "Affiliation": "KAIST, South Korea",
      "Bio": "Jihyeok Park is a Phd. candidate in Scool of Compuing, KAIST, Korea. He is a main develop of SAFE, Scalable Analysis Framework for ECMAScrip. It is a static analyzer for Web applications. Recently, He\u2019s focusing on proposing a new kind of memory abstraction for JavaScript static analysis.",
      "Key": "jihyeokpark",
      "Name": "Jihyeok Park",
      "URL": "http://plrg.kaist.ac.kr/jhp",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jihyeokpark/6aa018fd-07f5-40c9-8ad6-9e81a3ffbf15/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "slingerjansen",
      "Name": "Slinger Jansen"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "andyschurr",
      "Name": "Andy Schürr",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/andyschurr/b3c83371-9583-4f5a-b3ca-1240bf1f9bda/small.jpg"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "marinaribaudo",
      "Name": "Marina Ribaudo"
    },
    {
      "Affiliation": "University of Chile",
      "Key": "alexandrebergel",
      "Name": "Alexandre Bergel",
      "URL": "http://bergel.eu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/alexandrebergel/b098f857-2429-400b-b628-bbc3c26d7c8b/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "alejandrorusso",
      "Name": "Alejandro Russo",
      "URL": "http://www.cse.chalmers.se/~russo/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/alejandrorusso/4304fb98-9fc5-4dd8-95c1-8fa2ca83765d/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute, University of Potsdam",
      "Key": "holgergiese",
      "Name": "Holger Giese",
      "URL": "https://hpi.de/en/giese/staff/prof-dr-holger-giese.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/holgergiese/1b2d2ab2-99f6-48c4-b7d4-7dded5b48a21/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "michelbeaudouinlafon",
      "Name": "Michel Beaudouin-Lafon"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Indiana University. \nResearch Interests: my research focuses on the design and analysis of software and programming languages. I am particularly interested in how programs grow from prototype scripts to robust software, and how programming language design can support this process. My research concerns type systems, software contracts, modularity, and extensibility. I\u2019m currently working with the DARPA CRASH program on Racket and with Mozilla Labs on JavaScript.",
      "Key": "samtobinhochstadt",
      "Name": "Sam Tobin-Hochstadt",
      "URL": "http://samth.github.io",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/samtobinhochstadt/d817e5c9-fe1c-4664-a4d1-6af45d4d4586/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "clementponcelet",
      "Name": "Clément Poncelet"
    },
    {
      "Affiliation": "INRIA",
      "Key": "ludovichenrio",
      "Name": "Ludovic Henrio",
      "URL": "http://www-sop.inria.fr/members/Ludovic.Henrio/"
    },
    {
      "Affiliation": "imec",
      "Key": "pascalcostanza",
      "Name": "Pascal Costanza",
      "URL": "https://p-cos.net"
    },
    {
      "Affiliation": " INRIA Lille",
      "Key": "marcusdenker",
      "Name": "Marcus Denker"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "juanfumero",
      "Name": "Juan Fumero",
      "URL": "https://snatverk.blogspot.co.uk/p/about.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/juanfumero/e76896d1-7e40-4e77-859f-dc51392013a2/small.jpg"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Bio": "PhD student at the University of Edinburgh, Scotland, UK",
      "Key": "danielhillerstrom",
      "Name": "Daniel Hillerström",
      "URL": "http://www.homepages.inf.ed.ac.uk/s1467124",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/danielhillerstrom/22512b81-b136-4451-bcdd-f3d2fbc0210a/small.jpg"
    },
    {
      "Affiliation": "University of Bergen",
      "Key": "ragnhildaalvik",
      "Name": "Ragnhild Aalvik"
    },
    {
      "Affiliation": "",
      "Key": "yoonkyonglee",
      "Name": "Yoonkyong Lee"
    },
    {
      "Affiliation": "",
      "Key": "pavelbazant",
      "Name": "Pavel Bažant"
    },
    {
      "Affiliation": "Universiteit Utrecht",
      "Key": "ravikhadka",
      "Name": "Ravi Khadka"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "wolfgangdemeuter",
      "Name": "Wolfgang De Meuter",
      "URL": "https://soft.vub.ac.be/soft/users/wdmeuter"
    },
    {
      "Affiliation": "University of Washington, Seattle",
      "Key": "steventanimoto",
      "Name": "Steven Tanimoto",
      "URL": "http://www.cs.washington.edu/people/faculty/tanimoto/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/steventanimoto/05d6310f-019c-4961-8d0b-b110ec324d69/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "erikwittern",
      "Name": "Erik Wittern"
    },
    {
      "Affiliation": "University of Chicago",
      "Bio": "I am an Assistant Professor at the University of Chicago. I enjoy developing and deploying programming language technology \u2014 type systems, synthesis algorithms, and other program analysis techniques \u2014 for applications in software engineering and human-computer interaction.",
      "Key": "ravichugh",
      "Name": "Ravi Chugh",
      "URL": "http://people.cs.uchicago.edu/~rchugh",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/ravichugh/ea931b20-b1e1-4e07-b209-ba0b568e315d/small.jpg"
    },
    {
      "Affiliation": "Department of Computer Science, University of Oxford",
      "Bio": "I am Professor of Computing in the Department of Computer Science at the University of Oxford. I am currently Director of the Software Engineering Programme, which offers part-time professional Masters\u2019 degrees in Software Engineering and in Software and Systems Security. I also lead the Algebra of Programming research group. I am Editor-in-Chief of the Journal of Functional Programming, Past Vice Chair of ACM SIGPLAN, Past Chair of IFIP WG2.1. Before taking up this post in 1999, I held lectureships at Oxford Brookes University and the University of Auckland, New Zealand.",
      "Key": "jeremygibbons",
      "Name": "Jeremy Gibbons",
      "URL": "http://www.cs.ox.ac.uk/jeremy.gibbons/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jeremygibbons/17403e55-a926-41cf-ae21-08abecea187c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alfonsopierantonio",
      "Name": "Alfonso Pierantonio",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/alfonsopierantonio/96f60f33-4f0e-4533-905b-638e91810a4c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "estherguerra",
      "Name": "Esther Guerra",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/estherguerra/6529c94e-dfd9-4b1a-82ae-a9ab0313a37c/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "orionpapadakis",
      "Name": "Orion Papadakis"
    },
    {
      "Affiliation": "University of Tokyo, Japan",
      "Key": "shigeruchiba",
      "Name": "Shigeru Chiba",
      "URL": "http://www.csg.ci.i.u-tokyo.ac.jp/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/shigeruchiba/b57db719-4160-4e39-9f41-ef3facc9e449/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh, UK / University of Glasgow, UK",
      "Key": "rolyperera",
      "Name": "Roly Perera",
      "URL": "http://dynamicaspects.org",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/rolyperera/42845e32-53e3-4d06-8763-41583d7a761c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "jamesterwilliger",
      "Name": "James Terwilliger"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "diegoclerissi",
      "Name": "Diego Clerissi"
    },
    {
      "Affiliation": "Microsoft AI+Research",
      "Key": "titusbarik",
      "Name": "Titus Barik",
      "URL": "http://www.barik.net",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/titusbarik/4b73ddb9-c562-4f79-82e2-78e9723c8944/small.jpg"
    },
    {
      "Affiliation": "imec-DistriNet, KU Leuven, Belgium",
      "Key": "bobreynders",
      "Name": "Bob Reynders",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/bobreynders/bee479c7-2b05-4ff1-af82-a299da2385b4/small.jpg"
    },
    {
      "Affiliation": "Oracle",
      "Bio": "David Simms, an engineer within the Oracle\u2019s Hotspot JVM Runtime team, working out of Stockholm Sweden. JVM engineering since 2002 starting the JRockit VM. Currently assigned to OpenJDK Project Valhalla, engineering and some cat herding. \nProfessional interests in Operating Systems, network stacks, language run-times and continuous delivery; having engineering experience in all of these areas.",
      "Key": "davidsimms",
      "Name": "David Simms",
      "URL": "https://twitter.com/SimmsUpNorth",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/davidsimms/c7072ca0-4896-476c-9b96-fef3355c2d61/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "martingogolla",
      "Name": "Martin Gogolla",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/martingogolla/8b518aec-1450-41e5-a2c0-b5267de44c36/small.jpg"
    },
    {
      "Affiliation": "Tohoku University",
      "Key": "kazutakamatsuda",
      "Name": "Kazutaka Matsuda",
      "URL": "http://www2.sf.ecei.tohoku.ac.jp/~kztk/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/kazutakamatsuda/2262653d-0d0f-4641-8ac2-7b653c0e3683/small.jpg"
    },
    {
      "Affiliation": "IBM Thomas J. Watson Research Center",
      "Key": "juliandolby",
      "Name": "Julian Dolby",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-dolby",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/juliandolby/092667c4-6e51-4476-8ef0-58b41ce9014d/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "johnmawer",
      "Name": "John Mawer"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Bio": "I am a Professor of Computer Science at the Technical University of Darmstadt, Germany. \nMy research focuses on software development paradigms and tools. \nOn the paradigms side, I develop programming languages to enable the visions of \u201csoftware as a service (SaaS)\u201d and \u201csoftware product-lines\u201d by providing large-scale module concepts with built-in support for adaptability and extensibility. \nOn the tools side, I work on intelligent software-development environments that guide developers to increase the development productivity and the software quality. Such environment leverage web-based resources to automatically generate and recommend established programming rules and patterns; they also enable architects to explicitly specify such patterns to be enforced during development. \nI have (co)authored over 100 scientific publications in renowned publication venues in software engineering and programming languages. I regularly serve on steering committees, program committees, and editorial boards of top tier conferences and journals in software engineering and programming languages.",
      "Key": "miramezini",
      "Name": "Mira Mezini",
      "URL": "http://www.stg.tu-darmstadt.de/staff/mira_mezini/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/miramezini/8e9ce50d-5266-482f-8510-cf2da66e77ae/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "jamesnoble",
      "Name": "James Noble",
      "URL": "http://homepages.mcs.vuw.ac.nz/~kjx/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jamesnoble/397692f7-f014-4032-a93d-bc522e882d80/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "javierburroni",
      "Name": "Javier Burroni",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/javierburroni/dc65c155-74c5-40ce-b81f-e638faeff433/small.jpg"
    },
    {
      "Affiliation": "University of Central Florida",
      "Bio": "The long term goal of my research is to better understand how to solve programming problems: how to specify such problems, methods for thinking about such problems, notations for expressing solutions, and ways to check that the solutions are correct. In pursuing this goal, I have worked in two main areas: formal methods and programming languages. formal methods and programming languages.",
      "Key": "garyleavens",
      "Name": "Gary Leavens",
      "URL": "http://www.cs.ucf.edu/~leavens",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/garyleavens/dfa2c000-4f7d-43b5-9d2b-38e6edd6002c/small.jpg"
    },
    {
      "Affiliation": " Università degli Studi di Milano",
      "Bio": "Walter Cazzola is currently an Associate Professor at the Department of Computer Science of the Università degli Studi di Milano, Italy and the Chair of the ADAPT laboratory. Previously, Cazzola was assistant professor at the same institution and researcher assistant at the Department of Informatics and Computer Science of the Università degli Studi di Genova. \nHe is the designer of the mChaRM framework, of the @Java/@AspectJ, [a]C#, Blueprint programming languages and he is currently involved in the designing and development of the Neverlang general purpose compiler generator. He is also actively involved in the software evolution and models@run-time research areas where he co-designed the JavAdaptor DSU, the ReverseЯ model extractor tool. He pioneered the language product line research area with the Neverlang+AiDE framework. \nHis research interests straddle from programming languages to software engineering and they include (but are not limited to) computational reflection, aspect-oriented software development, programming techniques and languages, software product lines and software evolution. He has written more than 100 technical papers. He served on the program committees or editorial boards of the most important conferences and journals about his research topics.",
      "Key": "waltercazzola",
      "Name": "Walter Cazzola",
      "URL": "http://cazzola.di.unimi.it/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/waltercazzola/72dfcd0d-15b4-4f37-a74c-e77fc20730cb/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "matteomarra",
      "Name": "Matteo Marra"
    },
    {
      "Affiliation": "Technion\u2014Israel Institute of Technology",
      "Bio": "I am an Associate Professor in the Department of Computer Science at Technion - Israel Institute of Technology, Israel. \nResearch Interests: Software engineering, in particular: aspects related to the object-oriented paradigm, programming languages and parsing.",
      "Key": "yossigil",
      "Name": "Yossi Gil",
      "URL": "http://www.cs.technion.ac.il/~yogi/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/yossigil/c5d32103-5b4c-4068-864d-9eb75f0b171b/small.jpg"
    },
    {
      "Affiliation": "University of Lisbon, Portugal",
      "Key": "vascotvasconcelos",
      "Name": "Vasco T. Vasconcelos"
    },
    {
      "Affiliation": "UPMC & INRIA",
      "Key": "sergestinckwich",
      "Name": "Serge Stinckwich "
    },
    {
      "Affiliation": "Ghent University, Belgium",
      "Key": "lieveneeckhout",
      "Name": "Lieven Eeckhout",
      "URL": "http://users.elis.ugent.be/~leeckhou/"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Chris Seaton is a Research Manager at the Virtual Machine Group in Oracle Labs, where he leads the work to implement Ruby using the next generation of Java Virtual Machine technology, and other projects. \nBefore this he completed a PhD at the University of Manchester under the supervision of Doctor Mikel Luján, where he researched programming languages and irregular parallelism. Before that, he completed an MEng at the University of Bristol on languages with mutable syntax and semantics. \nIn his spare time he used to develop an award winning medical app that is the first app regulated as a medical device in the UK, and ran a consultancy to help clients such as the NHS to develop revolutionary medical software.",
      "Key": "chrisseaton",
      "Name": "Chris Seaton",
      "URL": "http://chrisseaton.com/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/chrisseaton/ace700bb-530d-472f-9683-f0f036db05ea/small.jpg"
    },
    {
      "Affiliation": "Mozilla Corporation",
      "Bio": "Nicholas Matsakis is a senior researcher at Mozilla research and a member of the Rust core team. He has been working on Rust for four years and did much of the initial work on its type system and other core features. He has also done work in several just-in-time compilers as well as building high-performance networking systems. He did his undergraduate study at MIT, graduating in 2001, and later obtained a PhD in 2011, working with Thomas Gross at ETH Zurich.",
      "Key": "nicholasmatsakis",
      "Name": "Nicholas Matsakis",
      "URL": "http://smallcultfollowing.com/babysteps/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/nicholasmatsakis/adab8793-5f2f-454f-a790-89ffdacd80ed/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "manuelwidmoser",
      "Name": "Manuel Widmoser"
    },
    {
      "Affiliation": "",
      "Key": "thomasspringer",
      "Name": "Thomas Springer"
    },
    {
      "Affiliation": "SAP Innovation Center Potsdam",
      "Bio": "I\u2019m a researcher and development manager with the SAP Innovation Center Network and its Chairman Projects team. Before joining SAP in 2014, I was a postdoctoral researcher and Ph.D. student in computer science with the Software Architecture Group, led by Prof. Dr. Robert Hirschfeld, at the Hasso-Plattner-Institute (University of Potsdam). \nMy main research focuses on software engineering, maintenance, and reverse engineering. In particular, I\u2019m interested in debugging, dynamic analysis, and program comprehension. My projects are primarily implemented in JavaScript, Smalltalk for the Squeak development environment, and Python.",
      "Key": "michaelperscheid",
      "Name": "Michael Perscheid",
      "URL": "http://www.michaelperscheid.de",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/michaelperscheid/48423a9c-afec-4692-9de2-308b8d1b15ec/small.jpg"
    },
    {
      "Affiliation": "University of Kansas, USA",
      "Key": "jgarrettmorris",
      "Name": "J. Garrett Morris",
      "URL": "http://jgbm.github.io",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jgarrettmorris/bfd0d5b6-e65e-403e-882f-089258565ed5/small.jpg"
    },
    {
      "Affiliation": "SUNY Buffalo, USA",
      "Key": "lukaszziarek",
      "Name": "Lukasz Ziarek",
      "URL": "http://www.cse.buffalo.edu/~lziarek/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/lukaszziarek/78ff4fd0-ef3b-4aed-ba86-2d6e66f85f65/small.jpg"
    },
    {
      "Affiliation": "JKU Linz, Austria",
      "Bio": "PhD student in Linz, Austria, researching about parallelism in the context of TruffleRuby, an implementation of Ruby using the Truffle framework and the Graal dynamic compiler.",
      "Key": "benoitdaloze",
      "Name": "Benoit Daloze",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/benoitdaloze/5ac85d31-cbd8-46c7-9335-363f6336ae85/small.jpg"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "annamariaeilertsen",
      "Name": "Anna Maria Eilertsen"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Bio": "Adminstrator + support for conf.researchr.org.",
      "Key": "elmervanchastelet",
      "Name": "Elmer van Chastelet",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/elmervanchastelet/55ccc9a8-327f-423a-ae20-01391b394a05/small.jpg"
    },
    {
      "Affiliation": "University of Duisburg-Essen",
      "Key": "janisvoigtlander",
      "Name": "Janis Voigtländer",
      "URL": "https://www.uni-due.de/fmi/voigtlaender_en",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/janisvoigtlander/8ebfc814-a71f-4fe8-b78f-8ff95df14197/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "jennifersartor",
      "Name": "Jennifer B. Sartor",
      "URL": "http://soft.vub.ac.be/~jsartor/index.html",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jennifersartor/49f34418-99a7-4c27-acaf-7c3aed1d8b59/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "elisagonzalezboix",
      "Name": "Elisa Gonzalez Boix",
      "URL": "http://soft.vub.ac.be/~egonzale",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/elisagonzalezboix/8e8a61c4-366e-49b5-a861-7dfbc98ee129/small.jpg"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "giorgiodelzanno",
      "Name": "Giorgio Delzanno"
    },
    {
      "Affiliation": "University of Manchester",
      "Key": "mikellujan1",
      "Name": "Mikel Luján"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "jacobkreindl",
      "Name": "Jacob Kreindl"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Bio": "Hidehiko Masuhara is a Professor of Mathematical and Computing Science, Tokyo Institute of Technology since April 2013. He received his B.S., M.S., and Ph.D. in Computer Science from Department of Information Science, University of Tokyo in 1992, 1994, and 1999, respectively, and served as an assistant professor, lecturer, and associate professor at Graphics and Computer Science, Graduate School of Arts and Sciences, University of Tokyo from 1995 until 2013.",
      "Key": "hidehikomasuhara",
      "Name": "Hidehiko Masuhara",
      "URL": "http://prg.is.titech.ac.jp/people/masuhara/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/hidehikomasuhara/3ea94269-6fb5-4c6d-8d6f-0435717377d6/small.jpg"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Bio": "PhD student at the University of Edinburgh.",
      "Key": "simonfowler",
      "Name": "Simon Fowler",
      "URL": "http://www.simonjf.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/simonfowler/8da87b62-b333-4c60-ac4a-27594510d4b1/small.jpg"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "borismagnusson",
      "Name": "Boris Magnusson"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "stephenkell",
      "Name": "Stephen Kell",
      "URL": "http://www.cl.cam.ac.uk/~srk31/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/stephenkell/53088184-3e8c-4a2c-b34f-b2a290cff411/small.jpg"
    },
    {
      "Affiliation": "Harvard University",
      "Key": "ezrazigmond",
      "Name": "Ezra Zigmond",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/ezrazigmond/6fd7b863-685a-48df-9e6a-2b39621911d5/small.jpg"
    },
    {
      "Affiliation": "PyPy.org, Switzerland",
      "Bio": "Armin Rigo is one of the founders and lead developers of the PyPy project which began in 2003. He has taken part in all areas, from the Python language definition to the RPython translation framework, including the garbage collector, the tracing just-in-time compiler, the Software Transactional Memory part, and more.",
      "Key": "arminrigo",
      "Name": "Armin Rigo",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/arminrigo/64ba11c3-c043-4b89-9b34-7b5fece2571c/small.jpg"
    },
    {
      "Affiliation": "Open University of the Netherlands",
      "Key": "markovaneekelen",
      "Name": "Marko van Eekelen"
    },
    {
      "Affiliation": "Oracle Labs, Austria",
      "Key": "matthiasgrimmer",
      "Name": "Matthias Grimmer",
      "URL": "http://www.matthiasgrimmer.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/matthiasgrimmer/8c9a67ac-2ea5-4914-9110-3d4a80b16ff0/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Bio": "Edd is a Research Associate at King\u2019s College London where he works on Just-In-Time compilation techniques for dynamic languages. \nPrior to his current position, Edd studied for a PhD in static analysis of binary code from University of Kent in England.",
      "Key": "eddbarrett",
      "Name": "Edd Barrett",
      "URL": "http://eddbarrett.co.uk/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/eddbarrett/a95e0154-9c58-48d6-8ccf-e21e4dd982c6/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "micheletucci",
      "Name": "Michele Tucci"
    },
    {
      "Affiliation": "Université Côte d\u2019Azur, CNRS, INRIA",
      "Key": "michelbuffa",
      "Name": "Michel Buffa"
    },
    {
      "Affiliation": "University of York, UK",
      "Key": "oliverlarkin",
      "Name": "Oliver Larkin",
      "URL": "http://webaudiomodules.org/"
    },
    {
      "Affiliation": "City University of New York (CUNY) Hunter College",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Hunter College and the Graduate Center of the City University of New York (CUNY). My research is centered on techniques for automated software evolution, particularly those related to automated refactoring and source code recommendation systems. My goal is to ease the burden associated with correctly and efficiently evolving large and complex software by providing automated tools that can be easily used by developers. I am also interested in automated analysis of Object-Oriented and Aspect-Oriented programs. \nI received my MS and PhD degrees in Computer Science from Ohio State University and my BS degree in Computer Science from Monmouth University in New Jersey. Prior to joining City Tech, I was a Software Engineer at Apple, Inc. in Cupertino, California, where I worked on Digital Rights Management (DRM) for iTunes, iBooks, and the App store. I also developed distributed software that tested various features of iPhones, iPads, and iPods. You may also find more information about me by visiting my CUNY Academic Commons profile, my vita, GitHub, and my blog (you can subscribe for updates here).",
      "Key": "raffikhatchadourian",
      "Name": "Raffi Khatchadourian",
      "URL": "http://www.cs.hunter.cuny.edu/~Raffi.Khatchadourian99",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/raffikhatchadourian/5c884f46-e4aa-4dc5-b581-2e37f77d320a/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Bio": "Christoph Kirsch is Professor at the Department of Computer Sciences of the University of Salzburg, Austria. He received his Dr.Ing. degree from Saarland University, Saarbrücken, Germany, in 1999 while at the Max Planck Institute for Computer Science. From 1999 to 2004 he worked as Postdoctoral Researcher at the Department of Electrical Engineering and Computer Sciences of the University of California, Berkeley. He later returned to Berkeley as Visiting Scholar (2008-2013) and Visiting Professor (2014) at the Department of Civil and Environmental Engineering as part of a collaborative research effort in Cyber-Physical Systems. His research interests are in concurrent programming, memory management, virtualization, and automated theorem proving. Dr. Kirsch co-invented embedded programming languages and systems such as Giotto, HTL, and the Embedded Machine, and more recently co-designed high-performance, multicore-scalable concurrent data structures and memory management systems. He co-founded the International Conference on Embedded Software (EMSOFT) and served as ACM SIGBED chair from 2011 until 2013 and ACM TODAES associate editor from 2011 until 2014. He is currently associate editor of IEEE TCAD.",
      "Key": "christophkirsch",
      "Name": "Christoph Kirsch",
      "URL": "http://cs.uni-salzburg.at/~ck",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/christophkirsch/2adc8995-a32a-49c9-b820-8427e5a1f25a/small.jpg"
    },
    {
      "Affiliation": "INRIA",
      "Key": "camilleteruel",
      "Name": "Camille Teruel"
    },
    {
      "Affiliation": "University of Notre Dame",
      "Key": "janeclelandhuang",
      "Name": "Jane Cleland-Huang",
      "URL": "http://sarec.nd.edu",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/janeclelandhuang/ca8dad1f-8ca8-42a7-91cc-82464055ab47/small.jpg"
    },
    {
      "Affiliation": "Macquarie University, Australia",
      "Key": "michaeljohnson",
      "Name": "Michael Johnson"
    },
    {
      "Affiliation": "JKU Linz, Austria",
      "Key": "hanspetermossenbock",
      "Name": "Hanspeter Mössenböck",
      "URL": "http://ssw.jku.at/General/Staff/HM/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/hanspetermossenbock/3a16b6f0-00fa-4ef3-93df-13ea4a29430c/small.jpg"
    },
    {
      "Affiliation": "Software Languages Lab",
      "Key": "laurephilips",
      "Name": "Laure Philips",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/laurephilips/ee08859f-ec35-4d80-9082-9b2b93818c74/small.jpg"
    },
    {
      "Affiliation": "Slovak University of Technology in Bratislava, Slovakia",
      "Key": "sandrakostova",
      "Name": "Sandra Kostova"
    },
    {
      "Affiliation": "Aerospace Corporation",
      "Key": "kristiebellman",
      "Name": "Kristie Bellman"
    },
    {
      "Affiliation": "RMOD - INRIA Lille Nord Europe",
      "Bio": "Recently I\u2019ve built an optimising JIT compiler for a Smalltalk VM (performing speculative optimisations) and I\u2019ve done some work related to the memory management of Smalltalk runtimes, especially the implementation of forwarding objects with low overhead.",
      "Key": "clementbera",
      "Name": "Clément Béra",
      "URL": "https://clementbera.wordpress.com/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/clementbera/6766938c-5a8f-4559-86e0-cd5f26d6c405/small.jpg"
    },
    {
      "Affiliation": "Inria",
      "Key": "nataliiabielova",
      "Name": "Nataliia Bielova",
      "URL": "http://www-sop.inria.fr/members/Nataliia.Bielova/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/nataliiabielova/ce193320-7c3e-4cf5-bb66-05d719761b6d/small.jpg"
    },
    {
      "Affiliation": "Illinois Institute of Technology",
      "Bio": "Boris Glavic is an Assistant Professor of Computer Science at the Illinois Institute of Technology where he leads the IIT database group (http://www.cs.iit.edu/~dbgroup/). Before coming to IIT, Boris spend to two years as a PostDoc at the University of Toronto working with Renée J. Miller. He received his PhD from the University of Zurich in Switzerland being advised by Michael Böhlen and Gustavo Alonso. Boris is a database researcher conducting systems research based on solid theoretical foundations. His main research interests are provenance, data integration and cleaning, and query processing and optimization.",
      "Key": "borisglavic",
      "Name": "Boris Glavic",
      "URL": "http://www.cs.iit.edu/~glavic/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/borisglavic/c0edd8e4-6618-4884-ae20-de13d1be4a72/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Bio": "Yukinori Sato is a Specially Appointed Associate Professor (Lecturer) at Tokyo Institute of Technology in Japan. His research interests lie in the broad area of high performance computing system, computer system architecture, reconfigurable computing and software and tools for them. In particular, he has been working on developing productive software for parallelism discovery and performance tuning, and a tool for run-time application analysis. He received the Ph.D. degree on Information Sciences from Tohoku University. From 2006, he engaged in software engineering for multicore systems and system design of embedded devices in a start-up company. From 2007 to 2015, he was an Assistant Professor at Japan Advanced Institute of Technology. He is a member of the IEEE Computer Society, the ACM, the IEICE and the Information Processing Society of Japan.",
      "Key": "yukinorisato",
      "Name": "Yukinori Sato",
      "URL": "http://www.el.gsic.titech.ac.jp/~yukinori/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/yukinorisato/b3effe55-f665-4ee2-8b05-6a8d9f8b08bb/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "antoniofilieri",
      "Name": "Antonio Filieri",
      "URL": "https://www.antonio.filieri.name/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/antoniofilieri/dbe0b26c-98c5-4cc2-8d79-719a978db6e5/small.jpg"
    },
    {
      "Affiliation": "University of Minho, Portugal",
      "Key": "hugopacheco",
      "Name": "Hugo Pacheco",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/hugopacheco/9e419442-d4a3-47bf-bf09-eb7d8f2e1817/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alvarovidela",
      "Name": "Alvaro Videla"
    },
    {
      "Affiliation": "HPI, Germany",
      "Key": "tobiaspape",
      "Name": "Tobias Pape",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tobiaspape/05e8b3b4-2c7d-4349-af8a-15fa517a0036/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "guntermussbacher",
      "Name": "Gunter Mussbacher",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/guntermussbacher/f1452019-54bd-4b93-bbdb-eaece6059e96/small.jpg"
    },
    {
      "Affiliation": "University of Lugano, Switzerland",
      "Key": "eduardorosales",
      "Name": "Eduardo Rosales"
    },
    {
      "Affiliation": "Philipps-Universität Marburg",
      "Key": "christophbockisch",
      "Name": "Christoph Bockisch",
      "URL": "http://www.uni-marburg.de/fb12/arbeitsgruppen/psw/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/christophbockisch/7a0fd10b-9e2d-4580-a1c6-5e747d163a53/small.jpg"
    },
    {
      "Affiliation": "Inria",
      "Key": "alanschmitt",
      "Name": "Alan Schmitt"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "michaeljsteindorfer",
      "Name": "Michael J. Steindorfer"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "tobiasgrosser",
      "Name": "Tobias Grosser",
      "URL": "https://www.grosser.es",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tobiasgrosser/1ee43044-14e9-497e-a230-90f96a8da867/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute, University of Potsdam",
      "Key": "fabioniephaus",
      "Name": "Fabio Niephaus",
      "URL": "https://fniephaus.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/fabioniephaus/44d2c4cc-3f4f-42d2-8496-ca7e59905dd3/small.jpg"
    },
    {
      "Affiliation": "Hosei University",
      "Key": "soichirohidaka",
      "Name": "Soichiro Hidaka",
      "URL": "https://researchmap.jp/?page_id=1169&lang=english"
    },
    {
      "Affiliation": "Lund University",
      "Key": "jesperoqvist",
      "Name": "Jesper Oqvist",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jesperoqvist/3498ca32-3b84-4262-82f4-610b3a9fe6c4/small.jpg"
    },
    {
      "Affiliation": "Ex Situ | Université Paris-Sud",
      "Key": "philiptchernavskij",
      "Name": "Philip Tchernavskij",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/philiptchernavskij/7dfaf129-611d-490a-a103-5428532c69b0/small.jpg"
    },
    {
      "Affiliation": "Université de Yaoundé",
      "Key": "paulinmelatagia",
      "Name": "Paulin Melatagia"
    },
    {
      "Affiliation": "HPI",
      "Bio": "Robert Hirschfeld is a Professor of Computer Science at the Hasso Plattner Institute at the University of Potsdam, Germany. There he founded and leads the Software Architecture Group which is concerned with fundamental elements and structures of software. Methods and tools are developed for improving the comprehension and design of complex and interesting systems. \nRobert is interested in programming experiences and small system kernels. With his group he is working on dynamic programming languages, development tools, and runtime environments to make interactive programming more approachable. His preferred environment for exploring ideas is Squeak/Smalltalk. \nHe served as a visiting professor at the Tokyo Institute of Technology (東京工業大学) and The University of Tokyo (東京大学), Japan. \nRobert was a senior researcher with DoCoMo Euro-Labs, the European research facility of NTT DoCoMo Japan, where he worked on infrastructure components for next generation mobile communication systems with a focus on dynamic service adaptation and context-oriented programming. \nPrior to joining DoCoMo Euro-Labs, he was a principal engineer at Windward Solutions in Sunnyvale, California, where he designed and implemented distributed object systems, consulted in the area of object database technologies, and developed innovative software products and applications. \nRobert received a Ph.D. in Computer Science from the Ilmenau University of Technology, Germany.",
      "Key": "roberthirschfeld",
      "Name": "Robert Hirschfeld",
      "URL": "http://www.hirschfeld.org/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/roberthirschfeld/994ef4df-a890-4f16-bc1b-73b117dab33c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mariopreishuber",
      "Name": "Mario Preishuber"
    },
    {
      "Affiliation": "Telecom SudParis",
      "Key": "gaelthomas",
      "Name": "Gaël Thomas",
      "URL": "http://www-public.tem-tsp.eu/~thomas_g/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/gaelthomas/878e4c83-acab-43f5-a835-d7d134570b24/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "christianhaubl",
      "Name": "Christian Häubl"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "ralflammel",
      "Name": "Ralf Lämmel",
      "URL": "http://softlang.wikidot.com/rlaemmel:home",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/ralflammel/bc00aec2-e243-40e0-be65-bf9e5e21b0be/small.jpg"
    },
    {
      "Affiliation": "INRIA",
      "Key": "minhngo",
      "Name": "Minh Ngo",
      "URL": "http://disi.unitn.it/~ngo/"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "saraseidl",
      "Name": "Sara Seidl"
    },
    {
      "Affiliation": "Uber Technologies",
      "Bio": "Adam Welc currently works at Uber Technologies. Previously, he worked at Huawei, focusing on optimizing Java for execution in the cloud. Adam has also worked as a researcher at Intel, Adobe, and Oracle, developing new language implementations as well as novel approaches for concurrent programming. His research interests are in the area of programming languages implementation, design, and tooling, with specific interests in runtime systems, interpreters and compilers, as well as performance analysis and optimization. Adam holds a PhD in Computer Science from Purdue University.",
      "Key": "adamwelc",
      "Name": "Adam Welc",
      "URL": "http://www.adamwelc.org/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/adamwelc/9329d493-932e-4ca3-bf80-a4ea5f806d9b/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "Sébastien Doeraene is a compiler/runtime systems hacker and a Scala enthusiast. He is a PhD student at EPFL in the programming methods laboratory (LAMP) led by Martin Odersky, also known as the Scala team, where he designs and develops Scala.js. He holds bachelor and master degrees in computer science engineering from Université Catholique de Louvain in Belgium. When he is not busy coding, he sings in choirs and a cappella groups, or he plays unicycle basketball.",
      "Key": "sebastiendoeraene",
      "Name": "Sébastien Doeraene",
      "URL": "http://lampwww.epfl.ch/~doeraene/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sebastiendoeraene/a6fd635a-6c1a-4896-a79f-234ccfaa2d7e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "pascalweisenburger",
      "Name": "Pascal Weisenburger",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/pascalweisenburger/bf663f00-24ac-4d12-919b-ef1e2ff8e128/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "perditastevens",
      "Name": "Perdita Stevens",
      "URL": "http://homepages.inf.ed.ac.uk/perdita/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/perditastevens/50c8c645-8b8e-4ae6-9cd3-a63aef3c90a4/small.jpg"
    },
    {
      "Affiliation": "Open University of the Netherlands, The Netherlands",
      "Key": "bernardvangastel",
      "Name": "Bernard van Gastel"
    },
    {
      "Affiliation": "",
      "Key": "stephaneletz",
      "Name": "Stéphane Letz"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "michaelpradel",
      "Name": "Michael Pradel",
      "URL": "http://mp.binaervarianz.de/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/michaelpradel/06ef7ed7-0982-404f-8261-5188acacd15f/small.jpg"
    },
    {
      "Affiliation": "Avans University of Applied Sciences",
      "Key": "pascalvangastel",
      "Name": "Pascal van Gastel"
    },
    {
      "Affiliation": "Colorado State University, USA",
      "Bio": "I am an Associate Professor of Computer Science at Colorado State University. I received the Ph.D. degree in Computer Science from Purdue University, in 2000. My teaching and research interests include modeling, designing, and testing of object-oriented software, middleware technologies, and aspect-oriented and component-based software development. I am on the editorial boards of the Software Quality Journal, Journal of Software Testing, Verification and Reliability, and Information and Software Technology. I was a general co-chair of the ACM/IEEE 12th International Conference on Model Driven Engineering Languages and Systems held in Denver in 2009, and the 14th Conference on Modularity held in Fort Collins in 2015. I was a program co-chair of the Third International Conference on Software Testing, Verification and Validation held in Paris in 2010. I am a member of the ACM and a Senior Member of the IEEE.",
      "Key": "sudiptoghosh",
      "Name": "Sudipto Ghosh",
      "URL": "http://www.cs.colostate.edu/~ghosh/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sudiptoghosh/e5ddde4d-2fb4-4226-8d71-7bb3d7ba7765/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "anasokolova",
      "Name": "Ana Sokolova"
    },
    {
      "Affiliation": "IMT Atlantique, Nantes, France",
      "Key": "mariosudholt",
      "Name": "Mario Südholt",
      "URL": "http://www.emn.fr/z-info/sudholt/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mariosudholt/ab38df5d-4b80-4d55-87f8-89395820efd2/small.jpg"
    },
    {
      "Affiliation": "Igalia, S.L.",
      "Key": "andywingo",
      "Name": "Andy Wingo"
    },
    {
      "Affiliation": "Oita University",
      "Key": "tetsuokamina",
      "Name": "Tetsuo Kamina",
      "URL": "http://www.fse.cs.ritsumei.ac.jp/~kamina/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tetsuokamina/6f2756c4-2d16-4c9c-baf5-d893d114a071/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "michalispapadimitriou",
      "Name": "Michalis Papadimitriou"
    },
    {
      "Affiliation": "Inria",
      "Key": "tamararezk",
      "Name": "Tamara Rezk",
      "URL": "http://www-sop.inria.fr/members/Tamara.Rezk/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tamararezk/f4a74fa7-5685-4b01-86e4-b580aa1f0f53/small.jpg"
    },
    {
      "Affiliation": "DIBRIS, University of Genova, Italy",
      "Key": "filipporicca",
      "Name": "Filippo Ricca"
    },
    {
      "Affiliation": "University of Turin, Italy",
      "Key": "lucapadovani",
      "Name": "Luca Padovani",
      "URL": "http://www.di.unito.it/~padovani/"
    },
    {
      "Affiliation": "",
      "Key": "robertrosebrugh",
      "Name": "Robert Rosebrugh"
    },
    {
      "Affiliation": "University of Michigan",
      "Key": "stephenoney",
      "Name": "Stephen Oney",
      "URL": "http://from.so",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/stephenoney/50337dd4-e50f-4ae1-bd53-e240734c4619/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "joonyoungpark",
      "Name": "Joonyoung Park"
    },
    {
      "Affiliation": "Fernuniversität",
      "Key": "friedrichsteimann",
      "Name": "Friedrich Steimann",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/friedrichsteimann/0382f30a-7342-49a1-b2f6-cf7d0929220c/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs, Switzerland",
      "Key": "christianhumer",
      "Name": "Christian Humer",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/christianhumer/74984e5f-8039-4b31-9f4f-12d2d940d486/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "jackschaedler",
      "Name": "Jack Schaedler",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jackschaedler/6d4dbdd3-acd0-49d9-ae75-436820113e3b/small.jpg"
    },
    {
      "Affiliation": "North Carolina State University",
      "Key": "emersonmurphyhill",
      "Name": "Emerson Murphy-Hill",
      "URL": "http://people.engr.ncsu.edu/ermurph3/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/emersonmurphyhill/f6ca60d6-c205-45d4-a648-93e795475428/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "andynisbet",
      "Name": "Andy Nisbet",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/andynisbet/48faa61f-2903-4832-81f5-bfd70eb8ff73/small.jpg"
    },
    {
      "Affiliation": "Pennsylvania State University",
      "Key": "danfengzhang",
      "Name": "Danfeng Zhang",
      "URL": "http://www.cse.psu.edu/~dbz5017/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/danfengzhang/6eb87743-0994-4ff3-be1e-dbfb34429946/small.jpg"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "timhartley",
      "Name": "Tim Hartley"
    },
    {
      "Affiliation": "",
      "Key": "michaelgreefs",
      "Name": "Michael Greefs"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "gabrielkonat",
      "Name": "Gabriël Konat",
      "URL": "https://www.linkedin.com/in/gabrielkonat",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/gabrielkonat/cd028411-ffa4-49b0-ae34-3545bdde1caf/small.jpg"
    },
    {
      "Affiliation": "Universidad de los Andes",
      "Bio": "I have been working on adaptive systems for the last couple of years. Currently I am approaching adaptive systems from programming language perspective, working on development (programming language design), verification (partial, and incremental techniques), and application (smart environments, CPS, and IoT) of these systems.",
      "Key": "nicolascardozo",
      "Name": "Nicolás Cardozo",
      "URL": "https://profesores.virtual.uniandes.edu.co/ncardozo/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/nicolascardozo/4bf0b997-c8f9-4d9f-ba4b-7379d19ab2a3/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "hermannkaindl",
      "Name": "Hermann Kaindl"
    },
    {
      "Affiliation": "University of Strathclyde",
      "Key": "robertatkey",
      "Name": "Robert Atkey",
      "URL": "http://bentnib.org/"
    },
    {
      "Affiliation": "The University of Manchester",
      "Key": "mariaxekalaki",
      "Name": "Maria Xekalaki",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mariaxekalaki/1cb6db00-1452-4420-8706-3d1519b4502d/small.jpg"
    },
    {
      "Affiliation": "Friedrich-Alexander-Universität Erlangen-Nürnberg",
      "Key": "tobiasdistler",
      "Name": "Tobias Distler",
      "URL": "http://www4.cs.fau.de/~distler/"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign, USA",
      "Key": "sasamisailovic",
      "Name": "Sasa Misailovic",
      "URL": "http://misailo.web.engr.illinois.edu/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sasamisailovic/6e3299c7-e0f5-4e78-a5f3-7ea49e488545/small.jpg"
    },
    {
      "Affiliation": "University of Bergen, Norway",
      "Key": "knutandersstokke",
      "Name": "Knut Anders Stokke"
    },
    {
      "Affiliation": "University of Montreal",
      "Bio": "Eugene is an associate professor in computer science at the University of Montreal. He is one of the leaders of the GEODES Software Engineering Research Group. He was formerly an assistant professor at the University of Alabama until 2014. He received a Ph.D. in Computer Science in 2011 and a B.Sc. in Mathematics and Computer Science in 2006 at McGill University. Affiliated to McGill, he also pursued postdoctoral research on model-driven engineering for automotive systems. \nHis main research interests are in model-based design in general. His major contributions are in the design and verification of model transformation and collaborative modeling. He is the co-leading the research and development team of the modeling tool AToMPM which implements most of the results. He is also the principal investigator of R&amp;D projects on legacy software modernization, and collaborative modeling across different domains of expertise. His other research interests are in simulation-based design, code generation and deployment of large applications. \nHe serves on the program committee and organizes several international events. He is also a reviewer for major journals in software engineering, modeling, and simulation.",
      "Key": "eugenesyriani",
      "Name": "Eugene Syriani",
      "URL": "http://www.iro.umontreal.ca/~syriani",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/eugenesyriani/9ab60fb5-0bb0-4e75-8978-f14d7c10fc0e/small.jpg"
    },
    {
      "Affiliation": "Université Côte d\u2019Azur, CNRS, INRIA",
      "Key": "jeromelebrun",
      "Name": "Jérôme Lebrun"
    },
    {
      "Affiliation": "TU Wien",
      "Key": "manuelwimmer",
      "Name": "Manuel Wimmer",
      "URL": "https://www.big.tuwien.ac.at/staff/mwimmer",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/manuelwimmer/debab079-8b78-46af-8f24-2ce08001b86f/small.jpg"
    },
    {
      "Affiliation": "University of Namur",
      "Key": "anthonycleve",
      "Name": "Anthony Cleve"
    },
    {
      "Affiliation": "Ludwig Maximilians University Munich, Germany",
      "Key": "rolfhennicker",
      "Name": "Rolf Hennicker",
      "URL": "https://www.pst.ifi.lmu.de/Personen/team/hennicker"
    },
    {
      "Affiliation": "Universitat Politècnica de Catalunya, Spain",
      "Key": "fernandoorejas",
      "Name": "Fernando Orejas",
      "URL": "https://www.cs.upc.edu/~orejas/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/fernandoorejas/4f33bc25-77b8-438b-b13c-f92f8c92162a/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Bio": "Kathryn S. McKinley is a Research Scientist at Google and an Adjunct Professor at the University of Texas at Austin. She was previously a Principal Researcher at Microsoft, held an Endowed Professorship at The University of Texas, and was a Professor at the University of Massachusetts, Amherst. She is interested in making programming easy and the resulting programs correct and efficient. Her research interests span programming languages, compilers, runtime systems, operating systems, and architecture. She and her collaborators have produced several widely used tools: the DaCapo Java Benchmarks (30,000+ downloads), the TRIPS Compiler, the Hoard memory manager, the MMTk memory management toolkit, and the Immix garbage collector. Her awards include the ACM SIGPLAN Programming Languages Software Award and the ACM SIGPLAN Distinguished Service Award. Her research has received test-of-time awards from OOPSLA (2), ICS, and SIGMETRICS, and best paper awards from ASPLOS, IEEE Micro Top Picks (4), SIGPLAN Research Highlights, and CACM Research Highlights (2). She served as program chair for ASPLOS, PACT, PLDI, ISMM, and CGO. She currently serves on the CRA Board, the CRA-W Board, and SIGPLAN EC. She previously served as co-chair of CRA-W, a member of DARPA ISAT, and on two National Academies studies. Dr. McKinley was honored to testify to the House Science Committee (Feb. 14, 2013). She is an IEEE Fellow and ACM Fellow, has graduated 22 PhD students, and is the mother of three sons.",
      "Key": "kathrynsmckinley",
      "Name": "Kathryn S McKinley",
      "URL": "https://www.cs.utexas.edu/users/mckinley/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/kathrynsmckinley/26a6ae47-1d5b-4adb-9444-aeff3e99b5fa/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Key": "steffenzschaler",
      "Name": "Steffen Zschaler",
      "URL": "http://www.steffen-zschaler.de/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/steffenzschaler/aeac85bf-ae27-4394-b79a-4569c1138728/small.jpg"
    },
    {
      "Affiliation": "Cognitec",
      "Key": "davidnolen",
      "Name": "David Nolen"
    },
    {
      "Affiliation": "University of Namur",
      "Key": "pierreyvesschobbens",
      "Name": "Pierre Yves Schobbens",
      "URL": "https://directory.unamur.be/staff/pyschobb",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/pierreyvesschobbens/4a235e72-0667-4c3d-9337-b08d9ab4e21a/small.jpg"
    },
    {
      "Affiliation": "Université Côte d'Azur, France",
      "Key": "sebastienmosser",
      "Name": "Sébastien Mosser",
      "URL": "http://www.i3s.unice.fr/~mosser",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/sebastienmosser/4819928e-7f17-4d30-b12a-75b5faa84de9/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "thomaswuerthinger",
      "Name": "Thomas Wuerthinger",
      "URL": "http://www.wuerthinger.net",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/thomaswuerthinger/06cfaa3c-57eb-4275-9324-aecd6e9b7f6e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "haraldkonig",
      "Name": "Harald König"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "marianamarasoiu",
      "Name": "Mariana Marasoiu"
    },
    {
      "Affiliation": "Slovak University of Technology in Bratislava",
      "Key": "valentinovranic",
      "Name": "Valentino Vranić",
      "URL": "http://fiit.stuba.sk/~vranic/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/valentinovranic/f4da6218-d1b1-4843-bc05-246876c3db34/small.jpg"
    },
    {
      "Affiliation": "University of Bergen, Norway",
      "Key": "hakonheggerneslerring",
      "Name": "Håkon Heggernes Lerring"
    },
    {
      "Affiliation": "Aalto University",
      "Key": "jarikleimola",
      "Name": "Jari Kleimola",
      "URL": "http://webaudiomodules.org/"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "uweamann",
      "Name": "Uwe Aßmann",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/uweamann/2b7ac8f7-db1b-4039-b5c8-2d54f07ca2c8/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "simonbauer",
      "Name": "Simon Bauer"
    },
    {
      "Affiliation": "Université de Montréal",
      "Key": "maximechevalierboisvert",
      "Name": "Maxime Chevalier-Boisvert",
      "URL": "https://pointersgonewild.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/maximechevalierboisvert/8db10a92-e54a-484e-80b2-07662f398a11/small.jpg"
    },
    {
      "Affiliation": "University of Genova",
      "Bio": "Davide Ancona (PhD in Computer Science, University of Pisa, 1998) is Associate Professor at the University of Genova. His main research interests include type systems, object-oriented programming, coinduction methods for programming languages, modules and components, software reuse and maintenance, multi-agent systems, and behavioral types. He is author of more than 70 publications. He is the secretary of the executive board of AITO, Association Internationale pour les Technologies Objets (since Jan 2013, previously Vice-President since Jan 2012), and member of the editorial board of the ACM/SIGAPP Applied Computing Review (ACR), Scientific Programming (Hindawi), and Open Computer Science. He has been guest editor of special issues of Science of Computer Programming and Journal of Object Technology. In 2009 he received, together with G. Lagorio, the best paper prize at ECOOP. He has participated to several national and European projects and has been PC member of several workshops and conferences: WOOD\u201904, Bytecode 2008, ESOP 2008, DLS 2009, 2010 and 2013, FOOL 2010, RP 2011 and 2012, ECOOP 2013 and 2014, POPL 2015 (ERC), OOPSLA 2016 (ERC), TASE 2016, FTfJP 2016. He has been involved in the organization of several scientific events: organizing chair of ECOOP 2009, program co-chair of FTfJP06 and of OOPS special track at SAC from 2004 through 2017, co-chair of CILC 2015 and VORTEX 2016.",
      "Key": "davideancona",
      "Name": "Davide Ancona",
      "URL": "http://www.disi.unige.it/person/AnconaD/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/davideancona/50b3fc2f-1782-4ca1-91a5-6718f42ba51b/small.jpg"
    },
    {
      "Affiliation": "McMaster University",
      "Key": "zinovydiskin1",
      "Name": "Zinovy Diskin"
    },
    {
      "Affiliation": "",
      "Key": "michaelamarsalkova",
      "Name": "Michaela Maršálková"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "kcsivaramakrishnan",
      "Name": "KC Sivaramakrishnan",
      "URL": "http://kcsrk.info/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/kcsivaramakrishnan/12bdba50-c8fa-44e2-9351-ab15dad55baf/small.jpg"
    },
    {
      "Affiliation": "University of Salzburg",
      "Key": "philippmayer",
      "Name": "Philipp Mayer"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "joeridekoster",
      "Name": "Joeri De Koster",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/joeridekoster/2f5765d5-6ed1-4a75-acf1-99a86a994912/small.jpg"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "manuelserrano",
      "Name": "Manuel Serrano",
      "URL": "http://www-sop.inria.fr/members/Manuel.Serrano/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/manuelserrano/084e3f7c-e031-4d91-ba23-b96148549086/small.jpg"
    },
    {
      "Affiliation": "University of Victoria",
      "Key": "jensweber",
      "Name": "Jens Weber",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/jensweber/ea35d96f-8bb0-47c8-b81f-837e602cbfc2/small.jpg"
    },
    {
      "Affiliation": "Siemens AG, Germany",
      "Key": "martinwitte",
      "Name": "Martin Witte"
    },
    {
      "Affiliation": "",
      "Key": "guillaumebouisseau",
      "Name": "Guillaume Bouisseau"
    },
    {
      "Affiliation": "",
      "Key": "matthiaseichholz",
      "Name": "Matthias Eichholz",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/matthiaseichholz/c5bb8ebf-f89b-4630-a7d2-7b2f894e4936/small.jpg"
    },
    {
      "Affiliation": "Dream Songs, Inc. & HPI",
      "Bio": "I used to be Dick Gabriel. Those days are long gone. Now I\u2019m just Dick Gabriel.",
      "Key": "richardpgabriel",
      "Name": "Richard P. Gabriel",
      "URL": "https://dreamsongs.com",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/richardpgabriel/24ea1eb5-102f-4174-89f2-1338f4a4d6ce/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mireilleblayfornarino",
      "Name": "Mireille Blay-Fornarino"
    },
    {
      "Affiliation": "University of Colorado, Boulder",
      "Bio": "I\u2019m interested in designing PL-based abstractions for settings in which humans and computers cooperate to create and process information. In particular, I\u2019ve co-created abstractions for Incremental Computing (See Adapton for details) and for Secure Multiparty Computation (See Wysteria for details). \nI am an assistant professor in the Department of Computer Science at University of Colorado Boulder. I am a co-director of the CU Programming Languages and Verification group (CUPLV). Before joining CU, I was a postdoc researcher working with Michael Hicks, Jeff Foster, David Van Horn and the PLUM group at the University of Maryland. As a PhD student, I was advised by Umut Acar.",
      "Key": "matthewahammer",
      "Name": "Matthew Hammer",
      "URL": "http://matthewhammer.org",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/matthewahammer/0f8bb7ab-bcde-4522-beb0-8fb15d612e1b/small.jpg"
    },
    {
      "Affiliation": "Pomona College",
      "Key": "michaelgreenberg",
      "Name": "Michael Greenberg",
      "URL": "http://www.cs.pomona.edu/~michael/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/michaelgreenberg/3c177ea6-ac3c-4ddb-9f4e-ac5d7b568e07/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "patrickstunkel",
      "Name": "Patrick Stünkel"
    },
    {
      "Affiliation": "University of Bristol",
      "Key": "mengwang",
      "Name": "Meng Wang",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mengwang/2aba9176-828a-4227-9392-75f364770330/small.jpg"
    },
    {
      "Affiliation": "Université de Nice Sophia-Antipolis, France",
      "Key": "yvesroudier",
      "Name": "Yves Roudier"
    },
    {
      "Affiliation": "University of L'Aquila",
      "Key": "rominaeramo",
      "Name": "Romina Eramo",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/rominaeramo/706a84c6-9770-460b-8581-f2ea97ab221d/small.jpg"
    },
    {
      "Affiliation": "Centrum Wiskunde & Informatica / University of Groningen",
      "Key": "tijsvanderstorm",
      "Name": "Tijs van der Storm",
      "URL": "http://www.cwi.nl/~storm/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/tijsvanderstorm/1c2fdfb2-3ce0-4e75-91af-35d9a48f56c5/small.jpg"
    },
    {
      "Affiliation": " INRIA Lille",
      "Key": "stephaneducasse",
      "Name": "Stéphane Ducasse",
      "URL": "http://stephane.ducasse.free.fr/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/stephaneducasse/509504d8-baa1-42b4-a71a-b441f9ae92bb/small.jpg"
    },
    {
      "Affiliation": "HARC / Y Combinator Research",
      "Bio": "Yoshiki Ohshima has research interests in interactive and educational computer systems, software architectures and programming languages. Yoshiki graduated from the Tokyo Institute of Technology in 1994. He was awarded his PhD for the creation of \u201cKedama\u201d, a massively parallel particle programming system, from the Tokyo Institute of Technology in 2006. Yoshiki worked on theme park related research project at Walt Disney Imagineering R&amp;D from 2000 through 2002. In 2002, he joined Twin Sun, Inc. From 2007 he worked at the Viewpoints Research Institute. At VPRI, Yoshiki worked on projects include bringing the etoys environment to children via the \u201cXO\u201d and the One Laptop Per Child (olpc) initiative, multilingualization of software environments, and the STEPS project.",
      "Key": "yoshikiohshima1",
      "Name": "Yoshiki Ohshima",
      "URL": "http://harc.ycr.org/member/yoshiki_ohshima/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/yoshikiohshima1/924354bb-3690-4fde-b09c-8db646d6bf36/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "simonbates",
      "Name": "Simon Bates"
    },
    {
      "Affiliation": "",
      "Key": "lukechurch",
      "Name": "Luke Church",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/lukechurch/3ab26f57-3738-4a38-a8be-8f6d1b69cd8f/small.jpg"
    },
    {
      "Affiliation": "EPITA / LRDE",
      "Bio": "Dr. Didier Verna has a Ph.D. in Computer Science and is currently working as an assistant professor for EPITA, a private Computer Science university located in Paris. He gives lectures on Operating Systems, Computer Graphics, Functional Programming and Typesetting. His main research topic is on the use of Lisp, a multi-paradigm dynamic language, to reconcile genericity and performance. \nDidier Verna is also quite involved in free software: he has been one of the core maintainers of XEmacs for more than 15 years. He is also a committer to Gnus and BBDB, the author of several LaTeX packages and an occasional contributor to other Free Software projects (the GNU Autotools most notably; he was one of the technical reviewers for the \u201cGoat Book\u201d). \nDidier Verna is a member of the European Lisp Symposium steering committee and serves as a program committee member in various conferences (International Lisp Conference, European Lisp Symposium, Dynamic Languages Symposium, Context-Oriented Programming workshop, ACM Symposium on Applied Computing). \nAll of this is in fact half-true: two days a week, Didier Verna drops his scientific hat and wears the Jazz musician one instead. But that is another story\u2026",
      "Key": "didierverna",
      "Name": "Didier Verna",
      "URL": "https://www.lrde.epita.fr/~didier",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/didierverna/854d6aef-85b1-4d6e-a0e3-fa0dc86e3927/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "mariowolczko",
      "Name": "Mario Wolczko",
      "URL": "http://labs.oracle.com/people/mario",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/mariowolczko/cbf01e95-3325-467b-b760-d8928c4c5e6b/small.jpg"
    },
    {
      "Affiliation": "Raincode Labs, Belgium",
      "Key": "vadimzaytsev",
      "Name": "Vadim Zaytsev",
      "URL": "http://grammarware.net",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/vadimzaytsev/fe6c221f-75d5-4fbc-ac41-be9c99349b5d/small.jpg"
    },
    {
      "Affiliation": "University of Victoria",
      "Key": "yvonnecoady",
      "Name": "Yvonne Coady",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/yvonnecoady/7b532c8e-0c31-445d-b943-ad956a6f5722/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "tomoyukiaotani",
      "Name": "Tomoyuki Aotani",
      "URL": "https://taotani.wordpress.com/"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "stefanmarr",
      "Name": "Stefan Marr",
      "URL": "http://stefan-marr.de/research/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/stefanmarr/0917eab8-ec51-465f-9ff6-1295826fd91e/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "theodhondt",
      "Name": "Theo D'Hondt",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/theodhondt/84e0b452-5f01-4958-bbac-539e8971b2bd/small.jpg"
    },
    {
      "Affiliation": "National Institute of Informatics, Japan",
      "Key": "hsiangshangko",
      "Name": "Hsiang-Shang \u2018Josh\u2019 Ko",
      "URL": "https://josh-hs-ko.github.io",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/hsiangshangko/9c5db602-95a9-413b-a2d8-a4121be09c2c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "francoisfouquet",
      "Name": "François Fouquet"
    },
    {
      "Affiliation": "",
      "Key": "cristalopes",
      "Name": "Crista Lopes",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/cristalopes/b07b54a6-cf73-4ec7-bfc4-524a843eddc3/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "saradecova",
      "Name": "Sara Décova"
    },
    {
      "Affiliation": "University of York",
      "Key": "richardpaige",
      "Name": "Richard Paige",
      "URL": "http://www-users.cs.york.ac.uk/~paige/",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/richardpaige/52648cd1-e3d0-4cc4-bb2c-b937e920ebd4/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "krzysztofczarnecki",
      "Name": "Krzysztof Czarnecki",
      "URL": "http://swen.uwaterloo.ca/~kczarnec",
      "URLphoto": "https://2018.programming-conference.org/getProfileImage/krzysztofczarnecki/ff2f1728-37d8-4088-bc15-1c552672fb4e/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "tonimattis",
      "Name": "Toni Mattis"
    }
  ],
  "Sessions": [
    {
      "Abstract": "",
      "Day": "2018-04-11",
      "Items": ["programming-2018-social-events-banquet"],
      "Key": "cd47163b-994f-423b-adda-67d1a8f88c13",
      "Location": "Plage Beau Rivage | Restaurant",
      "Time": "19:30 - 23:00",
      "Title": "Social Events: Social Event",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We are delighted to announce the following keynote speakers: \nShriram Krishnamurthi, Brown University, USA 류석영 Sukyoung Ryu, KAIST, Korea",
      "Day": "2018-04-11",
      "Items": ["programming-2018-keynotes-the-recurring-rainfall-problem"],
      "Key": "d94f89f0-a500-4370-b83d-b6dd30b4e19b",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "09:00 - 10:00",
      "Title": "Keynotes: Wednesday Keynote",
      "Type": "Keynote Talks"
    },
    {
      "Abstract": " Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2018-04-10",
      "Items": [
        "proweb-2018-papers-a-framework-for-dynamic-inter-device-task-dispatch-with-eventual-consistency",
        "proweb-2018-papers-scalagna-0-1-towards-multi-tier-programming-with-scala-and-scala-js",
        "proweb-2018-papers-session-types-for-tierless-web-applications",
        "proweb-2018-papers-group-discussion-on-common-workshop-goals"
      ],
      "Key": "5cdbbf13-203e-4cd0-a91e-635b100a86e6",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "11:00 - 12:30",
      "Title": "ProWeb 2018 - : Session 2",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "We are delighted to announce the following keynote speakers: \nShriram Krishnamurthi, Brown University, USA 류석영 Sukyoung Ryu, KAIST, Korea",
      "Day": "2018-04-12",
      "Items": ["programming-2018-keynotes-static-analysis-of-android-applications-for-finding-bugs-and-security-vulnerabilities"],
      "Key": "d22e0e8b-3bd3-4eb5-9aa7-2ae6e5c3aa56",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "09:00 - 10:00",
      "Title": "Keynotes: Thursday Keynote",
      "Type": "Keynote Talks"
    },
    {
      "Abstract": "Today\u2019s IT systems are often distributed and heterogeneous. Therefore, many (functional and non-functional) system requirements must be implemented across different layers of the system stack. This workshop is interested in experiences from implementing such systems and methods or tools for their development and support.",
      "Day": "2018-04-10",
      "Items": [
        "pass-2018-papers-towards-safe-modular-composition-of-network-functions",
        "pass-2018-papers-applying-aspect-oriented-change-realization-in-the-mobile-application-domain",
        "pass-2018-papers-detecting-energy-bugs-and-hotspots-in-control-software-using-model-checking",
        "pass-2018-papers-discussion-closing"
      ],
      "Key": "a4a4ebaf-1bbd-4fd7-824c-a8b09cab30f4",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "16:30 - 18:00",
      "Title": "PASS 2018 - : PASS 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Today\u2019s IT systems are often distributed and heterogeneous. Therefore, many (functional and non-functional) system requirements must be implemented across different layers of the system stack. This workshop is interested in experiences from implementing such systems and methods or tools for their development and support.",
      "Day": "2018-04-10",
      "Items": [
        "pass-2018-papers-welcome",
        "pass-2018-papers-invited-talk-ludovic-henrio",
        "pass-2018-papers-managing-hybrid-memories-by-predicting-object-write-intensity"
      ],
      "Key": "f68de10d-61e4-41e8-b3d4-4d13b23ec92f",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "14:30 - 16:00",
      "Title": "PASS 2018 - : PASS 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": " Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas \u201cresponsive\u201d web applications already offered a more desktop-like experience, there is an increasing demand for \u201crich\u201d web applications (RIAs) that offer collaborative and even off-line functionality \u2014Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today\u2019s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as \u201cclient vs. server\u201d and \u201coffline vs. online\u201d are fading.",
      "Day": "2018-04-10",
      "Items": [
        "proweb-2018-papers-hop-js-javascript-multitier-programming",
        "proweb-2018-papers-handlers-js",
        "proweb-2018-papers-group-discussion-1"
      ],
      "Key": "e64c1467-b65a-430e-806b-7664fcb4081f",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "09:00 - 10:30",
      "Title": "ProWeb 2018 - : Session 1",
      "Type": "Accepted Presentations"
    },
    {
      "Abstract": "The MoreVMs workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies.",
      "Day": "2018-04-09",
      "Items": [
        "morevms-2018-day-opening",
        "morevms-2018-towards-practical-heterogeneous-virtual-machines",
        "morevms-2018-easy-jit-compiler-assisted-library-to-enable-just-in-time-compilation-in-c-codes",
        "morevms-2018-on-the-future-of-research-vms-a-hardware-software-perspective"
      ],
      "Key": "2e07040e-26f3-4af6-a658-c58855ca6a9a",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "08:50 - 10:30",
      "Title": "MoreVMs 2018 - :  MoreVMs 1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at &lt;Programming&gt; before a panel of judges and conference attendees. The competition gives students an opportunity to discuss their research with experts in their field, to get feedback, and to help sharpen their communication and networking skills. Finally, the SRC not only provides visibility to up-and-coming young researchers, but also exposes them to the field of computer science research and its community.",
      "Day": "2018-04-11",
      "Items": ["programming-2018-src-src-second-round-oral-presentation"],
      "Key": "edeab05f-b24f-4331-b066-1d7e45461018",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "12:00 - 13:45",
      "Title": "Student Research Competition: SRC Oral Presentation",
      "Type": "Accepted Students"
    },
    {
      "Abstract": "The ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at &lt;Programming&gt; before a panel of judges and conference attendees. The competition gives students an opportunity to discuss their research with experts in their field, to get feedback, and to help sharpen their communication and networking skills. Finally, the SRC not only provides visibility to up-and-coming young researchers, but also exposes them to the field of computer science research and its community.",
      "Chairs": ["philipphaller"],
      "ChairsString": "Philipp Haller",
      "Day": "2018-04-10",
      "Items": [
        "programming-2018-src-a-soup-of-objects-convenience-interfaces-for-accessing-domain-objects-in-a-global-object-graph",
        "programming-2018-src-dsl-for-end-user-service-composition",
        "programming-2018-src-debugging-support-for-big-data-processing-applications",
        "programming-2018-src-fine-grained-dynamic-access-control-for-database-backed-applications",
        "programming-2018-src-fully-homomorphic-encryption-scheme-for-secure-computation",
        "programming-2018-src-indigenizing-computer-programming-for-cultural-maintenance",
        "programming-2018-src-mining-concepts-from-code-using-community-detection",
        "programming-2018-src-on-the-semantics-of-loop-transformation-languages",
        "programming-2018-src-sandboxed-execution-of-c-and-other-unsafe-languages-on-the-java-virtual-machine",
        "programming-2018-src-soundness-and-completeness-for-object-garbage-collection-in-the-pony-language",
        "programming-2018-src-the-extensible-compiler-architecture-of-extendj",
        "programming-2018-src-towards-an-intelligent-fault-prediction-code-editor-to-improve-software-quality-using-deep-learning",
        "programming-2018-src-writing-safe-smart-contracts-in-flint"
      ],
      "Key": "74155732-5576-463d-bf77-44fbe471159f",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "12:30 - 14:30",
      "Title": "Student Research Competition: SRC Poster Presentation",
      "Type": "Accepted Students"
    },
    {
      "Abstract": "The ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at &lt;Programming&gt; before a panel of judges and conference attendees. The competition gives students an opportunity to discuss their research with experts in their field, to get feedback, and to help sharpen their communication and networking skills. Finally, the SRC not only provides visibility to up-and-coming young researchers, but also exposes them to the field of computer science research and its community.",
      "Day": "2018-04-12",
      "Items": ["programming-2018-src-src-second-round-oral-presentation"],
      "Key": "4c61fb0c-7fc6-4ae8-82dc-40d6f64771aa",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "12:00 - 13:45",
      "Title": "Student Research Competition: SRC Oral Presentation",
      "Type": "Accepted Students"
    },
    {
      "Abstract": "The MoreVMs workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies.",
      "Day": "2018-04-09",
      "Items": [
        "morevms-2018-sulong-and-thanks-for-all-the-fish",
        "morevms-2018-the-inevitable-death-of-vms-a-progress-report",
        "morevms-2018-discussion-why-do-we-need-research-vms-and-what-are-our-requirements-",
        "morevms-2018-day-closing"
      ],
      "Key": "14f939dd-b69b-4425-852d-c690316421ee",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "14:30 - 16:10",
      "Title": "MoreVMs 2018 - :  MoreVMs 3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The MoreVMs workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies.",
      "Day": "2018-04-09",
      "Items": [
        "morevms-2018-understanding-task-granularity-on-the-jvm-profiling-analysis-and-optimization",
        "morevms-2018-selfie-towards-minimal-symbolic-execution",
        "morevms-2018-self-hosted-scripting-in-guile"
      ],
      "Key": "96204d72-2688-406f-ab3c-5db9d159a9a6",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "11:00 - 12:30",
      "Title": "MoreVMs 2018 - :  MoreVMs 2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": " \n \n   \n   \n    \n   Welcome to the 4th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/18 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they design and code\u2014and sometimes they discover they need to explore the domain and the nature of potential solutions. \nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n liveness \n domain-specific languages \n psychology of programming \n user studies \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n error tolerance \n non-standard tools \n experience of programming \n exploratory programming \n \nThe experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming. \nPrevious editions \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at &lt;Programming&gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px18/media/PX18CfP.pdf \nhttp://programming-experience.org/px18/ \n \nWe welcome the organizers of LIVE-18 to our program committee to help us build a lively, programming experience community.",
      "Day": "2018-04-10",
      "Items": [
        "px-2018-papers-the-exploration-workspace-interleaving-the-implementation-and-usage-of-plain-objects",
        "px-2018-papers-an-api-and-visual-environment-to-use-neural-network-to-reason-about-source-code",
        "px-2018-papers-live-programming-of-internet-of-things-in-palcom"
      ],
      "Key": "f4427f6f-3104-4b2c-8d4c-4268e5e6ecc5",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "11:00 - 12:30",
      "Title": "PX/18 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Dialectics for new computer science \nSalon des Refusés (\u201cexhibition of rejects\u201d) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop aims to be the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nFormat and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission. We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: February 1, 2018 Extended to February 8, 2018 \n Notification of authors: February 17, 2018 Extended to February 24, 2018 \n Workshop at \u2039Programming\u203a 2017: April 9-12, 2018 \n Submission page is here \n \nThe program committee for the workshop will be announced soon, so please check back for more information! We will also soon share papers and critiques from the previous edition of the workshop, which should provide useful background (in no way exhaustive) for what format works well.",
      "Day": "2018-04-09",
      "Items": [
        "refuses-2018-papers-lector-in-codigo-or-the-role-of-the-reader",
        "refuses-2018-papers-critique-lector-in-codigo-or-the-role-of-the-reader",
        "refuses-2018-papers-discussion-evaluating-novel-programming-research-ideas"
      ],
      "Key": "b5513d16-49ee-49b1-998a-18bdec7a6556",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "11:00 - 12:30",
      "Title": "Salon des Refusés 2018 - : Salon des Refusés 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": " \n \n   \n   \n    \n   Welcome to the 4th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/18 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they design and code\u2014and sometimes they discover they need to explore the domain and the nature of potential solutions. \nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n liveness \n domain-specific languages \n psychology of programming \n user studies \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n error tolerance \n non-standard tools \n experience of programming \n exploratory programming \n \nThe experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming. \nPrevious editions \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at &lt;Programming&gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px18/media/PX18CfP.pdf \nhttp://programming-experience.org/px18/ \n \nWe welcome the organizers of LIVE-18 to our program committee to help us build a lively, programming experience community.",
      "Day": "2018-04-10",
      "Items": [
        "px-2018-papers-collectors",
        "px-2018-papers-word-expansion-supports-posix-shell-interactivity",
        "px-2018-papers-a-non-tabular-spreadsheet-with-broad-applicability"
      ],
      "Key": "76c131b7-4dda-413d-944d-d194692c16e1",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "16:30 - 18:00",
      "Title": "PX/18 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Dialectics for new computer science \nSalon des Refusés (\u201cexhibition of rejects\u201d) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop aims to be the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nFormat and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission. We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: February 1, 2018 Extended to February 8, 2018 \n Notification of authors: February 17, 2018 Extended to February 24, 2018 \n Workshop at \u2039Programming\u203a 2017: April 9-12, 2018 \n Submission page is here \n \nThe program committee for the workshop will be announced soon, so please check back for more information! We will also soon share papers and critiques from the previous edition of the workshop, which should provide useful background (in no way exhaustive) for what format works well.",
      "Day": "2018-04-09",
      "Items": [
        "refuses-2018-papers-externalizing-co-occurence-potentializing-and-reifying-interactions",
        "refuses-2018-papers-critique-externalizing-co-occurence-potentializing-and-reifying-interactions",
        "refuses-2018-papers-discussion-what-next-for-salon-des-refus-s"
      ],
      "Key": "a6e53453-699d-47f4-88c1-447bc3d7d527",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "14:30 - 16:00",
      "Title": "Salon des Refusés 2018 - : Salon des Refusés 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "CoCoDo is not a workshop, it is a coding dojo. Instead of preparing a paper and giving a short presentation, participants will enjoy the entire day of programming. The topic of CoCoDo is compiler construction: the oldest branch of computer science, which has been accumulating useful techniques since 1950s. Compiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more. \nIt is a one-day co-located event for &lt;P&gt;, which will be mostly about participants programming solutions to small puzzle-like compiler construction problems. We will invite high profile speakers to introduce participants to chosen topics, get them into the flow and keep them there by guiding their advances, and let everyone enjoy very complex techniques in a relatively painless and utterly enjoyable manner. \nCoCoDo was successfully ran at &lt;P&gt;\u201917 with top compiler experts like Elizabeth Scott, Adrian Johnstone, Robby Findler, Ralf Lämmel, Anya Helene Bagge and others. \nMore details at https://cocodo.github.io/",
      "Day": "2018-04-09",
      "Items": [
        "cocodo-2018-dojo-how-to-double-embed-the-general-purpose-language-of-your-embedded-dsl-for-expressivity-performance-and-profit",
        "cocodo-2018-dojo-the-game-of-programmer-vs-ide"
      ],
      "Key": "4dfe27d4-994b-4dcc-83d1-5e3ef1b94a67",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "16:30 - 18:00",
      "Title": "CoCoDo 2018 - : CoCoDo afternoon",
      "Type": "Dojo"
    },
    {
      "Abstract": "Bidirectional transformations (bx) are a mechanism for maintaining the consistency of at least two related sources of information. Such sources can be relational databases, software models and code, or any other document following standard or ad-hoc formats. Bx are an emerging topic in a wide range of research areas, with prominent presence at top conferences in several different fields (namely databases, programming languages, software engineering, and graph transformation), but with results in one field often getting limited exposure in the others. Bx 2018 is a dedicated venue for bx in all relevant fields, and is part of a workshop series that was created in order to promote cross-disciplinary research and awareness in the area. As such, since its beginning in 2012, the workshop has rotated between venues in different fields. \nImportant Dates \n \n Paper submission: Jan. 19th, 2018 (AoE) \n Author notification: Feb. 17th, 2018 \n Camera ready: TBA (around Mar 1st, 2018) \n Workshop: Apr. 10th, 2018 \n \nPlease refer to the CFP page for details. \nPrevious Bx Workshops \n \n Bx 2017 collocated with ETAPS\u201917 \n Bx 2016 collocated with ETAPS\u201916 \n Bx 2015 collocated with STAF\u201915 \n Bx 2014 collocated with IDBT/ICDT\u201914 \n Bx 2013 collocated with ETAPS\u201913 \n Bx 2012 collocated with ETAPS\u201912 \n",
      "Chairs": ["jeremygibbons"],
      "ChairsString": "Jeremy Gibbons",
      "Day": "2018-04-10",
      "Items": [
        "bx-2018-papers-cospans-and-symmetric-lenses",
        "bx-2018-papers-understanding-profunctor-optics-a-representation-theorem",
        "bx-2018-papers-bimorphic-lenses-in-compositional-game-theory"
      ],
      "Key": "9394fe89-8f4f-4b8a-b6fb-86a63c8cdea8",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "11:00 - 12:30",
      "Title": "Bx 2018 - : Mathematical Foundations",
      "Type": "Accepted Papers & Talks"
    },
    {
      "Abstract": "CoCoDo is not a workshop, it is a coding dojo. Instead of preparing a paper and giving a short presentation, participants will enjoy the entire day of programming. The topic of CoCoDo is compiler construction: the oldest branch of computer science, which has been accumulating useful techniques since 1950s. Compiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more. \nIt is a one-day co-located event for &lt;P&gt;, which will be mostly about participants programming solutions to small puzzle-like compiler construction problems. We will invite high profile speakers to introduce participants to chosen topics, get them into the flow and keep them there by guiding their advances, and let everyone enjoy very complex techniques in a relatively painless and utterly enjoyable manner. \nCoCoDo was successfully ran at &lt;P&gt;\u201917 with top compiler experts like Elizabeth Scott, Adrian Johnstone, Robby Findler, Ralf Lämmel, Anya Helene Bagge and others. \nMore details at https://cocodo.github.io/",
      "Day": "2018-04-09",
      "Items": [
        "cocodo-2018-dojo-cocodo-opening-and-introductions",
        "cocodo-2018-dojo-funcons"
      ],
      "Key": "695b64ca-c1b1-4998-b57c-a5adb362a826",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "08:45 - 10:30",
      "Title": "CoCoDo 2018 - : CoCoDo morning",
      "Type": "Dojo"
    },
    {
      "Abstract": "CoCoDo is not a workshop, it is a coding dojo. Instead of preparing a paper and giving a short presentation, participants will enjoy the entire day of programming. The topic of CoCoDo is compiler construction: the oldest branch of computer science, which has been accumulating useful techniques since 1950s. Compiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more. \nIt is a one-day co-located event for &lt;P&gt;, which will be mostly about participants programming solutions to small puzzle-like compiler construction problems. We will invite high profile speakers to introduce participants to chosen topics, get them into the flow and keep them there by guiding their advances, and let everyone enjoy very complex techniques in a relatively painless and utterly enjoyable manner. \nCoCoDo was successfully ran at &lt;P&gt;\u201917 with top compiler experts like Elizabeth Scott, Adrian Johnstone, Robby Findler, Ralf Lämmel, Anya Helene Bagge and others. \nMore details at https://cocodo.github.io/",
      "Day": "2018-04-09",
      "Items": ["cocodo-2018-dojo-jastadd"],
      "Key": "61fe67f2-3fac-4db4-b64c-1382eb1ebdf0",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "11:00 - 12:30",
      "Title": "CoCoDo 2018 - : CoCoDo pre-lunch",
      "Type": "Dojo"
    },
    {
      "Abstract": " \n \n   \n   \n    \n   Welcome to the 4th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/18 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they design and code\u2014and sometimes they discover they need to explore the domain and the nature of potential solutions. \nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n liveness \n domain-specific languages \n psychology of programming \n user studies \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n error tolerance \n non-standard tools \n experience of programming \n exploratory programming \n \nThe experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming. \nPrevious editions \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at &lt;Programming&gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px18/media/PX18CfP.pdf \nhttp://programming-experience.org/px18/ \n \nWe welcome the organizers of LIVE-18 to our program committee to help us build a lively, programming experience community.",
      "Day": "2018-04-10",
      "Items": [
        "px-2018-papers-do-java-programmers-write-be-er-python-studying-off-language-code-quality-on-github",
        "px-2018-papers-the-fun-of-being-wrong-or-the-game-of-programmer-vs-ide",
        "px-2018-papers-few-versatile-vs-many-specialized-collections"
      ],
      "Key": "ef846695-720b-4621-9ec4-32a8b3377b5c",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "14:30 - 16:00",
      "Title": "PX/18 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Bidirectional transformations (bx) are a mechanism for maintaining the consistency of at least two related sources of information. Such sources can be relational databases, software models and code, or any other document following standard or ad-hoc formats. Bx are an emerging topic in a wide range of research areas, with prominent presence at top conferences in several different fields (namely databases, programming languages, software engineering, and graph transformation), but with results in one field often getting limited exposure in the others. Bx 2018 is a dedicated venue for bx in all relevant fields, and is part of a workshop series that was created in order to promote cross-disciplinary research and awareness in the area. As such, since its beginning in 2012, the workshop has rotated between venues in different fields. \nImportant Dates \n \n Paper submission: Jan. 19th, 2018 (AoE) \n Author notification: Feb. 17th, 2018 \n Camera ready: TBA (around Mar 1st, 2018) \n Workshop: Apr. 10th, 2018 \n \nPlease refer to the CFP page for details. \nPrevious Bx Workshops \n \n Bx 2017 collocated with ETAPS\u201917 \n Bx 2016 collocated with ETAPS\u201916 \n Bx 2015 collocated with STAF\u201915 \n Bx 2014 collocated with IDBT/ICDT\u201914 \n Bx 2013 collocated with ETAPS\u201913 \n Bx 2012 collocated with ETAPS\u201912 \n",
      "Chairs": ["jensweber"],
      "ChairsString": "Jens Weber",
      "Day": "2018-04-10",
      "Items": [
        "bx-2018-papers-opening",
        "bx-2018-papers-confidentiality-in-the-process-of-model-driven-software-development",
        "bx-2018-papers-multimodel-correspondence-through-inter-model-constraints",
        "bx-2018-papers-on-the-development-of-consistent-user-interfaces"
      ],
      "Key": "77cc0ca9-997f-4af7-b8b5-203f70936f3c",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "08:50 - 10:30",
      "Title": "Bx 2018 - : Model Transformation",
      "Type": "Accepted Papers & Talks"
    },
    {
      "Abstract": "CoCoDo is not a workshop, it is a coding dojo. Instead of preparing a paper and giving a short presentation, participants will enjoy the entire day of programming. The topic of CoCoDo is compiler construction: the oldest branch of computer science, which has been accumulating useful techniques since 1950s. Compiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more. \nIt is a one-day co-located event for &lt;P&gt;, which will be mostly about participants programming solutions to small puzzle-like compiler construction problems. We will invite high profile speakers to introduce participants to chosen topics, get them into the flow and keep them there by guiding their advances, and let everyone enjoy very complex techniques in a relatively painless and utterly enjoyable manner. \nCoCoDo was successfully ran at &lt;P&gt;\u201917 with top compiler experts like Elizabeth Scott, Adrian Johnstone, Robby Findler, Ralf Lämmel, Anya Helene Bagge and others. \nMore details at https://cocodo.github.io/",
      "Day": "2018-04-09",
      "Items": ["cocodo-2018-dojo-rascal"],
      "Key": "f795eb03-378b-4e3d-a0a4-90e6b41ada31",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "14:30 - 16:00",
      "Title": "CoCoDo 2018 - : CoCoDo post-lunch",
      "Type": "Dojo"
    },
    {
      "Abstract": "Bidirectional transformations (bx) are a mechanism for maintaining the consistency of at least two related sources of information. Such sources can be relational databases, software models and code, or any other document following standard or ad-hoc formats. Bx are an emerging topic in a wide range of research areas, with prominent presence at top conferences in several different fields (namely databases, programming languages, software engineering, and graph transformation), but with results in one field often getting limited exposure in the others. Bx 2018 is a dedicated venue for bx in all relevant fields, and is part of a workshop series that was created in order to promote cross-disciplinary research and awareness in the area. As such, since its beginning in 2012, the workshop has rotated between venues in different fields. \nImportant Dates \n \n Paper submission: Jan. 19th, 2018 (AoE) \n Author notification: Feb. 17th, 2018 \n Camera ready: TBA (around Mar 1st, 2018) \n Workshop: Apr. 10th, 2018 \n \nPlease refer to the CFP page for details. \nPrevious Bx Workshops \n \n Bx 2017 collocated with ETAPS\u201917 \n Bx 2016 collocated with ETAPS\u201916 \n Bx 2015 collocated with STAF\u201915 \n Bx 2014 collocated with IDBT/ICDT\u201914 \n Bx 2013 collocated with ETAPS\u201913 \n Bx 2012 collocated with ETAPS\u201912 \n",
      "Chairs": ["kazutakamatsuda"],
      "ChairsString": "Kazutaka Matsuda",
      "Day": "2018-04-10",
      "Items": [
        "bx-2018-papers-an-axiomatic-basis-for-bidirectional-programming",
        "bx-2018-papers-profunctor-optics-and-the-yoneda-lemma",
        "bx-2018-papers-towards-sound-flexible-and-optimal-build-for-megamodels",
        "bx-2018-papers-closing"
      ],
      "Key": "28fc091b-9993-4e73-b938-d8dd25f6a744",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "16:30 - 18:10",
      "Title": "Bx 2018 - : Programming and Applications",
      "Type": "Accepted Papers & Talks"
    },
    {
      "Abstract": "Dialectics for new computer science \nSalon des Refusés (\u201cexhibition of rejects\u201d) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop aims to be the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nFormat and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission. We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: February 1, 2018 Extended to February 8, 2018 \n Notification of authors: February 17, 2018 Extended to February 24, 2018 \n Workshop at \u2039Programming\u203a 2017: April 9-12, 2018 \n Submission page is here \n \nThe program committee for the workshop will be announced soon, so please check back for more information! We will also soon share papers and critiques from the previous edition of the workshop, which should provide useful background (in no way exhaustive) for what format works well.",
      "Day": "2018-04-09",
      "Items": [
        "refuses-2018-papers-welcome-to-salon-des-refus-s",
        "refuses-2018-papers-files-as-directories-some-thoughts-on-accessing-structured-data-within-files",
        "refuses-2018-papers-critique-2-files-as-directories-some-thoughts-on-accessing-structured-data-within-files",
        "refuses-2018-papers-critique-files-as-directories-some-thoughts-on-accessing-structured-data-within-files"
      ],
      "Key": "b8a39a9c-b6b0-45a9-8c34-e118b95af20d",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "09:00 - 10:30",
      "Title": "Salon des Refusés 2018 - : Salon des Refusés 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Bidirectional transformations (bx) are a mechanism for maintaining the consistency of at least two related sources of information. Such sources can be relational databases, software models and code, or any other document following standard or ad-hoc formats. Bx are an emerging topic in a wide range of research areas, with prominent presence at top conferences in several different fields (namely databases, programming languages, software engineering, and graph transformation), but with results in one field often getting limited exposure in the others. Bx 2018 is a dedicated venue for bx in all relevant fields, and is part of a workshop series that was created in order to promote cross-disciplinary research and awareness in the area. As such, since its beginning in 2012, the workshop has rotated between venues in different fields. \nImportant Dates \n \n Paper submission: Jan. 19th, 2018 (AoE) \n Author notification: Feb. 17th, 2018 \n Camera ready: TBA (around Mar 1st, 2018) \n Workshop: Apr. 10th, 2018 \n \nPlease refer to the CFP page for details. \nPrevious Bx Workshops \n \n Bx 2017 collocated with ETAPS\u201917 \n Bx 2016 collocated with ETAPS\u201916 \n Bx 2015 collocated with STAF\u201915 \n Bx 2014 collocated with IDBT/ICDT\u201914 \n Bx 2013 collocated with ETAPS\u201913 \n Bx 2012 collocated with ETAPS\u201912 \n",
      "Chairs": ["perditastevens"],
      "ChairsString": "Perdita Stevens",
      "Day": "2018-04-10",
      "Items": [
        "bx-2018-papers-towards-a-visual-editor-for-lens-combinators",
        "bx-2018-papers-enhancing-the-jtl-tool-for-bidirectional-transformations",
        "bx-2018-papers-lightweight-data-sharing-system-based-on-bidirectional-transformations"
      ],
      "Key": "81fc2abe-a3e3-476d-9697-c29b1ddc6d71",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "14:30 - 16:00",
      "Title": "Bx 2018 - : Tools and Systems",
      "Type": "Accepted Papers & Talks"
    },
    {
      "Abstract": " \n \n   \n   \n    \n   Welcome to the 4th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/18 workshop, please note that the workshop will follow the Writers\u2019 Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and specification including performance goals and perhaps a platform and programming language. A group of developers head into a vast workroom. In that room they design and code\u2014and sometimes they discover they need to explore the domain and the nature of potential solutions. \nThe Programming Experience (PX) Workshop is about what happens in that room when one or a couple of programmers sit down in front of computers and produce code. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (\u201cliveness\u201d); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n liveness \n domain-specific languages \n psychology of programming \n user studies \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n error tolerance \n non-standard tools \n experience of programming \n exploratory programming \n \nThe experience of programming and how to improve and evolve it are the focus of this workshop, and in this edition we would like to focus on exploratory programming. \nPrevious editions \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at &lt;Programming&gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px18/media/PX18CfP.pdf \nhttp://programming-experience.org/px18/ \n \nWe welcome the organizers of LIVE-18 to our program committee to help us build a lively, programming experience community.",
      "Day": "2018-04-10",
      "Items": [
        "px-2018-papers-acid-for-programmers-",
        "px-2018-papers-attention-patterns-for-code-animations",
        "px-2018-papers-reactive-programming-experience-with-rescala",
        "px-2018-papers-social-programming-considered-as-a-habitat-for-groups"
      ],
      "Key": "f0739ce2-933e-407f-9e59-96e37e12700f",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "09:00 - 10:30",
      "Title": "PX/18 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Dialectics for new computer science \nSalon des Refusés (\u201cexhibition of rejects\u201d) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop aims to be the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nFormat and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission. We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: February 1, 2018 Extended to February 8, 2018 \n Notification of authors: February 17, 2018 Extended to February 24, 2018 \n Workshop at \u2039Programming\u203a 2017: April 9-12, 2018 \n Submission page is here \n \nThe program committee for the workshop will be announced soon, so please check back for more information! We will also soon share papers and critiques from the previous edition of the workshop, which should provide useful background (in no way exhaustive) for what format works well.",
      "Day": "2018-04-09",
      "Items": [
        "refuses-2018-papers-semprola-a-semiotic-programming-language",
        "refuses-2018-papers-critique-semprola-a-semiotic-programming-language"
      ],
      "Key": "979d622e-7a18-4779-b379-faaae31fbe66",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A",
      "Time": "16:30 - 18:00",
      "Title": "Salon des Refusés 2018 - : Salon des Refusés 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2018-04-09",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "853b7d04-29db-4428-b9eb-bae3d3277911",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "12:30 - 14:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "",
      "Day": "2018-04-12",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "2f8d1e2f-a0a2-46d4-b5cf-e89b63e50306",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "15:00 - 15:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "",
      "Day": "2018-04-10",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "b73d4725-59f1-44be-9ee1-b116c6edd358",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "16:00 - 16:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "",
      "Day": "2018-04-12",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "be8f643f-100e-4e9c-961c-b691794effa4",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "10:00 - 10:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "",
      "Day": "2018-04-11",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "850fe06b-b229-4d91-a793-52711ed8c020",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "15:00 - 15:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "",
      "Day": "2018-04-11",
      "Items": [
        "programming-2018-posters-runtime-verification-of-flow-based-programming-for-the-internet-of-things",
        "programming-2018-posters-programming-virtual-musical-instruments-and-audio-effects-in-the-web-browser",
        "programming-2018-posters-fault-tolerant-reactive-programming",
        "programming-2018-posters-visast-generic-ast-visualizer-for-software-language-education",
        "programming-2018-posters-distributed-reactive-applications-with-scalaloci",
        "programming-2018-posters-automating-testing-of-programming-assignments",
        "programming-2018-posters-software-programs-software-behaviour-as-an-emergent-property"
      ],
      "Key": "5ebced80-19da-4731-b52e-235f1f32bd29",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges B",
      "Time": "10:00 - 10:30",
      "Title": "Posters: Posters",
      "Type": "Posters"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-12",
      "Items": [
        "programming-2018-papers-pie-a-domain-specific-language-for-interactive-software-development-pipelines",
        "programming-2018-papers-description-languages-for-consistency-management-scenarios-based-on-examples-from-the-industry-automation-domain"
      ],
      "Key": "80a8dcb5-8000-4d2c-af2d-06f03ce6948d",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "15:30 - 16:30",
      "Title": "Research Papers: Session 6",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-11",
      "Items": [
        "programming-2018-papers-search-based-tier-assignment-for-optimising-offline-availability-in-multi-tier-web-applications",
        "programming-2018-papers-on-the-effect-of-semantically-enriched-context-models-on-software-modularization",
        "programming-2018-papers-harmonizing-signals-and-events-with-a-lightweight-extension-to-java"
      ],
      "Key": "aa00620c-c713-499c-bb45-6a04fdabcd5b",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "15:30 - 17:00",
      "Title": "Research Papers: Session 3",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-11",
      "Items": [
        "programming-2018-papers-lisp-jazz-aikido-three-expressions-of-a-single-essence",
        "programming-2018-papers-live-multi-language-development-and-runtime-environments",
        "programming-2018-papers-deadlock-free-typestate-oriented-programming"
      ],
      "Key": "a8160ff6-f630-45e9-a361-95ac873f1a8b",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "13:45 - 15:00",
      "Title": "Research Papers: Session 2",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-11",
      "Items": [
        "programming-2018-papers-scoped-extension-methods-in-dynamically-typed-languages",
        "programming-2018-papers-towards-zero-overhead-disambiguation-of-deep-priority-conflicts",
        "programming-2018-papers-language-integrated-provenance-in-haskell"
      ],
      "Key": "3199f279-1966-4349-a4b6-5c70e92f6664",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "10:30 - 12:00",
      "Title": "Research Papers: Session 1",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-12",
      "Items": [
        "programming-2018-papers-live-multi-language-development-and-runtime-environments",
        "programming-2018-papers-what-we-talk-about-when-we-talk-about-monads",
        "programming-2018-papers-deadlock-free-typestate-oriented-programming"
      ],
      "Key": "a4c4ae73-4a2e-450b-83c0-c74518c89e8d",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "13:45 - 15:00",
      "Title": "Research Papers: Session 5",
      "Type": "Presentations"
    },
    {
      "Abstract": "The Research Papers track features presentations from authors of papers accepted at the upcoming The Art, Science, and Engineering of Programming journal. Interested authors should submit their papers to that journal, and choose this year\u2019s Program Chair (Guido Salvaneschi) as the handling editor for their papers. \nIn order to present at \u2039Programming\u203a 2018, papers must be submitted to the first, second or third 2018 issue of that journal (timeline).",
      "Day": "2018-04-12",
      "Items": [
        "programming-2018-papers-fast-flexible-polyglot-instrumentation-support-for-debuggers-and-other-tools",
        "programming-2018-papers-proactive-empirical-assessment-of-new-language-feature-adoption-via-automated-refactoring-the-case-of-java-8-default-methods",
        "programming-2018-papers-introspection-for-c-and-its-applications-to-library-robustness"
      ],
      "Key": "36f9fa57-e25e-4741-a510-d059bd57f454",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "10:30 - 12:00",
      "Title": "Research Papers: Session 4",
      "Type": "Presentations"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-10",
      "Items": ["programming-2018-organizational-steering-committee-meeting"],
      "Key": "0f0e3a5a-3fb5-4b62-8808-a62c9bdff6fb",
      "Location": "Boscolo B4 Plaza, Nice | Matisse",
      "Time": "19:00 - 22:00",
      "Title": "Organizational: Steering Committee Meeting",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-12",
      "Items": ["programming-2018-organizational-registration"],
      "Key": "2b56308b-fc27-4aff-a331-3d9c5cbd7790",
      "Location": "Boscolo B4 Plaza, Nice | Registration (Lobby)",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-11",
      "Items": ["programming-2018-organizational-registration"],
      "Key": "7394b0bc-9eca-4391-b209-8b8e65ef8bbc",
      "Location": "Boscolo B4 Plaza, Nice | Registration (Lobby)",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-11",
      "Items": ["programming-2018-organizational-conference-opening"],
      "Key": "d3941347-e941-4687-a2a7-fda44942cb65",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "08:45 - 09:00",
      "Title": "Organizational: Opening",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-12",
      "Items": ["programming-2018-organizational-conference-closing"],
      "Key": "596b334c-1809-43d3-8231-4caa2c56610a",
      "Location": "Boscolo B4 Plaza, Nice | Baie des Anges A + B",
      "Time": "16:30 - 17:00",
      "Title": "Organizational: Closing",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-10",
      "Items": ["programming-2018-organizational-registration"],
      "Key": "f7dbc80f-3c3a-472a-9136-25e8119de258",
      "Location": "Boscolo B4 Plaza, Nice | Registration (Lobby)",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "Organizational",
      "Day": "2018-04-09",
      "Items": ["programming-2018-organizational-registration"],
      "Key": "62cf3e36-88ae-4452-a6ce-ba60c7faceb4",
      "Location": "Boscolo B4 Plaza, Nice | Registration (Lobby)",
      "Time": "08:00 - 17:00",
      "Title": "Organizational: Registration",
      "Type": "Meetings"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-11",
      "Items": ["programming-2018-catering-break"],
      "Key": "4cb9654e-d688-49ce-89d8-fdd475263a09",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-10",
      "Items": ["programming-2018-catering-break"],
      "Key": "6ba14830-5ed7-41f6-b86e-d84f69833e08",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "16:00 - 16:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-10",
      "Items": ["programming-2018-catering-break"],
      "Key": "fb7acb0c-1174-4253-af21-0d6e05857107",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "10:30 - 11:00",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-12",
      "Items": ["programming-2018-catering-break"],
      "Key": "c4e9656e-40e6-4c0a-9849-04b6b8d8fc63",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-09",
      "Items": ["programming-2018-catering-break"],
      "Key": "70ed6c9f-7b71-4853-b62f-360b1a841443",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "10:30 - 11:00",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-12",
      "Items": ["programming-2018-catering-lunch"],
      "Key": "1cd9c1ea-d042-4beb-b50c-ea38ef3ff1d7",
      "Location": "Boscolo B4 Plaza, Nice | Restaurant (Rooftop)",
      "Time": "12:00 - 13:45",
      "Title": "Catering: Lunch",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-11",
      "Items": ["programming-2018-catering-break"],
      "Key": "69a81617-5f9e-405c-8541-cae6077ae777",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-11",
      "Items": ["programming-2018-catering-lunch"],
      "Key": "14f77b18-c4c2-4ce6-9369-bcfb878a7a0f",
      "Location": "Boscolo B4 Plaza, Nice | Restaurant (Rooftop)",
      "Time": "12:00 - 13:45",
      "Title": "Catering: Lunch",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-12",
      "Items": ["programming-2018-catering-break"],
      "Key": "dddb1790-fc87-4efe-81ba-6e9439f6e4b6",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "15:00 - 15:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-09",
      "Items": ["programming-2018-catering-lunch"],
      "Key": "0dfd7e3f-3c9d-4983-bf05-1b7b8fd19b2e",
      "Location": "Boscolo B4 Plaza, Nice | Restaurant (Rooftop)",
      "Time": "12:30 - 14:30",
      "Title": "Catering: Lunch",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-09",
      "Items": ["programming-2018-catering-break"],
      "Key": "75960b43-fe4c-4d7d-aa3b-c1d8a08c2f55",
      "Location": "Boscolo B4 Plaza, Nice | Lobby",
      "Time": "16:00 - 16:30",
      "Title": "Catering: Coffee Break",
      "Type": "Catering"
    },
    {
      "Abstract": "Lunch, Coffee-breaks",
      "Day": "2018-04-10",
      "Items": ["programming-2018-catering-lunch"],
      "Key": "438e83e2-6bc2-4377-87c7-9409bb2909d1",
      "Location": "Boscolo B4 Plaza, Nice | Restaurant (Rooftop)",
      "Time": "12:30 - 14:30",
      "Title": "Catering: Lunch",
      "Type": "Catering"
    }
  ],
  "Sponsors": "Oracle, ACM, SIGPLAN, SIGSOFT, INRIA, Université Côte d\u2019Azur, AOSA",
  "URL": "https://2018.programming-conference.org/home",
  "VenueInfo": {"Name": "Boscolo B4 Plaza, Nice", "GPS": {"Latitude": 43.6969711, "Longitude": 7.2593442}}
}